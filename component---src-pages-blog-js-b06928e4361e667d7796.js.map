{"version":3,"sources":["webpack:///./src/components/Badge.js","webpack:///./src/components/Tag.js","webpack:///./node_modules/lodash/_basePropertyOf.js","webpack:///./node_modules/lodash/words.js","webpack:///./src/components/Layout.js","webpack:///./node_modules/lodash/_unicodeWords.js","webpack:///./node_modules/lodash/kebabCase.js","webpack:///./src/components/Bio.js","webpack:///./node_modules/lodash/deburr.js","webpack:///./node_modules/lodash/_asciiWords.js","webpack:///./node_modules/lodash/_hasUnicodeWord.js","webpack:///./node_modules/lodash/_deburrLetter.js","webpack:///./node_modules/lodash/_createCompounder.js","webpack:///./src/pages/blog.js"],"names":["BadgeDiv","styled","div","ValueDiv","Badge","render","value","this","props","React","Component","TagContainer","TagButton","Tag","className","style","padding","display","width","to","tag","undefined","module","exports","object","key","asciiWords","hasUnicodeWord","toString","unicodeWords","string","pattern","guard","match","Layout","header","location","title","children","pathname","scale","marginBottom","rhythm","marginTop","textAlign","boxShadow","textDecoration","color","fontFamily","marginLeft","marginRight","maxWidth","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","reOptMod","rsModifier","rsSeq","join","rsEmoji","reUnicodeWord","RegExp","kebabCase","createCompounder","result","word","index","toLowerCase","Bio","src","profilePic","alt","height","borderRadius","gridTemplateColumns","lineHeight","gridColumnStart","gridColumnEnd","gridRow","deburrLetter","reLatin","reComboMark","replace","reAsciiWord","reHasUnicodeWord","test","basePropertyOf","arrayReduce","deburr","words","reApos","callback","BlogIndex","data","siteTitle","site","siteMetadata","siteDescription","description","posts","allMarkdownRemark","edges","fontSize","htmlAttributes","lang","meta","name","content","map","post","node","frontmatter","fields","slug","path","tags","tagsContainer","length","date","dangerouslySetInnerHTML","__html","excerpt"],"mappings":"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","file":"component---src-pages-blog-js-b06928e4361e667d7796.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst BadgeDiv = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0px;\n  width: 12px;\n  height: 12px;\n  font-size: 5pt;\n  text-align: center;\n  vertical-align: middle;\n  border-radius: 50%;\n  background-color: #3d93f6;\n  color: white;\n  pointer-events: none;\n`\n\nconst ValueDiv = styled.div`\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n`\n\n// Import typefaces\nimport 'typeface-montserrat'\nimport 'typeface-merriweather'\n\nclass Badge extends React.Component {\n  render() {\n    const { value } = this.props\n    return (\n      <BadgeDiv>\n        <ValueDiv>\n          {value}\n        </ValueDiv>\n      </BadgeDiv>\n    )\n  }\n}\n\nexport default Badge\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport { kebabCase } from 'lodash'\n\nimport Badge from './Badge'\n\nconst TagContainer = styled.div`\n  display: inline-block;\n  padding-left: 1px;\n  padding-right: 1px;\n  font-size: 0.8em;\n  a {\n    color: inherit;\n  }\n  text-align: center;\n`\n\nconst TagButton = styled.div`\n  border: 0;\n  border-radius: 5px;\n  padding: 0;\n  background-color: #e8e8e7;\n  &:hover {\n    color: #fff !important;\n    background-color: #3d93f6;\n  }\n  position: relative;\n  width: 100%;\n  font-weight: bolder;\n`\n\n// Import typefaces\nimport 'typeface-montserrat'\nimport 'typeface-merriweather'\n\nclass Tag extends React.Component {\n  render() {\n    return (\n      <TagContainer>\n        <TagButton className=\"tag-button\">\n          <Link style={{padding: '0.1vw 0.7vw', display: 'inline-block', width: '100%'}} to={`/tags/${kebabCase(this.props.tag)}`}>{this.props.tag}</Link>\n          {(this.props.value !== undefined) && <Badge value={this.props.value}/>}\n        </TagButton>\n      </TagContainer>\n    )\n  }\n}\n\nexport default Tag\n","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { rhythm, scale } from '../utils/typography'\n\nimport \"./Layout.css\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n            textAlign: 'center'\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: 'none',\n              textDecoration: 'none',\n              color: 'inherit',\n            }}\n            to={'/'}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: 'Montserrat, sans-serif',\n            marginTop: 0,\n            marginBottom: rhythm(-1),\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: 'none',\n              textDecoration: 'none',\n              color: 'inherit',\n            }}\n            to={'/'}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div style={{\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: rhythm(24),\n        padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n      }}>\n        {header}\n        {children}\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n","import React from 'react'\n\n// Import typefaces\nimport 'typeface-montserrat'\nimport 'typeface-merriweather'\n\nimport profilePic from './profile.jpg'\nimport { rhythm } from '../utils/typography'\n\nclass Bio extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          marginTop: rhythm(2),\n          marginBottom: rhythm(2.5),\n        }}\n      >\n        <img\n          src={profilePic}\n          alt={`Richard Law`}\n          style={{\n            marginRight: rhythm(1 / 2),\n            marginBottom: 0,\n            // width: rhythm(2),\n            marginTop: rhythm(0.5),\n            marginBottom: rhythm(1),\n            height: rhythm(2),\n            borderRadius: '50%'\n          }}\n        />\n        <div>\n          Welcome to the blog and personal website of <strong>Richard Law</strong>, a geographer/programmer who\n          <div style={{\n            display: 'grid',\n            gridTemplateColumns: 'repeat(5, 1fr)',\n            fontFamily: 'monospace',\n            lineHeight: '0.8em',\n            textAlign: 'center'\n          }}>\n            <div style={{gridColumnStart: 1, gridColumnEnd: 2, gridRow: 1}}>eats</div>\n            <div style={{gridColumnStart: 2, gridColumnEnd: 3, gridRow: 2}}>sleeps</div>\n            <div style={{gridColumnStart: 3, gridColumnEnd: 4, gridRow: 1}}>raves</div>\n            <div style={{gridColumnStart: 4, gridColumnEnd: 5, gridRow: 2}}>repeats</div>\n          </div>\n          in the Manawatū, New Zealand.\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Bio\n","var deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","var basePropertyOf = require('./_basePropertyOf');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 's'\n};\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\nmodule.exports = deburrLetter;\n","var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport { rhythm } from '../utils/typography'\nimport Tag from '../components/Tag'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const data = this.props.data;\n    const siteTitle = data.site.siteMetadata.title\n    const siteDescription = data.site.siteMetadata.description\n    const posts = data.allMarkdownRemark.edges\n    return (\n      <Layout location={this.props.location} title={siteTitle} style={{fontSize: '5vw'}}>\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={siteTitle}\n        />\n        <Bio />\n        {\n          posts.map(post => {\n            const title = post.node.frontmatter.title || post.node.fields.slug\n            const path = post.node.frontmatter.path || post.node.fields.slug\n            const tags = post.node.frontmatter.tags || []\n            const tagsContainer = tags.length ? (\n              <div>\n                <div style={{fontSize: 'x-small'}}><strong>See other posts tagged with</strong></div>\n                {\n                  tags.map(tag => (\n                    <Tag key={tag} tag={tag}/>\n                  ))\n                }\n              </div>\n            ) : null\n            return (\n              <div key={post.node.fields.slug}>\n                <div>\n                  <h3\n                    style={{\n                      marginBottom: rhythm(1 / 4),\n                    }}\n                  >\n                    <Link style={{ boxShadow: 'none' }} to={path}>\n                      {title}\n                    </Link>\n                  </h3>\n                  <small>{post.node.frontmatter.date}</small>\n                  <p dangerouslySetInnerHTML={{ __html: post.node.excerpt }} />\n                </div>\n                {tagsContainer}\n              </div>\n            )\n          })\n        }\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            updated(formatString: \"MMMM DD, YYYY\")\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}