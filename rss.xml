<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Spatial Paralysis]]></title><description><![CDATA[Spatial Paralysis]]></description><link>https://spatialparalysis.xyz</link><generator>GatsbyJS</generator><lastBuildDate>Mon, 17 May 2021 10:29:14 GMT</lastBuildDate><item><title><![CDATA[ELI5: Discrete Global Grid System (DGGS)]]></title><description><![CDATA[Discrete Global Grids (DGGs) are imaginary mosaics that divide up the surface of a globe. We call each piece of the mosaic a "cell" or "zone…]]></description><link>https://spatialparalysis.xyz/blog/dggs-eli5/</link><guid isPermaLink="false">https://spatialparalysis.xyz/blog/dggs-eli5/</guid><pubDate>Thu, 14 Jan 2021 11:55:00 GMT</pubDate><content:encoded>&lt;p&gt;Discrete Global Grids (DGGs) are imaginary mosaics that divide up the surface of a globe. We call each piece of the mosaic a &quot;cell&quot; or &quot;zone&quot; and give it a unique identifier, like a social security number.&lt;/p&gt;
&lt;p&gt;The DGG is created carefully so that given the ID of any cell, you can determine the IDs of the cells that are next to it. This makes many kinds of spatial interrogation easier, since we have hidden away the shape of the cell.&lt;/p&gt;
&lt;p&gt;Some DGGs, probably the more useful kind, are also &lt;strong&gt;hierarchical&lt;/strong&gt;. This is when each cell contains another mosaic of cells, and is itself part of a bigger cell (just like your parents both have parents, and children). This relationship can keep going (we call that &quot;recursive&quot;) as the cells get smaller and smaller in terms of the area of the Earth that they each represent.&lt;/p&gt;
&lt;p&gt;There is a similar concept for rasters called &quot;pyramids&quot;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://desktop.arcgis.com/en/arcmap/10.3/manage-data/raster-and-images/GUID-C0C7AE57-89F4-4F71-82C4-062E67CF2349-web.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;So what&apos;s the difference? Pyramids are lower resolution versions of a higher-resolution dataset. They are used to make it faster to draw and study spatial data. Constructing pyramids is to construct &quot;resampled&quot; versions of your highest-resolution data, using well-known methods of resampling. But pyramids are not used to construct &lt;em&gt;higher&lt;/em&gt; resolution versions of your data.&lt;/p&gt;
&lt;p&gt;Pyramids are not created on-the-fly, but must be made before they can be used. Pyramids are usually stored in a file kept alongside the source dataset. Examples include an &lt;code&gt;.ovr&lt;/code&gt; (overview) or &lt;code&gt;.rrd&lt;/code&gt; (reduced resolution dataset). Pyramid files, like the source raster, can additionally be compressed. Raster formats with &lt;a href=&quot;https://en.wikipedia.org/wiki/Wavelet_compression&quot;&gt;wavelet-compression&lt;/a&gt; (including JPEG 2000) actaully have &quot;internal&quot; pyramids—they don&apos;t need a pyramid file that sits next to the source file.&lt;/p&gt;
&lt;p&gt;The primary difference between a raster pyramid and a hierarchical DGG is that the layers of a hierarchical DGG are not required to be or are not &lt;em&gt;only&lt;/em&gt; downsampled versions of some higher-resolution dataset. Each layer of the hierarchical DGG could contain &lt;em&gt;different&lt;/em&gt; attributes. For example, a hierarchical DGG with landuse information for each cell might, at a high level, use very broad or mixed classifications, such as &quot;orcharding&quot;. As you step down through the levels, cells with an &quot;orcharding&quot; parent may be further resolved into &quot;kiwfruit orcharding&quot;, &quot;viticulture&quot;, etc. Further still we might discriminate between features within an orchard, such as sheds, access roads, shelter belts, and actual plants.&lt;/p&gt;
&lt;p&gt;There is nothing that prevents a hierarchical DGG being used in a similar way to a raster pyramids, particularly if the hierarchical DGG cells contain continuous measurement data. But what&apos;s nice about hierarchical DGGs is that you aren&apos;t &lt;em&gt;limited&lt;/em&gt; to that kind of downsampling.&lt;/p&gt;
&lt;p&gt;Using a hierarchical DGG there is also no need to always downsample a cell; we can simply keep the large cell around without further work to split into smaller and smaller pieces—if these pieces would have the same value as the larger cell. This is just like how in some styles of mosaic, you can get away with using large blue pieces to represent a sea. This is called compacting.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/b/b0/Great_Britain_Box-hiearchy.png/380px-Great_Britain_Box-hiearchy.png&quot; alt=&quot;Hierarchical grid of Great Britain&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://1fykyq3mdn5r21tpna3wkdyi-wpengine.netdna-ssl.com/wp-content/uploads/2018/06/image23-1-e1530032642786-294x300.png&quot; alt=&quot;Uncompacted H3 index of California&quot;&gt;&lt;img src=&quot;https://1fykyq3mdn5r21tpna3wkdyi-wpengine.netdna-ssl.com/wp-content/uploads/2018/06/image11-1-286x300.png&quot; alt=&quot;Compacted H3 index of California&quot;&gt;&lt;/p&gt;
&lt;p&gt;(Advanced readers may be interested in learning about the idea of &lt;a href=&quot;https://en.wikipedia.org/wiki/R-tree&quot;&gt;R-trees&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Hilbert_curve&quot;&gt;Hilbert curves&lt;/a&gt;, which also relate to the hierarchical division of space: a &lt;strong&gt;graph&lt;/strong&gt; data structure.)&lt;/p&gt;
&lt;!-- http://www.digizeitschriften.de/dms/img/?PPN=PPN235181684_0038&amp;DMDID=dmdlog40 --&gt;
&lt;p&gt;&lt;img src=&quot;http://s2geometry.io/devguide/img/hilbert-figure.gif&quot; alt=&quot;Hilbert curve&quot;&gt;&lt;/p&gt;
&lt;p&gt;Now we can start to see what makes a DGG similar to &lt;em&gt;both&lt;/em&gt; raster &lt;em&gt;and&lt;/em&gt; vector data. Like vector data, each cell has an identifier and can therefore be associated with any kind of data. Like raster data pyramids, each layer of a hierarchical DGG allows for more detail to emerge.&lt;/p&gt;
&lt;h3&gt;Discrete &lt;em&gt;Global&lt;/em&gt; Grids?&lt;/h3&gt;
&lt;p&gt;So far we have been talking about discrete global grids and have shown that they are &lt;em&gt;discrete&lt;/em&gt; (each cell is distinct from each other cell) and form a regular &lt;em&gt;grid&lt;/em&gt; (each cell has neighbour cells, and for hierarchical DGGs also &quot;child&quot; and &quot;parent&quot; cells). But we have not explained why they are &lt;strong&gt;global&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;When making maps of the planet, we have to have some idea of what the planet looks like: how big it is, how round it is, how lumpy it is. This idea of the planet&apos;s shape and size is called a &lt;em&gt;datum&lt;/em&gt;. Sometimes we need to look at or think about the Earth as being flat (for example, showing maps on flat screens and in books), and like peeling an orange and trying to get all the pieces to lie flat, it&apos;s not possible to do this without ripping it apart.&lt;/p&gt;
&lt;p&gt;But if we instead pretend that the planet is like a &lt;a href=&quot;https://en.wikipedia.org/wiki/Regular_polyhedron&quot;&gt;special &quot;pointy orange&quot;&lt;/a&gt;, we can get past some problems. One of the best problems we solve is one about how we can keep track of what each faces each of the special pointy orange faces touch: we call this &lt;em&gt;topology&lt;/em&gt;. The best thing about the special pointy oranges is that they don&apos;t have gaps, yet still sort of look like balls, if you squint and enough faces are used.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/7/73/Dodecahedron.gif&quot; alt=&quot;Regular polyhedron example: dodecahedron&quot;&gt;&lt;/p&gt;
&lt;p&gt;The special pointy orange used to represent the Earth can be made up of different cell shapes, the same as how a mosaic wall can be made of differently-shaped tiles (rectangles, triangles, hexagons). However, we try to avoid using a random selection of shapes, as if the shapes are all the same then it is really fast for us to use computers to tell us things like &quot;what cells are next to this cell?&quot;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://edwardfhughes.files.wordpress.com/2014/02/platonic-solids.jpg&quot; alt=&quot;Platonic solids&quot;&gt;&lt;/p&gt;
&lt;p&gt;Different kinds of special pointy oranges are more useful than others. One thing we often want to do is to consider each cell to represent the same size area of the Earth. This is a really handy thing to do when counting things on Earth: if the cells were not the same size, larger cells would be more likely to have things inside them, just because they&apos;re bigger. One DGG that does this equal-area stuff is called &lt;strong&gt;HEALPix&lt;/strong&gt; (&lt;strong&gt;h&lt;/strong&gt;ierarchical &lt;strong&gt;e&lt;/strong&gt;qual &lt;strong&gt;a&lt;/strong&gt;rea iso&lt;strong&gt;l&lt;/strong&gt;atitude &lt;strong&gt;pix&lt;/strong&gt;elisation of a sphere), invented by some people at NASA.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://healpix.jpl.nasa.gov/images/healpixGridRefinement.jpg&quot; alt=&quot;HEALPix&quot;&gt;&lt;/p&gt;
&lt;p&gt;HEALPix begins with 12 base cells. Each level divides these into four smaller ones.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://healpix.jpl.nasa.gov/images/gorski_f1.jpg&quot; alt=&quot;HEALPix&quot;&gt;&lt;/p&gt;
&lt;p&gt;HEALPix only works with &lt;em&gt;spheres&lt;/em&gt;: perfectly round balls. Although it looks like it is, Earth is not actually a sphere; it is more like an &quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ellipsoid&quot;&gt;ellipsoid&lt;/a&gt;&quot;. A group of New Zealanders (Gibb, Raichev &amp;#x26; Speth) have taken the idea of HEALPix and made an alternative that works with ellipsoids. (Specifically, with &quot;ellipsoids of revolution&quot;, which is where two axes of the ellipsoid have the same length. In reality, the Earth isn&apos;t an ellipsoid of revolution: since the third axis is shorter than the second, it is closer to an &quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/Spheroid#Oblate_spheroids&quot;&gt;oblate spheroid&lt;/a&gt;&quot;. The WGS84 ellipsoid, which you&apos;ve probably used &lt;em&gt;a lot&lt;/em&gt; is an ellipsoid of revolution, so it&apos;s not like this is a huge problem.) rHEALPix does this without losing any of the other things people like about HEALPix.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/3/33/Ellipsoide.svg/400px-Ellipsoide.svg.png&quot; alt=&quot;Sphere, ellipsoid, oblate spheroid&quot;&gt;&lt;/p&gt;
&lt;p&gt;Not happy to just leave it there, rHEALPix is also able to be flattened out to a series of squares that are nicely aligned vertically and horizontally, like a tower of square blocks. Each of these squares contains some more squares (it is hierarchical). This makes rHEALPix easy for a computer to draw on a screen.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;A little aside&lt;/h3&gt;
&lt;p&gt;A lot of this thinking stems from work done by futurist architect Richard (R.) Buckminster Fuller. He is an interesting character in this story. He designed a geodesic dome known as the &lt;a href=&quot;https://en.wikipedia.org/wiki/Montreal_Biosphere&quot;&gt;&lt;em&gt;La Biosphère&lt;/em&gt;&lt;/a&gt;, which is home to a museum of the environment. In 1927, when experiencing a dark night of the soul and contemplating suicide, he has &lt;a href=&quot;https://en.wikipedia.org/wiki/Buckminster_Fuller#cite_note-Sieden-p87-88-12&quot;&gt;claimed&lt;/a&gt; to have felt himself suspended several feet above the ground, enclosed in a white sphere of light. A voice spoke directly to him:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;From now on you need never await temporal attestation to your thought. You think the truth. You do not have the right to eliminate yourself. You do not belong to you. You belong to the Universe. Your significance will remain forever obscure to you, but you may assume that you are fulfilling your role if you apply yourself to converting your experiences to the highest advantage of others.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;However, this account was not recorded by Fuller himself at the time he claims it occurred; and this is relevant because Fuller has the most self-documented life in human history—&lt;a href=&quot;https://en.wikipedia.org/wiki/Dymaxion_Chronofile&quot;&gt;&lt;em&gt;literally&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/4/4b/17-08-islcanus-RalfR-DSC_3883.jpg/1024px-17-08-islcanus-RalfR-DSC_3883.jpg&quot; alt=&quot;The Montreal Biosphere&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;!-- Doesn&apos;t flow... --&gt;
&lt;p&gt;The benefits of using squares in HEALPix doesn&apos;t mean that a different DGG that uses triangles or hexagons is worse. Choosing the best one for you depends on what you need to do. rHEALPix is based on squares, and each square in a grid of squares has &lt;em&gt;eight&lt;/em&gt; neighbours, but &lt;em&gt;only four&lt;/em&gt; of them share a side. A grid of triangles has a similar issue, with even more neighbours. Instead, a grid based on hexagons may be better since &lt;em&gt;all six&lt;/em&gt; neighbours of a hexagon share a side. So if you&apos;re thinking about a problem to do with movement, or if you only want to consider one type of cell neighbour, then a DGG with hexagon cells may be better than one with square or triangle cells.&lt;/p&gt;
&lt;p&gt;There is no DGGS that is perfect for every job. Hexagons are bad because it is not possible to make a perfect-shape hierarchical DGG with hexagons: you cannot form a large hexagon out of small hexagons. This does not make such a DGG bad. Actually, this is exactly what Uber uses for its &lt;a href=&quot;https://eng.uber.com/h3/&quot;&gt;H3 grid&lt;/a&gt;, where aligned shapes aren&apos;t as important as an abstract hierarchy, or the use of touching shapes for studying movement.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://1fykyq3mdn5r21tpna3wkdyi-wpengine.netdna-ssl.com/wp-content/uploads/2018/06/Twitter-H3-768x384.png&quot; alt=&quot;H3&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./etopo.png&quot; alt=&quot;ETOPO&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Afterword&lt;/h2&gt;
&lt;p&gt;A &lt;em&gt;hierarchical DGG&lt;/em&gt; is also called a discrete gobal grid &lt;strong&gt;system&lt;/strong&gt;, or &lt;em&gt;DGGS&lt;/em&gt;. I prefer &quot;hierarchical DGG&quot; and not &quot;DGGS&quot; here because it&apos;s clearer about the difference between a DGG with one level, and a DGGS with nested (&quot;hierarchical&quot;) levels.&lt;/p&gt;
&lt;p&gt;This has been written with help from xkcd&apos;s &lt;a href=&quot;https://xkcd.com/simplewriter/&quot;&gt;&lt;strong&gt;Simple Writer&lt;/strong&gt;&lt;/a&gt;, which tells me when I use difficult words. I have left some difficult words in because I could not think of words or phrases that I liked better. I&apos;m not a technical writer by profession, so this is my best attempt at a general purpose introduction to DGGs.&lt;/p&gt;
&lt;h2&gt;Bibliography&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://desktop.arcgis.com&quot;&gt;https://desktop.arcgis.com&lt;/a&gt;. 2021. &lt;em&gt;Raster Pyramids&lt;/em&gt;. Available at: &lt;a href=&quot;https://desktop.arcgis.com/en/arcmap/10.3/manage-data/raster-and-images/raster-pyramids.htm&quot;&gt;https://desktop.arcgis.com/en/arcmap/10.3/manage-data/raster-and-images/raster-pyramids.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;JPL. &lt;em&gt;Jet Propulsion Laboratory HEALPix Home Page&lt;/em&gt;. Available at: &lt;a href=&quot;https://healpix.jpl.nasa.gov&quot;&gt;https://healpix.jpl.nasa.gov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://datastore.landcareresearch.co.nz/dataset/rhealpix-discrete-global-grid-system/resource/f6e5726d-07be-460f-89be-bf1c84310972&quot;&gt;The rHEALPix discrete global grid system&lt;/a&gt;, Robert Gibb, Alexander Raichev, and Michael Speth, unpublished notes, May 2013.&lt;/li&gt;
&lt;li&gt;Uber Engineering. 2021. &lt;em&gt;H3: Uber&apos;s Hexagonal Hierarchial Spatial Index&lt;/em&gt;. Available at: &lt;a href=&quot;https://eng.uber.com/h3/&quot;&gt;https://eng.uber.com/h3/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;S2 Geometry. 2021. &lt;em&gt;S2 Geometry Home Page&lt;/em&gt;. Available at: &lt;a href=&quot;http://s2geometry.io/&quot;&gt;http://s2geometry.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://webpages.sou.edu/~sahrk/sqspc/pubs/gdggs03.pdf&quot;&gt;Geodesic Discrete Global Grid Systems&lt;/a&gt;, Kevin Sahr, Denis White, and A. Jon Kimerling. Cartography and Geographic Information Sciene, vol. 30, no. 2, 2003, pp. 121–134.&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Recently]]></title><description><![CDATA[Reading Whitcoulls, a major bookstore chain in New Zealand, decided to stop selling Jordan Petersen's book 12 Rules for Life following the…]]></description><link>https://spatialparalysis.xyz/blog/recently/2019-07-30/</link><guid isPermaLink="false">https://spatialparalysis.xyz/blog/recently/2019-07-30/</guid><pubDate>Tue, 30 Jul 2019 21:30:00 GMT</pubDate><content:encoded>&lt;h2&gt;Reading&lt;/h2&gt;
&lt;p&gt;Whitcoulls, a major bookstore chain in New Zealand, decided to stop selling Jordan Petersen&apos;s book &lt;em&gt;12 Rules for Life&lt;/em&gt; following the tragic mosque attack in Christchurch. Does his book have some kind of anti-Islamic bent? No, it does not. It only mentions Islam once, and that mention is &lt;em&gt;positive&lt;/em&gt;. The reason for the ban is because someone wearing an &quot;I&apos;m a proud Islamaphobe&quot; t-shirt posed for a picture with Petersen. Which is an extremely tenuous link to justify the banning of this book, in my estimation. My mother-in-the-law, the loveliest peacenik old Catholic lady you could ever hope to meet, read his book and rated it highly. She&apos;s lent it to me. Although Whitcoulls later rescinded their ban, the Streisand effect bit me hard and so the book jumped to the top of my reading list—alongside a host of other unpopular opinions that I&apos;ve curated for you this month. Find one you disagree with the most, and read it. Contrary opinions, like vegetables, are good for your critical thought faculty. This is something the age of social media is depriving us.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;12 Rules for Life&lt;/em&gt;, Jordan B. Petersen.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;The Fellowship of the Ring&lt;/em&gt;, J.R.R. Tolkien. (Not really unfashionable in the zeitgeist, but did you know this book used to be considered counter-cultural?)&lt;/li&gt;
&lt;li&gt;The back catalogue of &lt;a href=&quot;https://www.interest.co.nz/users/elizabeth-kerr&quot;&gt;Elizabeth Kerr, a former columnist for interest.co.nz&lt;/a&gt;. An excellent financial guru, single-income dual-parent family with two kids—in short, relatable to most of us who still buy into a traditional family way of life. Dramatic suggestions for your financial freedom, she makes the impossible feel possible. With humour!&lt;/li&gt;
&lt;li&gt;The Spectator: &lt;a href=&quot;https://www.spectator.co.uk/2019/06/diversitys-valued-unless-its-diversity-of-opinion/amp/&quot;&gt;Diversity’s valued — unless it’s diversity of opinion&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Sp¡ked: &lt;a href=&quot;ttps://www.spiked-online.com/2019/06/18/the-trans-ideology-is-harming-kids/&quot;&gt;The trans ideology is harming kids&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;New Zealand Centre for Political Research: &lt;a href=&quot;https://www.nzcpr.com/new-zealands-maori-child-welfare-problem/&quot;&gt;New Zealand’s Maori Child Welfare Problem&lt;/a&gt;, an incredible warning to those who are wary of the culture of perennial racial victimhood, and of welfare dependence.&lt;/li&gt;
&lt;li&gt;A similar theme to the above, but regarding the Treaty Settlement process in NZ, with lots of historical information about Ngai Tahu&apos;s situation: Otago Daily Times, &lt;a href=&quot;https://www.odt.co.nz/opinion/complaint-industry-still-rambles&quot;&gt;Complaint industry still rambles on&lt;/a&gt;. The ODT, &lt;a href=&quot;https://www.odt.co.nz/opinion/simplicity-compounds-ignorance&quot;&gt;it seems&lt;/a&gt;, continues to make a valuable contribution by mounting a rebuttal to recent revisionism of the 17- and 1800s.&lt;/li&gt;
&lt;li&gt;5–6 years ago I worked for a man who was an econometrician. Brutally intelligent and extremely mathematical. Retrospectively, he and his co-partner at the research institute have had an enormous influence on me. At the time, they were concerned about the hiring practices of the NZ Treasury. Apparently it&apos;s &lt;a href=&quot;https://nzinitiative.org.nz/reports-and-media/opinion/howling-at-the-treasury-moon/&quot;&gt;only getting worse&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Ship of Fools: &lt;a href=&quot;http://www.shipoffools.com/2019/07/in-praise-of-holy-fools/&quot;&gt;In praise of holy fools&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Travelling&lt;/h2&gt;
&lt;p&gt;I recently had a work trip to Québec City for nine days for a workshop. The city is beautiful, particularly the churches in the old city. I went to Mass in French twice at &lt;a href=&quot;https://en.wikipedia.org/wiki/Saint-Roch_Church_(Quebec_City)&quot;&gt;St-Roch&lt;/a&gt;. At the first Mass, homeless people interrupted the Consecration, but to my joy the parishioners treated them with concern and compassion. Because I was excited to &lt;em&gt;finally&lt;/em&gt; use old-style confessionals, I also went to Confession &lt;em&gt;twice&lt;/em&gt; (once at St-Roch, and once at the &lt;a href=&quot;https://en.wikipedia.org/wiki/Cathedral-Basilica_of_Notre-Dame_de_Qu%C3%A9bec&quot;&gt;Notre-Dame-de-Québec Cathedral-Basilica&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;As a Catholic from a younger and less Catholic country, visiting Québec felt like a pilgrimage of sorts, although that was not at all my travel intention. While I do have a Québecois friend who takes his faith seriously and has been an important influence on my adult faith, it&apos;s rather the sheer number of churches that strikes you as an inescapable fact when wandering around the city. Now that quite a number of them have been deconsecrated and repurposed, and religosity in general being much lower than in the past, it&apos;s hard to comprehend why so many were needed in the first place.&lt;/p&gt;
&lt;p&gt;Thanks to Fr Dennis at Notre-Dame-de-Québec for outstanding pastoral advice; the advice you gave me during Confession really stuck with me. I asked him plainly, if you are in mortal sin, why not commit more sin? For the penalty would be the same. He first simply remarked, &quot;Do you want to try them all?&quot; Then he pointed out that sin always causes damage to oneself, or to others, and injures God. Moreover, to continue to sin simply because you have already (mortally) sinned suggests the absence of contrition; and true contrition is a requirement for reconciliation. If you ever hope to be forgiven the sins you have already committed, the first step in developing a broken and contrite heart is to earnestly attempt to stop sinning, now, today, before you even approach the confessional.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./static/quebec-1.jpg&quot; alt=&quot;Notre-Dame-des-Victoires: the oldest church in Quebec City—and the only one I wanted to go inside which I was unable to do so.&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Parenting&lt;/h2&gt;
&lt;p&gt;Callum is seven months old tomorrow. He&apos;s sitting, but does not sit up of his own accord. That is, he&apos;ll stay sitting if we start him off that way. We read that spilling should have stopped by about 6 months for the average child, and we suspect that his delay in sitting up is directly linked to his continued spilling. Naturally we&apos;re sick of all the vomit and we really want him to sit more in order to develop his core muscles.&lt;/p&gt;
&lt;p&gt;Callum&apos;s really engaged with his toys. I try to read to him in the afternoon, but he&apos;s of an age where all he does is reach out to grab a book and put it in his mouth. I&apos;m not sure if I should persevere or wait a bit longer.&lt;/p&gt;
&lt;h2&gt;Listening&lt;/h2&gt;
&lt;p&gt;Still lots of &lt;a href=&quot;https://en.wikipedia.org/wiki/Chill-out_music#Lo-fi_hip_hop&quot;&gt;chill hop&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Working&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Linked Data implementations of the OGC API (i.e. WFS 3).&lt;/li&gt;
&lt;li&gt;Data visualisation of time series soil moisture, à la the Github &lt;a href=&quot;https://github.com/DKirwan/calendar-heatmap&quot;&gt;&quot;calendar heatmap&quot;&lt;/a&gt; as a React single page application.&lt;/li&gt;
&lt;li&gt;Researching the quantification of flood risk with a low data requirement. Currently considering the calculation of &quot;height above nearest drainage&quot; (HAND) normalised DEM. I will probably turn this into a plugin for QGIS 3.&lt;/li&gt;
&lt;li&gt;Still freelancing as well, although not as much as I could or should be.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Cooking&lt;/h2&gt;
&lt;p&gt;Lots of slow cooked meals for winter. It has &lt;a href=&quot;https://kitchencookings.com/cooking-and-money-saving-are-slow-cookers-energy-efficient/&quot;&gt;financial benefits&lt;/a&gt;; and given I&apos;m on such a personal finance bender at the moment, I&apos;m enamoured.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Using a slow cooker is worth it because aside from cutting your energy cost for cooking, you also don’t have to spend all day in the kitchen watching the food not to burn as this will not happen at low temperatures.&lt;/p&gt;
&lt;p&gt;It also allows you to prepare healthy, delicious, home-cooked meals without spending much time and effort.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can also use cheaper cuts of meat, bought, naturally, from your local butcher.&lt;/p&gt;
&lt;h2&gt;Thinking&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;About the moral licitness of IVF.&lt;/li&gt;
&lt;li&gt;About P2P lending and whether it constitutes usury. Is P2P lending better, morally and financially, than putting your money in a bank and taking a 3% return? Charging &lt;em&gt;any&lt;/em&gt; interest on a loan has historically been identified as usury, and considered gravely sinful. Keeping the money in a modern bank doesn&apos;t seem to carry much stigma. But given your bank is simply lending your deposited money out to people at 20% on a credit card in order to supply you with your 3%, and keeping the 17% difference, surely it&apos;s better to cut out the extortionate profits of the bank, and offer that borrower a 5-10% interest rate directly? As long as you can rely on the P2P platform to do due diligence on a borrower&apos;s creditworthiness. However I suppose &lt;a href=&quot;https://en.wikipedia.org/wiki/Credit_union&quot;&gt;credit unions&lt;/a&gt; are the true &lt;a href=&quot;https://en.wikipedia.org/wiki/Distributism&quot;&gt;distributist solution&lt;/a&gt; to the ethical issue of borrowing and lending for personal finance.&lt;/li&gt;
&lt;li&gt;About the benefits of a dumb phone.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Exercising&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.stuff.co.nz/manawatu-standard/news/112328163/palmerston-norths-new-cycle-and-pedestrian-bridge-lights-up&quot;&gt;An enormously expensive new bridge&lt;/a&gt; was built over the Manawatū river. The bridge considerably shortened my commute. I cycle over it each day; I&apos;m planning to run more when it&apos;s warmer.&lt;/p&gt;
&lt;h2&gt;Learning&lt;/h2&gt;
&lt;p&gt;The basics of electronics, IoT, and sensors with an Arduino Uno. The local Jaycar electronics store recently ran an Arduino introductory tutorial that demystified a lot of this for me. I bought a book and I&apos;m really excited about the possibilities. Hopefully I can learn enough to teach Callum in a few years. I&apos;d love him to grow up to be the kind of person who makes physical things, not the kind of person who merely consumes what others make.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[GIS StackExchange Improvement Tip #1]]></title><description><![CDATA[A quick tip to improve your experience with GIS StackExchange, or any StackExchange site for that matter. "Watched Tags" and "Ignored Tags…]]></description><link>https://spatialparalysis.xyz/blog/gis-se-improvement-tip-1/</link><guid isPermaLink="false">https://spatialparalysis.xyz/blog/gis-se-improvement-tip-1/</guid><pubDate>Mon, 10 Dec 2018 18:04:00 GMT</pubDate><content:encoded>&lt;p&gt;A quick tip to improve your experience with &lt;a href=&quot;https://gis.stackexchange.com/&quot;&gt;GIS StackExchange&lt;/a&gt;, or any StackExchange site for that matter.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://meta.stackexchange.com/questions/32919/ignore-tags-using-wild-card&quot;&gt;&lt;strong&gt;&quot;Watched Tags&quot; and &quot;Ignored Tags&quot; accept wildcards&lt;/strong&gt;&lt;/a&gt;. I like GIS.SE, but unless you tweak it, there&apos;s a lot of noise and not enough signal. One way to improve that is to add things you&apos;re interested in to your &lt;em&gt;Watched Tags&lt;/em&gt;, and conversely those things you are disinterested in to your &lt;em&gt;Ignored Tags&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I personally don&apos;t use ArcGIS, or related Esri- or Microsoft-ecosystem tools. So for me, I can&apos;t offer any advice on how to do anything with them. Yet there&apos;s a lot of people in the spatial community who do use Esri products. I had set up my filters with a very long list of exclusion rules using specific tags, e.g. &lt;code&gt;arcgis-10.4&lt;/code&gt;, &lt;code&gt;arcgis-10.5&lt;/code&gt;, &lt;code&gt;esri&lt;/code&gt;, &lt;code&gt;esri-company&lt;/code&gt;, &lt;code&gt;arcgis-online&lt;/code&gt;, &lt;code&gt;arcpy&lt;/code&gt;, etc. This filtered out a lot of questions I was not interested in reading, however it&apos;s very verbose since there are a lot of &lt;code&gt;arc*&lt;/code&gt; questions. It is also unwieldy because everytime there&apos;s a new ArcGIS major or minor version release, there are a series of new tags created.&lt;/p&gt;
&lt;p&gt;To get around this, you can simply use wildcards in your tags. Now my Ignored Tags are simply &lt;code&gt;.net&lt;/code&gt;, &lt;code&gt;arc*&lt;/code&gt;, &lt;code&gt;esri*&lt;/code&gt;, &lt;code&gt;modelbuilder&lt;/code&gt;, &lt;code&gt;oracle&lt;/code&gt;, &lt;code&gt;sql-server*&lt;/code&gt;. I gave my Watched Tags a similar treatment (e.g. &lt;code&gt;qgis*&lt;/code&gt;). Now I have a nice looking set of questions and should not need to revisit my tags as often.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./Screenshot%20from%202018-12-10%2018-14-26.png&quot; alt=&quot;Yes, I am intensely interested in people fighting with the antimeridian in spatial software.&quot; title=&quot;Yes, I am intensely interested in people fighting with the antimeridian in spatial software.&quot;&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Gatsby Blog]]></title><description><![CDATA[I've just obtained the spatialparalysis.xyz domain. I'm going to move my blog here from my old blog/portfolio website (nearimprov.com). I…]]></description><link>https://spatialparalysis.xyz/blog/gatsby-blog/</link><guid isPermaLink="false">https://spatialparalysis.xyz/blog/gatsby-blog/</guid><pubDate>Sat, 08 Dec 2018 21:39:00 GMT</pubDate><content:encoded>&lt;p&gt;I&apos;ve just obtained the &lt;a href=&quot;https://spatialparalysis.xyz&quot;&gt;spatialparalysis.xyz&lt;/a&gt; domain. I&apos;m going to move my blog here from my old blog/portfolio website (nearimprov.com). I wanted to try out Gatsby JS, so that I could build some little React components and include them in various places. I&apos;ve used React a lot over the last two years, and since I&apos;ve accepted a new job with much less web development, I might have the desire to make some components for fun rather than for profit.&lt;/p&gt;
&lt;p&gt;I haven&apos;t written anything this year, but I hope to get back into the swing of things next year when I&apos;m more in my element.&lt;/p&gt;
&lt;h3&gt;Why &quot;Spatial Paralysis&quot;?&lt;/h3&gt;
&lt;p&gt;Well, I really just wanted:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;A domain that is better than &quot;nearimprov.com&quot;.&lt;/strong&gt; This was easy, since the old domain communicated exactly nothing. I think I picked it with a random generator of word pairs until I arrived at a pair of words that sounded like more than nothing, but less than anything. I&apos;m not going to renew that domain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;A domain that communicates &quot;spatial&quot;.&lt;/strong&gt; My Masters degree is in geographic information systems. I will talk about it a lot. I will use my knowledge of the area to feed my family. Although I have general reservations about the field, for better or for worse my hat is in the ring. Spatial systems are my speciality, and—momentarily putting aside all forms of imposter syndrome—I&apos;m an expert in the field.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;A silly-therefore-memorable name.&lt;/strong&gt; Eventually I settled on a rather crude rhyming pun on &quot;facial paralysis&quot;. I was thinking about other blogs that follow a similar kind of naming strategy, such as the &lt;a href=&quot;https://www.saltycrane.com/about/&quot;&gt;SaltyCrane Blog&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;What&apos;s left to do?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;I need to migrate all my old content to this blog, which will be a little bit of a manual process than I&apos;d like, because I didn&apos;t entirely stick to simple Markdown content.&lt;/li&gt;
&lt;li&gt;I also want to implement tags. (Note: &lt;a href=&quot;/tags&quot;&gt;done&lt;/a&gt;!)&lt;/li&gt;
&lt;li&gt;I need to get the Disqus comments working again, hopefully without losing comments. I&apos;ve been through this once before, and it was a bit of a pain.&lt;/li&gt;
&lt;li&gt;I&apos;d also like to be able to post privately, perhaps behind a password, or even a full authentication system with Auth0. Then I could write updates for IRL friends and family using their social logins, without sharing things with the wider world. This would be doubly nice since I&apos;ve stopped using social media.&lt;/li&gt;
&lt;li&gt;I still haven&apos;t worked out timezones in my post metadata. We have a rule of thumb at work: when implmenting a feature that involves time, the complexity of the feature is +2 effort points harder than you think. Every time.&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[NZ Traffic Dashboard]]></title><description><![CDATA[This is an old post, that I'm using to iron out any issues I have importing old content. Looking back at my ambitions for 2017 in early…]]></description><link>https://spatialparalysis.xyz/blog/traffic-dashboard/</link><guid isPermaLink="false">https://spatialparalysis.xyz/blog/traffic-dashboard/</guid><pubDate>Sun, 31 Dec 2017 14:25:00 GMT</pubDate><content:encoded>&lt;p&gt;This is an old post, that I&apos;m using to iron out any issues I have importing old content.&lt;/p&gt;
&lt;p&gt;Looking back at my ambitions for 2017 in early December, I&apos;ve done OK. Getting married was obviously a huge personal milestone for me. There was one outstanding item that I&apos;d intended to do early in the year that instead I decided to devote December to: an interactive traffic dashboard for New Zealand. In my mind&apos;s eye this would be something like a traffic control centre, &lt;a href=&quot;https://www.stuff.co.nz/national/99897853/curious-city-the-team-that-keep-new-zealands-traffic-moving&quot;&gt;like the one in Wellington&lt;/a&gt;, which manages about two thirds of the nation&apos;s roads.&lt;/p&gt;
&lt;p&gt;I like to pick at least one new piece of technology when I work on a personal project of this nature. This time it was &lt;a href=&quot;https://electronjs.org/&quot;&gt;Electron&lt;/a&gt;: a way to make cross platform desktop apps using familiar tools for web development. I ended up using &lt;a href=&quot;https://electronforge.io/&quot;&gt;Electron Forge&lt;/a&gt; to make the process even easier, because I&apos;d rather spend time on the actual project than on build configuration.&lt;/p&gt;
&lt;p&gt;The goal for this project was quite a low bar initially: a map that could show the available traffic cameras exposed by the &lt;a href=&quot;https://www.nzta.govt.nz/traffic-and-travel-information/infoconnect-section-page/about-the-apis/traffic-cameras/&quot;&gt;NZTA traffic camera API&lt;/a&gt;. When zooming and panning that map, I wanted the cameras that were displayed in the application to filter according to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Minimum_bounding_box&quot;&gt;minimum bounding box&lt;/a&gt; defined by the user&apos;s current map extent. I wanted this simply because when browsing the NZTA&apos;s website for traffic cameras, I found it frustrating to have to click through menus (text) to access spatial information. To build such an application that could respond the way I wanted, I decided to use &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt;, and in particular Google&apos;s Material UI and &lt;a href=&quot;https://github.com/alex3165/react-mapbox-gl&quot;&gt;this React binding of Mapbox GL JS&lt;/a&gt; that I&apos;ve been using for most of this year at work.&lt;/p&gt;
&lt;p&gt;I found that my decision to use Electron (and therefore a local desktop application) eventually led to some other decisions that I hadn&apos;t originally intended: images from cameras could be cached locally on disk, so I store them in a sensible structure and then I can list the contents of each camera&apos;s cache, sort by &lt;a href=&quot;https://www.unixtutorial.org/2008/04/atime-ctime-mtime-in-unix-filesystems/&quot;&gt;mtime&lt;/a&gt;, and create a looping animation for each camera. Anticipating that this would not always be a desktop application, it&apos;s just a configuration change away from using an S3 bucket to cache images and to use that to drive the animation (e.g. using &lt;code&gt;listObjectsV2&lt;/code&gt; in the AWS JavaScript SDK to order images by modification time).&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;The NZTA traffic camera API only gives you instantaneous results. So I&amp;#39;ma address that: &lt;a href=&quot;https://t.co/4B0aoe3Lby&quot;&gt;pic.twitter.com/4B0aoe3Lby&lt;/a&gt;&lt;/p&gt;&amp;mdash; ∆ Richard Law (@abetasoup) &lt;a href=&quot;https://twitter.com/abetasoup/status/936165994837327872?ref_src=twsrc%5Etfw&quot;&gt;November 30, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;h2&gt;The NZTA APIs&lt;/h2&gt;
&lt;p&gt;In addition to the NZTA traffic camera API, I also used their Variable Message Signs API, the OpenWeatherMap API, the Mapbox vector tile API (with their traffic tiles), and trivial parts of the AWS JS SDK. There&apos;s a handful of pain points about the NZTA APIs that would be nice to see addressed in 2018.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;You can&apos;t manage your own API keys.&lt;/strong&gt; You have to send an email to a human to request access, and give a reason for wanting access (although my reason was literally just &quot;Curiosity&quot;). Every request must also include a username and password in the request headers. However your username and password are determined &lt;em&gt;for&lt;/em&gt; you, and &lt;em&gt;you cannot change them yourself&lt;/em&gt;. This all smells a little bit of an immature API and API culture. As the terms of use include a requirement that you keep this information secure, I&apos;d argue that if someone else has control of my password, then I already have no control over the security of it.&lt;/li&gt;
&lt;li&gt;From doing a bit of digging into how our traffic control centres operate in New Zealand, I realised that &lt;strong&gt;the API only exposes a small fraction of the cameras that are on our roads&lt;/strong&gt;. On Twitter &lt;a href=&quot;https://twitter.com/NZTAWgtn/status/943889798405771264&quot;&gt;the NZTA posted a short video of SH2&lt;/a&gt; in Wellington. This camera is video, as opposed to 30/60/240 second stills that the API exposes. It&apos;s also in a particularly useful position. It was argued that this is done to protect privacy (e.g. in the case of a serious accident), but I&apos;m not sure I buy this reasoning. Cameras can already be marked &quot;unavailable&quot; and no images retrieved for as long as that status remains. I&apos;d hope that this feature gets used appropriately. What worries me is whether the NZTA actually has multiple camera systems operating with different APIs. I&apos;m a firm believer in &lt;a href=&quot;https://en.wikipedia.org/wiki/Eating_your_own_dog_food&quot;&gt;eating your own dog food&lt;/a&gt;, so I &lt;strong&gt;hope&lt;/strong&gt; that this API doesn&apos;t just exist for external consumption, but rather is used internally.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The cameras in Hamilton are almost always &quot;under maintenance&quot;.&lt;/strong&gt; This I don&apos;t really understand, unless there&apos;s some network connectivity issue, because it only seems to affect Hamilton. A few of the cameras in Hamilton were reliable, the rest were almost always off.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The API responses could be a bit more useful.&lt;/strong&gt; For instance the direction that a camera is facing would be a very useful attribute to have. Almost all of the cameras are described as being, for example, &quot;&lt;em&gt;Northbound&lt;/em&gt; on State Highway 1 at Pokeno&quot;. However the cameras are not all fixed, and indeed I watched a few being rotated and zoomed, in 30 second snapshots, as the traffic controllers monitored holiday traffic north of Wellington. They can be panned 360°, tilted, and zoomed. However the only physical camera attribute that is exposed is the location. I parsed the descriptions looking for an indication of direction, and then used that to rotate symbols in the map—but it just made it more confusing (an upside-down camera icon?). The camera facing direction would be great given the ability to tilt and rotate in Mapbox GL.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Variable Message Signs API doesn&apos;t use standard characters for newlines and tabs&lt;/strong&gt;, which is a minor annoyance, but irritating nonetheless.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Wrapping up&lt;/h2&gt;
&lt;p&gt;All in all, this was a fun little distraction for the past month. I think it was a good idea to &quot;time box&quot; myself to avoid some bad habits, but also because it means I can now move on to something else for the month of January without feeling guilty. I don&apos;t consider the project &quot;finished&quot;, although nothing ever really is, so I will probably revisit it later in the year. The code is on Github &lt;a href=&quot;https://github.com/alpha-beta-soup/traffic-dash&quot;&gt;here&lt;/a&gt; and there is also a loose Kanban-stype project board for it &lt;a href=&quot;https://github.com/alpha-beta-soup/traffic-dash/projects/1&quot;&gt;here&lt;/a&gt; where I&apos;ve recorded the ideas I have for it.&lt;/p&gt;
&lt;h2&gt;Demo&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;./Peek%202017-12-31%2015-35.gif&quot; alt=&quot;A brief snapshot of &amp;#x22;Traffic Dash&amp;#x22; in action.&quot; title=&quot;A brief snapshot of &amp;#x22;Traffic Dash&amp;#x22; in action.&quot;&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Crash Analysis System: The Narrative Arc]]></title><description><![CDATA[For several years, up until at least June 2015, the New Zealand Transport Agency (NZTA) published the data underlying their Crash Analysis…]]></description><link>https://spatialparalysis.xyz/blog/cas/cas-saga/</link><guid isPermaLink="false">https://spatialparalysis.xyz/blog/cas/cas-saga/</guid><pubDate>Thu, 28 Apr 2016 21:02:00 GMT</pubDate><content:encoded>&lt;p&gt;For several years, up until at least June 2015, the New Zealand Transport Agency (NZTA) published the data underlying their Crash Analysis System (CAS). This included information on every Police-attended road crash or accident in New Zealand, with attendant information on the environment it occurred in, and what was deemed to have contributed to the accident. While the method of publishing this data was primitive, it was sufficient for people with a little bit of time to spare (me) and an unhealthy obsession with transportation issues (me) to make use of it. While in many ways it was a good example of how not to do open data, at the very least it existed, so &lt;a href=&quot;http://www.statschat.org.nz/?s=foreign+drivers&quot;&gt;other&lt;/a&gt; &lt;a href=&quot;http://www.mixnmashentry.blogspot.co.nz/&quot;&gt;people&lt;/a&gt; could take it and run with it. All the NZTA had to do was sit back and watch, massage new data, and upload a new file every three months.&lt;/p&gt;
&lt;p&gt;[[sidenote | What did it look like?]]
| It consisted of one CSV file for each calendar year, with each record in the file heavily encoded. Decoding required automation and a lot of sifting through several PDFs, and a tool to get machine-readable tables from them. An example record is:
|
| &lt;code&gt;| &apos;Ashburton District&apos;,&apos;MOORE ST&apos;,&apos;100&apos;,&apos;N&apos;,&apos; &apos;,&apos;WILLIAM ST&apos;,&apos;201531749&apos;,&apos;07/02/2015&apos;,&apos;Sat&apos;,&apos;2335&apos;,&apos;EA&apos;,&apos;CN1V&apos;,&apos;103A 129A &apos;,&apos;M&apos;,&apos;R&apos;,&apos;D&apos;,&apos;DO&apos;,&apos;F &apos;,&apos; &apos;,&apos; &apos;,&apos;C&apos;,&apos;050&apos;,&apos;0&apos;,&apos;0&apos;,&apos;0&apos;,&apos;&apos;,&apos;&apos;,&apos;1499510&apos;,&apos;5137544&apos;, |&lt;/code&gt;
|
| Yes, that whitespace in &lt;code&gt;&apos;F &apos;&lt;/code&gt; is actually meaningful.&lt;/p&gt;
&lt;h1&gt;Rising Action&lt;/h1&gt;
&lt;p&gt;When I found this dataset one afternoon in 2014, I set to work making a prototype &lt;a href=&quot;http://www.nearimprov.com/national-crash-statistics/&quot;&gt;map visualisation&lt;/a&gt;. My initial concern at the time was just trying to see the frequency of different type of accidents involving cyclists along my commute home between Wellington and Petone. I wanted to know this for my own curiosity and safety, but I also wanted to share it with members of the &lt;a href=&quot;https://www.facebook.com/groups/166036183455868/&quot;&gt;Cycle Aware Wellington Facebook group&lt;/a&gt;, because I thought it would be useful to them.&lt;/p&gt;
&lt;p&gt;The raw CAS data is useless by itself, so interested people in this group would not be able to use it. If I had to write some code to decode a portion of the CAS data for consumption by people, then I would have to be able to do it for every accident in the system. &lt;a href=&quot;https://github.com/alpha-beta-soup/national-crash-statistics&quot;&gt;So that&apos;s what I did&lt;/a&gt;, very slowly, iteratively, while procrastinating from my university work, with the help of a friend.&lt;/p&gt;
&lt;p&gt;Here&apos;s the first time I sent people to it:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./nzcm-v0-fb.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;It was buggy as Hell but seemed well-received, and I was inspired to keep working on it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./nzcm-v0-db-comments.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Here&apos;s how I first decoded the CAS records:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./nzcm-v0.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Here&apos;s how it&apos;s done &lt;a href=&quot;/national-crash-statistics/&quot;&gt;now&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./asburton-example.png&quot; title=&quot;Astute readers will notice that this is the decoded visual summary of the raw data pasted in the sidenote further up the page. Would you ever have worked that out?&quot;&gt;&lt;/p&gt;
&lt;p&gt;To get a sense of the utility of this kind of visualisation, note that the only other way to see this data decoded is to sign up for what I call the &quot;NZTA Experience&quot;. Apparently the NZTA has heard of the Internet, but they make you download an additional program in order to use it... and ask that you please forward all queries to your hand-dandy in-house IT team.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./actual-cas-wtf.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;/documents/cas/cas9-video.wmv&quot;&gt;training&lt;/a&gt; &lt;a href=&quot;/documents/cas/cas12-video.wmv&quot;&gt;videos&lt;/a&gt; are a little bit sad/funny. They give an insight into the &lt;em&gt;awesome UI&lt;/em&gt; I was missing out on by not signing a license agreement and using their system to view a text file.&lt;/p&gt;
&lt;p&gt;[[sidenote | Credit where it&apos;s due...]]
| There&apos;s a lot in that bloated interface that I wouldn&apos;t even attempt to implement. I&apos;m sure it&apos;s useful for a number of use cases. It just would be great if it was possible to use it.&lt;/p&gt;
&lt;p&gt;I took one look at this option before deciding it wasn&apos;t for me. I don&apos;t even know what a &quot;Citrix Receiver 3.1&quot; is, but apparently it&apos;s a Windows thing... NZTA, if you require people to have licenses for proprietary software to access open data, the data is not open.&lt;/p&gt;
&lt;p&gt;I took the liberty of downloading the linked documents, for posterity. Here are links to them:&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;/documents/cas/CAS-Privacy-Agreement-v1.docx&quot;&gt;&lt;code&gt;CAS-Privacy-Agreement-v1.docx&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An MS Word privacy agreement that must be signed to use the NZTA&apos;s CAS viewer. (&lt;a href=&quot;/documents/cas/CAS-Privacy-Agreement-v1.pdf&quot;&gt;PDF&lt;/a&gt;.) In particular, it stipulates that no-one can access or use CAS data unless they have been entitled to do so by the NZTA in writing. I figured that providing the data for download absolved me from this, and these statements were only to be found in relation to accessing the Citrix system. I was never told otherwise. There was no fee associated with using CAS.&lt;/p&gt;
&lt;p&gt;This agreement includes this following &lt;em&gt;Purpose of collection of information&lt;/em&gt; (emphasis added):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;All information collected for use in CAS is collected in order to obtain and analyse accurate data in respect of traffic crashes in New Zealand.  Analysis of the information allows &lt;strong&gt;the NZTA&lt;/strong&gt;, &lt;strong&gt;other government agencies&lt;/strong&gt;, and &lt;strong&gt;agencies engaged in activities that contribute to the furtherance of road safety in New Zealand&lt;/strong&gt; to make significant contributions to crash prevention and wider road safety in New Zealand.  This includes contributing to the achievement of the Government policy objectives recorded in New Zealand’s Road Safety Strategy 2010-2020, Safer Journeys.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So it seems pretty clear that the CAS data is designed from the outset to exclude the wider public from being able to interpret the data.&lt;/p&gt;
&lt;p&gt;It is also abundantly clear that the NZTA is preoccupied with the privacy risks associated with this data:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;14.3&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In particular the customer must do everything reasonably within its power to prevent any access, use or disclosure of the information other than that which is expressly provided for in this agreement, and will not, or allow a user to, further disclose any information unless the information is in a form in which individuals cannot be identified.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I can see why my map may have ruffled some feathers. I just hope they can see how unreasonable their access to CAS-the-system is, given how useful and important CAS-the-data is.&lt;/p&gt;
&lt;p&gt;To my informal and naïve tastes, there&apos;s a considerable amount of legalse in this document, so I&apos;d really appreciate any interpretations of it (leave a comment).&lt;/p&gt;
&lt;p&gt;Finally, here&apos;s a gem:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;13.1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The NZTA will make all reasonable endeavours to provide a secure and reliable system allowing the customer and user to use CAS at all times other than between 5pm and midnight each Saturday, such time being set aside for CAS maintenance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a href=&quot;/documents/cas/guide-to-coded-crash-reports.pdf&quot;&gt;&lt;code&gt;guide-to-coded-crash-reports.pdf&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;My program uses the information in this PDF to decode the raw CSV data to a more meaningful GeoJSON structure, which then gets rendered in your browser. Go to page 15 to see the breakdown of the several hundred possible contributions to a crash. One crash can have as many of these explanations as needed; most explanations are additionally assigned to one of the parties to the crash, keyed by the type of vehicle, even working around the case where there are multiple vehicles of the same type in a crash. That&apos;s a pretty complex structure, and &lt;em&gt;kudos&lt;/em&gt; for the NZTA for managing to cram that into a CSV!&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;/documents/cas/CASp24.pdf&quot;&gt;&lt;code&gt;CASp24.pdf&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A report prepared by Beca on some cycling project that includes images showing the NZTA&apos;s CAS interface as it stood.&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;./documents/cas/CASp27.pdf&quot;&gt;&lt;code&gt;CASp27.pdf&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A report prepared by OPUS on a cycling project in Wellington that includes an Appendix showing the use of CAS data, including an almost hieroglyphic map of the movements of parties involved in accidents in their case study area.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./hieroglyphics.png&quot;&gt;&lt;/p&gt;
&lt;h1&gt;Confrontation&lt;/h1&gt;
&lt;p&gt;Then, in 2015, the data stopped being updated. The last update was for the first three months of 2015, which was published in June that year. The next three months&apos; of data was due in September, but never came. Then, the links to the old data—all 15.25 years of it—disappeared from the NZTA website in silence. Now, if you wanted to see the CAS data, you had no choice but to sign up for the NZTA Experience. Once there, you would not be able to tell people about any of the disaggregate information you have access to, per the terms of the agreement you have to sign.&lt;/p&gt;
&lt;p&gt;Does that make sense to anyone? Let&apos;s run through what I make of the NZTA&apos;s thought process.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;We are worried about the privacy implications of people looking at details of individual crashes.&lt;/li&gt;
&lt;li&gt;To protect privacy while balancing the need for organisations to actually use this information, the NZTA Experience (&lt;em&gt;SecureCAS&lt;/em&gt;) exists to allow people access to CAS only after signing an agreement that stipulates that you can&apos;t show other people disaggregate information.&lt;/li&gt;
&lt;li&gt;Third party applications using the raw data that are not subject to the license agreement should be discouraged through the non-publication of the raw data, in order to protect privacy.&lt;/li&gt;
&lt;li&gt;The data is still open; anyone can access the raw data, it just has to be through the NZTA Experience.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Right. So I (as a third-party developer) can&apos;t make a web application that displays the details of individual accidents to the public, but any individual member of the public can sign up for &lt;em&gt;SecureCAS&lt;/em&gt;. &lt;strong&gt;If privacy is the motivating force for the decision to not publish the raw data, what difference does it make if the public uses my application, or SecureCAS?&lt;/strong&gt; Ultimately, if someone wants disaggregate information, they can get it. I just made it easier. I made it so people attending a meeting of the Hutt Cycle Network can pull out a laptop and zoom to an area being discussed, and start using facts instead of perception.&lt;/p&gt;
&lt;p&gt;[[sidenote | When I was a member of this group]]
| I was really happy to see people using it, and finding it easy to access information they didn&apos;t even know existed. I see the publication of the raw data as potentially addressing a power imbalance between the road controlling authorities, who have had knowledge of and access to SecureCAS for years, and Joe Public, who didn&apos;t even know this data was collected.&lt;/p&gt;
&lt;p&gt;When I noticed that the data had not been updated, I sent the following email to the Statistical Analysis team at the NZTA asking for an explanation:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Richard&lt;/strong&gt;: I was looking to update my record of the CAS data, but the page I have used in the past no longer exists: &lt;a href=&quot;https://www.nzta.govt.nz/resources/crash-analysis-system-data/&quot;&gt;https://www.nzta.govt.nz/resources/crash-analysis-system-data/&lt;/a&gt;&lt;br&gt;
I noticed a few weeks ago that although it was up, the available data only went as far as March this year. Is this data still available for download?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NZTA&lt;/strong&gt;: Apologies for the delay in replying to your email. We are currently reviewing the CAS information we have available on our website to make sure it meets our privacy and security standards. As &lt;strong&gt;the new on line data will be summarised information&lt;/strong&gt; and I understand you work with geospatial co-ordinates, would you like to apply for CAS access? This will give you access to the same level of information as was previously on the web.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Richard&lt;/strong&gt;: Yes I suppose I would like to apply for access, provided that the access will not cost me as I&apos;m only using it as a hobbyist.&lt;br&gt;
However I&apos;m using the CAS data to make a public web map (&lt;a href=&quot;http://www.nearimprov.com/national-crash-statistics/&quot;&gt;http://www.nearimprov.com/national-crash-statistics/&lt;/a&gt;) in collaboration with some others. &lt;strong&gt;Will this review mean that my application will not be able to present the disaggregate information to the public?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Richard&lt;/strong&gt; [after a week without a response]: Is there any information on this review available? I have some free time available over this summer I am planning to spend developing my mapping application, but I first need to know if the data will still be able to be made public via my application.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NZTA&lt;/strong&gt;: Thanks for your email. There is no cost associated with access to CAS, but you will be required to sign a data agreement. &lt;strong&gt;Under this agreement you will only be able to make aggregated information (totals of 4 or more) available through your app. Would you like to proceed with getting CAS access?&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I got very confused at this point, by the definition of &quot;access to CAS&quot;. I didn&apos;t want to touch &lt;em&gt;SecureCAS&lt;/em&gt; with a ten-foot barge pole. I just wanted the raw data to work with on my own. There was still no explanation as to why it had been removed. To date, there appears to be no information on the NZTA website about any review into CAS, including whether any users of CAS data were consulted.&lt;/p&gt;
&lt;p&gt;I had no plans to sign up to a restrictive license that would make my crash map next to useless for the applications I originally intended it for. &lt;strong&gt;If I have to aggregate accidents to a minimum of four... I... how do you even do that?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No, seriously&lt;/em&gt;. Take four accidents at random. One caused by a drunk driver at one in the morning, who hit a pole and was injured severely. One a year earlier at a nearby pedestrian crossing where a driver failed to yield and injured a pedestrian. Another involving a driver reversing from their driveway and hitting a child riding their bike, who later died from their injuries. Another a nose-to-tail caused by a driver actually stopping at a stop sign when the following driver expected them to treat it like a give way sign, but with no one injured. &lt;strong&gt;How do you aggregate these?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You could perhaps say how many accidents there were, and how many people were injured or killed in this area. But you can&apos;t even say which type of accident is most prevalent, because they&apos;re all different and you&apos;re not allowed to discuss them in isolation. What if the council is proposing to remove the pedestrian crossing because (they argue) it is dangerous? What use is the aggregate data now? If only you could drill down into the raw data and extract that one accident that occurred on a pedestrian crossing and see why it happened!&lt;/p&gt;
&lt;p&gt;What if fewer than four accidents even occurred in your suburb or town? Is it even possible to draw this on a map? Can the NZTA actually provide a concrete précis of what this aggregation is supposed to look like?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The requirement for aggregation of CAS data in third-party applications completely shuts down the utility of the CAS data, and is extremely difficult to comply with.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Continuing the email chain, after I essentially told them the above:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NZTA&lt;/strong&gt;:  Thanks for your interest in safety data. We are in the process of making a new aggregated CAS data set freely available using the Government’s Open Data initiative. This is the data set that will be publically available from now on without the signing of an agreement. This is the data set you could use for your personal mapping tool.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If someone wishes to obtain data in addition to that made available to the general public via the open data initiative, they will be required to sign a data agreement to place some conditions on how the data may be used, in order to ensure data is kept appropriately secure and to protect the privacy of those individuals represented in the data set. For example, you would be able to use the data for research purposes and publish the results in an aggregated form.&lt;/strong&gt;
I understand, however, that you would like data variables over and above the data that we will be making available via the government open data initiative or that has been published in the past. The way in which we can make certain additional variables available to you is by providing you with CAS access so that you can extract the additional data yourself, however, you will be required to sign a data agreement which places certain conditions on how you may use the data.
There is no cost associated with access to the CAS data base.&lt;/p&gt;
&lt;p&gt;Please let me know if you wish to discuss.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here&apos;s my take on the embiggend section of that quote:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Third party applications cannot show disaggregate information because privacy. If someone wants to see the apparently private information, they sure can, they just have to use SecureCAS.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Frankly, this makes no sense whatsoever. All it achieves is putting up a barrier to people making use of the data. I replied to the email:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Richard&lt;/strong&gt;: Thank you so much for the clarification about accessing the CAS data.&lt;/p&gt;
&lt;p&gt;Is there any documentation about the review into CAS that I may read? My application is predicated on disaggregated data. I&apos;d like to contest that there are valid privacy concerns with the use of the data as it currently stands, and also note that if aggregated, the data is not going to be useful for most of the applications I see for it.&lt;/p&gt;
&lt;p&gt;For example, if required to aggregate to at least four accidents (as previously stated), after I apply multiple filters (e.g. accidents involving pedestrians at a particular pedestrian crossing in Petone 2000-2015 — as I did recently for the Hutt Cycle Network), the number of relevant accidents falls below this number and my map is then no longer useful as an advocacy tool for commenting on highly-local road network changes (a proposed change to the location of the crossing). I can imagine hundreds of possible permutations of the data just like this. If I am only able to show aggregate information, the function of the map will be restricted to commenting on general trends only (e.g. there were x accidents on pedestrian crossings across all of Lower Hutt... but I can&apos;t say where or why exactly). I believe this to be a considerable regression in the utility of the data.&lt;/p&gt;
&lt;p&gt;I disagree that there are major privacy concerns that justify changing the service in this way. To the extent that I may be wrong or overruled, I propose that there are better ways of addressing these concerns than requiring aggregation (for example, only specifying an approximate date, or randomising the location slightly, or suppressing the reporting of specific accident codes).&lt;/p&gt;
&lt;p&gt;Has there been consultation with the users of the data before these changes were proposed? Myself and others have put considerable volunteer time into my application and I would have made my comments earlier had I known there were going to be changes.&lt;/p&gt;
&lt;p&gt;I&apos;m happy to discuss this issue further.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;At this point the manager of the Statistical Information team contacted me to arrange a time to discuss in person the issues I was raising. Ultimately this had to be a phone conference between the manager, myself, and James Burgess (Chair, Cycle Aware Wellington).&lt;/p&gt;
&lt;p&gt;I took the call from the rooftop carpark of JB Hi-Fi in central Hamilton, amidst construction noise. During the hour-long phone call James and I felt we were given a fair hearing of our concerns. In particular, we stressed that the requirement to aggregate information is difficult to comply with, and severely diminishes the utility of the data.&lt;/p&gt;
&lt;p&gt;I argued that the privacy concerns are unfounded, because the only way the CAS data is personally identifying is if you already hold additional information about an accident. I also pointed out that news articles already reveal more information than CAS does about serious accidents, but we assured them that my application would never try and link CAS data to any form of media. I conceded that the CAS data did not need to reveal the age of the youngest child involved in an accident, but otherwise CAS data should not be changed at all. We provided concrete use cases for disaggregate data in an easy-to-consume web map format, from the perspective of cycling advocacy. We were assured that our concerns would be taken on board.&lt;/p&gt;
&lt;p&gt;[[sidenote | On children... ]]
| If a child or children are involved in an accident, the age of the youngest child is reported in the raw CAS data. Age is not reported otherwise. Gender is never given.&lt;/p&gt;
&lt;p&gt;The level of aggregation they were considering was regional, which was worse than I had imagined. The proposed confidentiality agreement would mean only this same level of aggregation would be possible for dissemination.&lt;/p&gt;
&lt;p&gt;There would be a follow-up call in two weeks. It felt good.&lt;/p&gt;
&lt;h1&gt;Falling Action&lt;/h1&gt;
&lt;p&gt;There was no follow-up call.&lt;/p&gt;
&lt;p&gt;The person behind the &lt;a href=&quot;https://twitter.com/IBCycleWay&quot;&gt;@IBCycleWay&lt;/a&gt; Twitter handle asked for access to disaggregate CAS data and recieved this response (emphasis added):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NZTA&lt;/strong&gt;: Information from our Crash Analysis System (CAS) is no longer available for download directly from this website. We have recently revised our privacy and confidentiality standards, and the crash information did not meet those new standards. &lt;strong&gt;In some cases, the data included information that, by deduction, meant the person involved could be identified&lt;/strong&gt;. The Privacy Act 1993 is about protecting personal information and it is our duty as an Agency to ensure that personal information is protected and confidentiality of output is maintained. That is why we are now required to aggregate or &lt;strong&gt;suppress values under four.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Over the coming weeks, we are working to make aggregated information available for download from this website. Would you like us to email you when this becomes available?&lt;/p&gt;
&lt;p&gt;You are also able to apply for free access to the data via CAS. Please contact &lt;a href=&quot;cas.administrator@nzta.govt.nz&quot;&gt;cas.administrator@nzta.govt.nz&lt;/a&gt; if you would like to apply for access to CAS.&lt;/p&gt;
&lt;p&gt;I hope this is of assistance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I have no idea what &quot;suppress values under four&quot; means.&lt;/p&gt;
&lt;p&gt;Realising that they were not going to seriously consider my perspective despite all the pestering I&apos;d already put in, I tried another email salvo:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Richard&lt;/strong&gt;: Is there any word on the CAS data review? It has now been over a year since disaggregate data on road crashes and accidents has been been made available to the public, which is affecting the ability of safety advocates to comment on road network changes from the local to the national scale. I have heard through Twitter that a decision has been made with respect to this data, but I have not heard anything official and I still cannot find any information on the NZTA website.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I think I&apos;m pissing them off now, because the response didn&apos;t even attempt to address me:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thanks for your email.&lt;/p&gt;
&lt;p&gt;As previously discussed, people can apply for free access to CAS for the following purposes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Informing transport policy and regulations&lt;/li&gt;
&lt;li&gt;Designing and prioritising a range of network user behaviour and road safety initiatives&lt;/li&gt;
&lt;li&gt;Supporting funding applications for network and road safety improvements&lt;/li&gt;
&lt;li&gt;Monitoring and evaluating the effectiveness of road safety initiatives&lt;/li&gt;
&lt;li&gt;Providing information for research purposes connected with road network user behaviour, road safety and transport policy.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Please do let us know if you would like to apply for access.&lt;/p&gt;
&lt;p&gt;We are currently working to provide as much aggregated data as possible on our website while maintaining our obligations under the Privacy Act. We will be making this information available over the coming weeks, and will also be providing information as to why the csv files are no longer available. Would you like me to send you a link to the aggregated information when it becomes available?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That last bit of communication is now two weeks&apos; old. I thank all those who have reached out to me via &lt;a href=&quot;https://twitter.com/alphabeta_soup&quot;&gt;Twitter&lt;/a&gt;, email and other channels to offer advice and information about this situation; it has all been taken on board. I&apos;m trying to use this blog post to get all the information and my thoughts into one place, before taking the next step.&lt;/p&gt;
&lt;h1&gt;Character Growth and Resolution&lt;/h1&gt;
&lt;p&gt;There is yet to be a satisfactory resolution for this narrative arc. The aggregate data for download still isn&apos;t ready so I can&apos;t comment on it, and my hand still isn&apos;t ready to agree to the terms of their license agreement. My Linux OS can&apos;t even use Citrix. I think. I still don&apos;t know what Citrix is.&lt;/p&gt;
&lt;p&gt;I do have some questions for the NZTA:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;How many privacy issues have actually been encountered to justify this change to operational data?&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Why is there no available information about this review?&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Can you provide a concrete demonstration of how your proposed aggregation of no fewer than four accidents is supposed to work?&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Are you open to alternative suggestions about how to protect the privacy of people who have had the misfortune to be involved in an accident, that do not involve aggregation?&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I have some plans my &lt;a href=&quot;/national-crash-statistics/&quot;&gt;crash map&lt;/a&gt;, but they&apos;re mostly shelved until I know that the raw CAS data will be available again:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make and expose a public RESTful API to the decoded CAS data, so it&apos;s super easy for even more client applications to proliferate.&lt;/li&gt;
&lt;li&gt;Improve my web map interface, including the ability to search crash causes and filter on those, instead of being limited to the filters that I have baked in.&lt;/li&gt;
&lt;li&gt;Improve my web map with some server-side code, probably the same API I&apos;m willing to write, so that it can display more than 3 months of data without destroying your browser.&lt;/li&gt;
&lt;li&gt;Add some cool smarts to the web map: e.g. draw an irregular shape on the map and get some summary charts reflecting the crashes inside the shape that meet your non-spatial criteria.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I also have one question for you, the reader. &lt;strong&gt;What can be done?&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Supplementary links&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;A &lt;a href=&quot;http://groups.open.org.nz/groups/ninja-talk/messages/topic/4s6b4LltkXJeQaGEmg4fMi#post-4s6b4LltkXJeQaGEmg4fMi&quot;&gt;thread&lt;/a&gt; on the Open Data Ninjas about the issue.&lt;/li&gt;
&lt;li&gt;My &lt;a href=&quot;https://github.com/alpha-beta-soup/national-crash-statistics/issues/53&quot;&gt;Github issue&lt;/a&gt; about signing the data agreement, which I do not want to do.&lt;/li&gt;
&lt;li&gt;The NZTA&apos;s &lt;a href=&quot;https://www.nzta.govt.nz/resources/crash-analysis-system/cas.html&quot;&gt;CAS FAQ&lt;/a&gt;, which as of writing seems unchanged, with the exception that the raw data download is missing. Here&apos;s &lt;a href=&quot;https://www.nzta.govt.nz/resources/crash-analysis-system/&quot;&gt;another, similar link&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The NZTA&apos;s &lt;a href=&quot;http://www.nzta.govt.nz/resources/crash-analysis-reports/index.html&quot;&gt;pre-aggregated &lt;em&gt;crash analysis reports&lt;/em&gt;&lt;/a&gt; which summarise CAS data on a regional basis. They&apos;re neat, but personally I want to know about very particular circumstances: I don&apos;t want a summary report, I want data.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;A note on the snark&lt;/h2&gt;
&lt;p&gt;I do apologise for the level of snark you have just endured. I truly appreciate all the hard work that has gone in to CAS and will continue to go into it. In turn, I hope that those at the NZTA appreciate the frustration that I&apos;ve felt after putting in effort into this application, only for the rug to have been pulled out from underneath it without much explanation. Ultimately we both have similar goals: public safety, and factual information.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Geodata web services]]></title><description><![CDATA[Bill Dollins has a downright useful tutorial over on his blog for building a straightforward geodata service with Node, Express, PostgreSQL…]]></description><link>https://spatialparalysis.xyz/blog/geodata-web-services/</link><guid isPermaLink="false">https://spatialparalysis.xyz/blog/geodata-web-services/</guid><pubDate>Sat, 16 Jan 2016 21:04:51 GMT</pubDate><content:encoded>&lt;p&gt;Bill Dollins has a &lt;a href=&quot;http://blog.geomusings.com/2013/12/11/building-a-simple-geodata-service-with-node-and-amazon-rds/&quot;&gt;downright useful tutorial&lt;/a&gt; over on his blog for building a straightforward geodata service with Node, Express, PostgreSQL and Amazon RDS.&lt;/p&gt;
&lt;p&gt;I&apos;m actually surprised at how few of these sorts of server applications actually exist, given that they&apos;re reasonably straightforward to set up, and marvelous to use. A project I&apos;ve been working on recently at work consists of a WebSocket server (using ws4py) that operates as an aggregator for real-time spatial data from a variety of sources (also implemented as WebSockets). Connecting to it is as simple as &lt;code&gt;wss://host:port/api-version/service&lt;/code&gt; and then valid GeoJSON gets pushed to the browser. I don&apos;t think I can say much about the project, but I can say it has transformed how I see the delivery of spatial data over the Internet for time-critical applications. I&apos;d love it if the NZTA got around to implementing something like this for its traffic alert APIs.&lt;/p&gt;
&lt;p&gt;I also have the beginnings of a QGIS plugin that connects to a specified WebSocket and will render arriving messages, provided they come as GeoJSON.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[3D spatial indexes in PostGIS]]></title><description><![CDATA[I have just watched Paul Ramsay's (CartoDB) breakout presentation from PGConf Silicon Valley 2015. I love watching these kinds of videos…]]></description><link>https://spatialparalysis.xyz/blog/nd-spatial-indexes-postgis/indes/</link><guid isPermaLink="false">https://spatialparalysis.xyz/blog/nd-spatial-indexes-postgis/indes/</guid><pubDate>Sat, 19 Dec 2015 14:37:19 GMT</pubDate><content:encoded>&lt;p&gt;I have just watched Paul Ramsay&apos;s (CartoDB) breakout presentation from &lt;em&gt;PGConf Silicon Valley 2015&lt;/em&gt;. I love watching these kinds of videos. They&apos;re reasonably short (~40 minutes) so are good while you&apos;re eating lunch or killing time. They also tend to have little nuggets of wisdom to solve &quot;gotchas&quot; that for some reason no one has ever told you about. This presentation in particular has lots of these for using PostGIS. One I did not know about was the ability to specify an n-dimensional index in PostGIS. The typical way to construct a two-dimensional GIST index in PostGIS is to do:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE INDEX idx ON table USING gist(geom);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However if you have XYZ or XYZT data and you want to issue queries that take advantage of these additional dimensions with a multidimensional index, you will need:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE INDEX idx ON table USING gist(geom gist_geometry_ops_nd);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The different operator, internally, means that the spatial functions use the &lt;code&gt;&amp;#x26;&amp;#x26;&amp;#x26;&lt;/code&gt; operator, rather than the &lt;code&gt;&amp;#x26;&amp;#x26;&lt;/code&gt; operator.&lt;/p&gt;
&lt;p&gt;I have been thinking recently about trying to get my hands on some LiDAR data. Acquiring this data is apparently very difficult at the moment. But if you use PostGIS, you&apos;re now well-equipped to deal with it... if you can get your hands on it :information&lt;em&gt;desk&lt;/em&gt;person:&lt;/p&gt;
&lt;p&gt;In addition, PostGIS allows you to switch out the geometry library from the Geometry Engine Open Source (GEOS) to the SFCGAL (SF (?) Computational Geometry Algorithms Library). SFCGAL is not as broad as GEOS, so if you do make the switch, internally a lot of your functions will still use GEOS. However, as Paul Ramsay notes, SFCGAL has a bunch of additional functions that GEOS does not. These include some interesting 3D functions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ST_3DIntersection&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ST_Tesselate&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ST_3DArea&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ST_Extrude&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ST_ForceLHR&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ST_Orientation&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ST_Minkowski&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ST_StraightSkeleton&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ST_ApproximateMedialAxis&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SFCGAL will need to be compiled, and then activated within PostgreSQL:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE EXTENSION postgis_sfcgal;
SET postgis.backend = &apos;sfcgal&apos;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There is also a dedicated PostgreSQL extension for storing point cloud data: &lt;a href=&quot;https://github.com/pgpointcloud/pointcloud&quot;&gt;https://github.com/pgpointcloud/pointcloud&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also in the video, there is a tricky philosophical question, with important geometric implications (never thought I&apos;d say that): &lt;em&gt;What is the intersection of two disjoint polygons?&lt;/em&gt; The sound of a tree falling in the woods? The sound of one hand clapping? Close. It&apos;s a polygon representing the presence of nothing: &lt;code&gt;POLYGON EMPTY&lt;/code&gt;. And empty geometry is not &lt;code&gt;NULL&lt;/code&gt;. It&apos;s actually more like &lt;code&gt;0&lt;/code&gt; (something with no magnitude, but not exactly nothing).&lt;/p&gt;
&lt;p&gt;Another way to get &lt;code&gt;GEOMETRY EMPTY&lt;/code&gt; is to use a negative buffer value that is larger than the geometry that is being buffered.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;youtube:http://www.youtube.com/embed/GSuZP89UdGs&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;What did you find useful from this presentation?&lt;/p&gt;
&lt;p&gt;Incidentally, if someone can tell me what the &quot;SF&quot; in SFCGAL stands for, I&apos;d really appreciate it. It&apos;s driving me nuts. (Spatial Functions?)&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Vector fields of population travel demand]]></title><description><![CDATA[I just finished reading an interesting paper by Xintao Liu and colleagues entitled Time-geographic relationships between vector fields of…]]></description><link>https://spatialparalysis.xyz/blog/travel-demand/</link><guid isPermaLink="false">https://spatialparalysis.xyz/blog/travel-demand/</guid><pubDate>Sun, 06 Dec 2015 18:16:00 GMT</pubDate><content:encoded>&lt;p&gt;I just finished reading an interesting paper by Xintao Liu and colleagues entitled &lt;em&gt;Time-geographic relationships between vector fields of activity patterns and transport systems&lt;/em&gt;, in the &lt;a href=&quot;http://www.sciencedirect.com/science/article/pii/S0966692314002191&quot;&gt;Journal of Transport Geography&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./liu.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;I don&apos;t really have much to say about it, but I&apos;ll post a link to it anyway so I don&apos;t forget about it: I&apos;ve briefly explored this technique in the past, and hope to revisit it in the future. It&apos;s pretty damn hard.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./commutecontours.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Do you know of any similar examples?&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Algorithms Group at Eindhoven University of Technology]]></title><description><![CDATA[I recently stumbled across the webpage for the (spatial/geometric/cartograhic) Algorithms Group at Technische Universiteit Eindhoven…]]></description><link>https://spatialparalysis.xyz/blog/eindhoven-algo-group/</link><guid isPermaLink="false">https://spatialparalysis.xyz/blog/eindhoven-algo-group/</guid><pubDate>Sun, 29 Nov 2015 12:55:00 GMT</pubDate><content:encoded>&lt;p&gt;I recently stumbled across &lt;a href=&quot;http://www.win.tue.nl/algo/&quot;&gt;the webpage&lt;/a&gt; for the (spatial/geometric/cartograhic) Algorithms Group at &lt;em&gt;Technische Universiteit Eindhoven&lt;/em&gt; (Eindhoven University of Technology). I highly recommend browsing through some of the manuscripts included on &lt;a href=&quot;http://www.win.tue.nl/~hermanh//doku.php?id=graduation_projects&quot;&gt;Herman Haverkort&apos;s (and students&apos;) projects page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In particular, I found one entitled &lt;a href=&quot;http://www.win.tue.nl/~hermanh//stack/Haverkort-cues-about-travel-time.pdf&quot;&gt;&lt;em&gt;Embedding cues about travel time in schematic maps&lt;/em&gt;&lt;/a&gt;. This is an interesting paper on schematic public transport maps, where it is first established that although excellent at allowing users to avoid unnecessary transfers, schematic maps of public transport pay the price of preventing people from determining how long a particular trips are, in both absolute and relative terms.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./Haverkort1.png&quot; alt=&quot;Schematic map&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./Haverkort2.png&quot; alt=&quot;Schematic map with travel times&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./Haverkort3.png&quot; alt=&quot;Map shwing stations at actual locations between 50°45 and 53°30 N and 3°30 and 7°00 E&quot;&gt;&lt;/p&gt;
&lt;p&gt;Haverkort presents a range of ideas for getting the best of both worlds, leading to a portfolio of intriguing ideas about hybridised schematic maps with travel time. I&apos;ve included three of them here, and really encourage you to read the full paper.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./Haverkort4.png&quot; alt=&quot;Schematic map with adjusted lines widths, without and with major waters&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./Haverkort5.png&quot; alt=&quot;Schematic map with adjusted line shapes, without and with major waters&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./Haverkort6.png&quot; alt=&quot;Schematic map with loosely packed collection of blob-shaped zones&quot;&gt;&lt;/p&gt;
&lt;p&gt;I think it&apos;d be a brilliant challenge to employ some of these ideas for a local network. There are also some interesting papers on automated graph drawing on the TUE webpage; if you&apos;re anything like me, while you can appreciate the necessity and beauty of a one-off piece of cartography, the true Holy Grail is in abstracting and automating the procedure, giving space for updating source information or changing the extent of your geographic focus with minimal to no additional work.&lt;/p&gt;
&lt;p&gt;There are also a bunch of &lt;a href=&quot;http://www.win.tue.nl/algo/graduated-phd-students.php&quot;&gt;PhD theses&lt;/a&gt; that might make some good holiday reading... for uh, weird people like me.&lt;/p&gt;
&lt;p&gt;[[newthought]]
| Do you have any other interesting theses or manuscripts to read over the summer? Having completed mine in March this year, I feel I&apos;m in a good space to really appreciate the hard work of others in producing one, so I&apos;m looking to read a few.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;All images © Herman Haverkort, 2014&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[New Zealand Spatial Excellence Awards]]></title><description><![CDATA[I have just returned from the New Zealand Spatial Excellence Awards for 2015. I was awarded the Postgraduate Student of the Year Award. I'm…]]></description><link>https://spatialparalysis.xyz/blog/nzsea/</link><guid isPermaLink="false">https://spatialparalysis.xyz/blog/nzsea/</guid><pubDate>Thu, 19 Nov 2015 02:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I have just returned from the New Zealand Spatial Excellence Awards for 2015. I was awarded the Postgraduate Student of the Year Award. I&apos;m very slightly tipsy. I also had a very interesting contrasting experience that I think people in the &quot;spatial industry&quot; in New Zealand might be interested in.&lt;/p&gt;
&lt;p&gt;I had quite a tight schedule today, waking up in Raglan, popping into work in the morning, getting to the National Library in Wellington by early afternoon, meeting friends afterwards, attending a PostgreSQL/PostGIS user group meeting at 6, and then skipping out to go to the final NZSEA awards and dinner.&lt;/p&gt;
&lt;p&gt;The PostgreSQL/PostGIS user meeting was great. I had no idea what to expect. Two geo-friends (they&apos;re real friends, we just bond over maps, so therefore they need the geo- preffix, © ESRI) came with me to Catalyst IT on Willis St, Wellington. Inside there were a few couches, and Brent Wood hanging out in shorts and a t-shirt. Dressed up in dress shoes and a shirt (but no jacket and tie), I felt very over-dressed. Brent discussed PostgreSQL/PostGIS, the treatment of geometry primitives in databases, spatial indexes and limitations thereof, MapServer, WMS in QGIS, GEOS, Proj.4, GDAL, and the antimeridian and how PostGIS&apos;s &lt;code&gt;geography&lt;/code&gt; type gets over many of the attendant problems of that irritating fecking line. Then, we had pizza and I had to skip off without much of a chance to talk to Brent.&lt;/p&gt;
&lt;p&gt;I literally ran off to Te Papa, where a nibbles and networking event was going down. People were wearing frocks and tuxedos, and even kilts. Dressed up in dress shoes and a shirt (but no jacket and tie), I felt very under-dressed. Not to mention sweaty from running in a merino jumper. People talked &quot;spatial enablement&quot; and lots of buzzwords. A Minister ministered. Mark Sainsbury officiated. Lights flashed. Entrées were served. Awards were dished out. There was engaging discussion in my immediate neighbourhood, although lots of the surrounding attendees seemed to just be in attendance at a $180 dinner to... do something that I never quite worked out.&lt;/p&gt;
&lt;p&gt;Apparently we were highlighting the spatial industry in New Zealand and how cool it is. It felt like a bunch of people patting themselves on the back.&lt;/p&gt;
&lt;p&gt;Maybe it&apos;s the wine talking, but to be honest, if the &quot;spatial industry&quot; had just spent that money funding PostGIS or GeoServer or Neo4j feature requests... more would have been done for the &quot;spatial industry&quot;.&lt;/p&gt;
&lt;p&gt;Don&apos;t get me wrong: the individuals and organisations represented tonight do amazing work. Special congratulations to Interpret Geospatial Solutions for their huge haul of awards, Dr Mairéad de Róiste for her enormously well-deserved award for her hard work establishing the Masters in GIS (of which I am a graduate, and she was my thesis supervisor), Hamish Kingsbury (undergraduate student of the year), and Kim Ollivier (celebrating 30 years of working with spatial information). I&apos;m truly grateful for my award, and the event itself was lovely and well organised. I had a great time talking to interesting and very intelligent people. With delicious food (but not beer and pizza). They even paid for my flights, which had a lot of private benefit as I got to see my friends.&lt;/p&gt;
&lt;p&gt;I don&apos;t even think I deserve my award at all after talking to my category competition: superb PhD candidates Judy Rodda from Otago University, and Anton Marais from Waikato University. Judy has been modelling the distribution of the endangered Hector&apos;s dolphins off the south coast of the South Island. Anton made a cellular automaton model of residents&apos; location and re-location decisions across the Waikato region, extending ten years&apos; into the future. (It annoys me that I&apos;ve forgotten the name of open source software he used for this.)&lt;/p&gt;
&lt;p&gt;I just think the &quot;spatial industry&quot; in NZ is more than a little... self-obsessed. I certainly noticed that tonight.&lt;/p&gt;
&lt;p&gt;I wish I wasn&apos;t the &lt;em&gt;only&lt;/em&gt; person who attempted to squeeze in attendance at both the awards and a brilliant session on PostGIS. Without any finger pointing, I think the industry can do better, if indeed there is such a thing as a &quot;spatial industry&quot;. For the record, I don&apos;t even think there is such a thing. We are in a hardware, software and data industry, and that&apos;s just fine.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[GeoServer Quickstart with Docker]]></title><description><![CDATA[I've been exploring GeoServer recently, while also doing the same with Docker. I figured I'd share a simple Dockerfile I wrote for getting…]]></description><link>https://spatialparalysis.xyz/blog/geoserver-docker/</link><guid isPermaLink="false">https://spatialparalysis.xyz/blog/geoserver-docker/</guid><pubDate>Sun, 01 Nov 2015 21:06:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;./docker.png&quot;&gt;
&lt;img src=&quot;./geoserver.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;I&apos;ve been exploring &lt;a href=&quot;geoserver.org/&quot;&gt;GeoServer&lt;/a&gt; recently, while also doing the same with &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt;. I figured I&apos;d share a simple Dockerfile I wrote for getting started with GeoServer (Master) and some extensions, using Docker. I was pleasntly surprised how easy this is to do, after reading a few horrow stories online about getting off the ground with GeoServer. Obviously there&apos;s a lot of additional configuration required before deploying GeoServer, but Docker does at least make it very easy to try something out by ensuring your on the same page as somebody else.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-docker&quot;&gt;# Dockerfile
FROM debian:wheezy

# Update the sources list
RUN apt-get update
RUN apt-get upgrade -y

# Install basic applications
RUN apt-get install -y build-essential wget unzip

# Get the JRE/JDK installation
RUN apt-get install -y default-jre default-jdk
RUN apt-get install -y openjdk-7-jre openjdk-7-jdk
ENV JAVA_HOME=/usr/lib/jvm/java-1.7.0-openjdk-amd64

# Get GeoServer
ENV GEOSERVER_HOME=/usr/share/geoserver/
RUN mkdir $GEOSERVER_HOME
RUN wget http://ares.boundlessgeo.com/geoserver/master/geoserver-master-latest-bin.zip
RUN cp geoserver-master-latest-bin.zip $GEOSERVER_HOME
RUN unzip $GEOSERVER_HOME/geoserver-master-latest-bin.zip -d $GEOSERVER_HOME
RUN rm $GEOSERVER_HOME/geoserver-master-latest-bin.zip
ENV GEOSERVER_VER=2.9

# A plugin
ENV A_PLUGIN=geoserver-$GEOSERVER_VER-SNAPSHOT-netcdf-plugin
RUN wget http://ares.boundlessgeo.com/geoserver/master/ext-latest/$A_PLUGIN.zip
RUN cp $A_PLUGIN.zip $GEOSERVER_HOME
RUN ls $GEOSERVER_HOME
RUN ls $GEOSERVER_HOME/geoserver-$GEOSERVER_VER-SNAPSHOT/
RUN unzip $GEOSERVER_HOME/$A_PLUGIN.zip \
-d $GEOSERVER_HOME/geoserver-$GEOSERVER_VER-SNAPSHOT/webapps/geoserver/WEB-INF/lib/
RUN rm $GEOSERVER_HOME/$A_PLUGIN.zip

ENV GEOSERVER_HOME=$GEOSERVER_HOME/geoserver-$GEOSERVER_VER-SNAPSHOT/
WORKDIR $GEOSERVER_HOME/bin
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then to build and run the Docker container:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker build -t user/geoserver-master:test .
docker run -it --net=&quot;host&quot; user/geoserver-master:test
./startup.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you have GeoServer running, so head to &lt;code&gt;localhost:8080/geoserver&lt;/code&gt;, and login with the default user and password: &lt;code&gt;admin&lt;/code&gt; and &lt;code&gt;geoserver&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you want to try out GeoServer with data on your machine, you can just mount your data volume to the Docker container and point GeoServer to it in the admin panel. For instance, I mount &lt;code&gt;/home/data/sampledata&lt;/code&gt; to &lt;code&gt;$GEOSERVER_HOME/data_dir/sampledata&lt;/code&gt; with &lt;a href=&quot;https://docs.docker.com/compose/&quot;&gt;Docker Compose&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There. Now play around with GeoServer. I expect a cheque for 5% of what you would have spent on ArcGIS Server.&lt;/p&gt;
&lt;h3&gt;Update&lt;/h3&gt;
&lt;p&gt;Docker hygiene is important, although I&apos;m still figuring it out. I&apos;ve made the image use Debian Wheezy as a lightweight alternative to the Ubuntu 15.04 image I had before. It was also broken because I hadn&apos;t added the command to install &lt;code&gt;wget&lt;/code&gt;, among a litany of other problems. It usually pays to test things, sorry if you tried it out earlier!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Spatial isn't that special]]></title><description><![CDATA[This may be a strange thing for me to say, given that my postgraduate qualification, and profession is in geographic information systems…]]></description><link>https://spatialparalysis.xyz/blog/spatial-is-not-that-special/</link><guid isPermaLink="false">https://spatialparalysis.xyz/blog/spatial-is-not-that-special/</guid><pubDate>Sun, 01 Nov 2015 17:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This may be a strange thing for me to say, given that my postgraduate qualification, and profession is in geographic information systems. But I don&apos;t think that spatial is particularly special. People pretend it is, and then use that to justify the selling of ridiculous desktop software and &quot;enterprise&quot; solutions to problems that Paul Ramsey here shows can all be solved in a single (PostGIS) SQL query and some wrapper PHP script alongside a slippy map.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;youtube:https://www.youtube.com/embed/PwVRi37qXn8&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now this headline assertion is not without nuance. While I currently think that 90% of any GIS workflow can and ought to be automated with something like PostGIS-extended PostgreSQL tables, views, &lt;a href=&quot;https://gist.github.com/alpha-beta-soup/6f0fe6a219a014ca9d4d&quot;&gt;upse&lt;/a&gt;&lt;a href=&quot;https://wiki.postgresql.org/wiki/UPSERT&quot;&gt;rts&lt;/a&gt; and trigger functions, that last 10% is actually very, very important. It&apos;s where GIS folk &lt;strong&gt;should&lt;/strong&gt; be focusing their attention, given the other problems have been solved by technology. Unfortunately, a lot of people seem to get so caught up inefficiently achieving the fundamental 90% of issues that they don&apos;t actually pay attention to the remaining problems that are actually difficult and/or emerging:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Spatial autocorrelation&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Metadata&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cartography&lt;/strong&gt;&lt;/p&gt;
&lt;!-- {% sidenote &quot;sn-id-cartography&quot; &quot;Interactive and otherwise: bad defaults threaten to undo hundreds of years of cartographic experience.&quot; %} --&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Efficient, client-side implementations of &lt;strong&gt;geometric algorithms&lt;/strong&gt;&lt;/p&gt;
&lt;!-- - sidenote &quot;sn-id-turf&quot; &quot;Read: [turf.js](https://github.com/Turfjs/turf)&quot; %} --&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Spatial accuracy&lt;/strong&gt;&lt;/p&gt;
&lt;!-- {% sidenote &quot;sn-id-sa&quot; &quot;I&apos;ve yet to see a geocoding implementation that even attempts to **record** accuracy!&quot; %} --&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Spatial error&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Modifiable areal unit problem&lt;/li&gt;
&lt;li&gt;Ecological fallacy&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Locational fallacy&lt;/p&gt;
&lt;!-- {% sidenote &quot;sn-id-lf&quot; &quot;e.g. the reduction of an entity to a single point when it is more appropriately modelled as existing over a mutlidimensional field.&quot; %} --&gt;
&lt;/li&gt;
&lt;li&gt;Spatial sampling&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stochastic processes&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- {% sidenote &quot;sn-id-sp&quot; &quot;My own masters thesis considered this issue for measuring public transport accessibility: bus arrival time is a stochastic process, not a deterministic one. Further, spatial data is too often considered to be a random sample with many observations—I posit instead that it be viewed as a single realisation of a stochastic process. This should hardly be radical, but the gap in the literature for thinking like this is enormous.&quot; %} --&gt;
&lt;p&gt;Within the spatial profession (i.e. the Twittersphere, where I hear from most of these people), I also don&apos;t feel like enough attention is being paid to emerging and not-so-emerging technologies and how they can revolutionise the way spatial questions are posed and answered, and hopefully assist in shifting some attention to the 10% of real spatial problems, either directly, or by making the 90% more readily accomplishable.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/neo4j-contrib/spatial&quot;&gt;Spatially-augmented graph databases&lt;/a&gt; are something that has been piquing my interest recently and I intend to write a blog post about some experiments shortly. Why is no one really talking about them?&lt;/li&gt;
&lt;li&gt;I&apos;m not going to hold my breath waiting for the self-delcared GIS commentators on the circle-jerk that is LinkedIn to discuss the relative merits of GeoDjango.&lt;/li&gt;
&lt;li&gt;I didn&apos;t even encounter a NetCDF dataset with an arbitrary number of dimensions, embedded metadata, sigma coordinate systems and irregular grid spacing until I started working around oceanographers and meteorologists.&lt;/li&gt;
&lt;li&gt;Why is &lt;a href=&quot;http://geogig.org/&quot;&gt;GeoGig&lt;/a&gt; still in beta? Why is no one really using it?&lt;/li&gt;
&lt;li&gt;Turf.js!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are exceptions of course. But if you want to participate in these exceptions, I found some useful advice that builds on the argument that a desktop GIS is increasingly akin to word processing software:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;So if you’re considering a GIS career, you might want to reframe the question. Instead of learning ArcGIS and getting a GISP certificate, I would recommend that you choose one of 4 paths:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;geospatial or geostatistical analyst;&lt;/li&gt;
&lt;li&gt;cartographer or visualization design expert;&lt;/li&gt;
&lt;li&gt;software developer;&lt;/li&gt;
&lt;li&gt;Geographic Information Scientist;
Or some combination of the four (and an application area of interest wouldn’t hurt either).  If you only train yourself to be a GIS user you’ll be in the same boat as a professional word processor before too long.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;— &lt;a href=&quot;http://www.justinholman.com/2012/03/20/spatial-is-indeed-special/&quot;&gt;Justin Holman&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As Holman notes, the existence of Microsoft Word didn&apos;t make good writers obsolete. In fact probably the opposite is true.&lt;/p&gt;
&lt;p&gt;I recognise that this post actually comes across as quite condescending. Frankly, I hope it is a little, as that was completely my intention. I mean what I say and a I say what I mean. I know I&apos;m not blameless, and I&apos;m comfortable with that because I recognise it and frequently acquiesce to those who know a lot more than I do about what I make my living in. I know for a fact that a lot of other people aren&apos;t blameless, either. I just worry that many don&apos;t recognise it. As a profession, spatial people should be extolling the merits of the solutions to difficult problems that we have studied. We need less button-clicking, more actual problem solving, because I&apos;m not seeing enough evidence of the latter actually happening.&lt;/p&gt;
&lt;p&gt;We&apos;re not typists, we&apos;re writers, &lt;em&gt;auteurs&lt;/em&gt;, creators, scientists, and problem solvers. We should be proud of it... and act like it.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Parallel geocoding in Python with geopy]]></title><description><![CDATA[Geocoding: the process of taking an address as a piece of semi-structured text, and returning a coordinate somewhere on the surface of the…]]></description><link>https://spatialparalysis.xyz/blog/parallel-geopy/</link><guid isPermaLink="false">https://spatialparalysis.xyz/blog/parallel-geopy/</guid><pubDate>Thu, 10 Sep 2015 10:24:00 GMT</pubDate><content:encoded>&lt;p&gt;Geocoding: the process of taking an address as a piece of semi-structured text, and returning a coordinate somewhere on the surface of the Earth. It&apos;s very unlikely that you&apos;re not going to use an online service to do this. This means a few things. Firstly, that you have to decide on a geocoding provider. Secondly, you&apos;re going to have to sit tight while the geocoding takes place. Python can address both of these issues for you.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;https://geopy.readthedocs.org/en/1.11.0/&quot;&gt;GeoPy&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;GeoPy is a Python 2/3 module for accessing a whole suite of geocoding web services. As of version 1.10.0, these include: ArcGIS; Baidu; Bing; DataBC; GeocodeFarm; GoecoderDotUS; GeoNames; Google; IGN France; LiveAddress; NaviData; Nominatim (OSM); OpenCage; OpenMapQuest; Yahoo! BOSS Place Finder; What3Words; and Yandex.&lt;/p&gt;
&lt;p&gt;Of these, I would recommend Google if you are OK with a reasonably low limit but high tolerance to poorly-formatted addresses, or otherwise Nominatim. Nominatim is free, requires no API token, and only uses OpenStreetMap data. However, OpenMapQuest is even better, as it is also based on OSM, but doesn&apos;t restrict you to geocoding in multiple threads.&lt;/p&gt;
&lt;h2&gt;Basic usage&lt;/h2&gt;
&lt;p&gt;Using GeoPy is great, because it abstracts away all the details of which provider you&apos;re connecting to. Although I&apos;m yet to try it, it would be trivial to iterate over a set of providers and actually produce multiple geocoded locations per address, perhaps as part of a process to determine error, or to average the returned locations.&lt;/p&gt;
&lt;p&gt;Here&apos;s a short sample demonstrating the simplicity of the module:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;from geopy.geocoders import Nominatim
geolocator = Nominatim(country_bias=&apos;New Zealand&apos;, timeout=4)
geocoded = geolocator.geocode(&apos;Raglan, Waikato&apos;, exactly_one=True)
if geocoded is not None:
    # success
    lat = geocoded.latitude
    lon = geocoder.longitude
else:
    # Here, perhaps you can run the geocoding function again,
    # after cleaning your input a little bit
    # Then you have recursion until you get a result!
    pass
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to use OpenMapQuest (for example), you just need to swap it out for Nominatim, and also remove the country bias (which OpenMapQuest doesn&apos;t support).&lt;/p&gt;
&lt;h2&gt;Multiprocessing&lt;/h2&gt;
&lt;p&gt;There&apos;s still a problem, despite all this. Geocoding takes forever. All web services take some time, really. But geocoding is special, given what is actually going on behind the scenes. A list of roughly 500 addresses, most of which needed the recursion I alluded to above, took me about 15 minutes to resolve. Duane Wilkins &lt;a href=&quot;https://www.linkedin.com/pulse/easy-address-geocoding-duane-wilkins&quot;&gt;posted on LinkedIn recently&lt;/a&gt; that using the Google geocoding service via Google Sheets resulted in about 800 addresses done in about 5 minutes. I suspect that they were clean, but Google is damn fast at geocoding. You&apos;d expect that relative speed difference though: Nominatim is sitting on donated hardware.&lt;/p&gt;
&lt;p&gt;However both of these are very slow, in my opinion. Agonisingly so.&lt;/p&gt;
&lt;p&gt;A good Python free lunch to speed this up is to launch mutliple geoprocessing calls asynchronously. In my case, I had a small number of very long and poorly-formatted adddresses that took forever to resolve because the geocoder had to be performed multiple times, most of which resulted in nothing as the string was progressively cleaned, or indeed stripped of information that the geocoder simply could not understand (&quot;5 nm out to sea east of Tauranga&quot; is the best example). What if I could get these slow processes running, and run others alongside, in parallel? This is totally possible! And because Python is batteries-included, it is very, very easy!&lt;/p&gt;
&lt;p&gt;In my case, I had a list of objects (&lt;code&gt;sightings&lt;/code&gt;) which are members of a class that has a method called &lt;code&gt;geocode&lt;/code&gt; that essentially launches the geocoding routine I showed you above. (In my case, the function doesn&apos;t return anything, but has the side-effect of setting each Address object&apos;s &lt;code&gt;latitude&lt;/code&gt; and &lt;code&gt;longitude&lt;/code&gt;.)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import multiprocessing

addresses = # Gather a list of Address objects with a `geocode`

def geocode_worker(address):
    address.geocode()
    return address

def main():
    # Start as many worker processes as you have cores
    pool = multiprocessing.Pool(processes=multiprocessing.cpu_count())
    # Apply geocode worker to each address, asynchronously
    addresses = pool.map(geocode_worker, addresses)

if __name__ == &apos;__main__&apos;:
    main()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;[[newthought | A quick gotcha!]]
| The worker function has to be &lt;a href=&quot;http://docs.python.org/library/pickle.html#what-can-be-pickled-and-unpickled&quot;&gt;able to be pickled&lt;/a&gt;. In simple terms, you have to have the worker function at the top level. The above snippet would not work if &lt;code&gt;geocode_worker&lt;/code&gt; were defined within &lt;code&gt;main&lt;/code&gt;. In that case, you&apos;d see this error:
| &lt;code&gt;bash | cPickle.PicklingError: Can\&apos;t pickle &amp;#x3C;type &apos;function&apos;&gt;: attribute lookup __builtin__.function failed |&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;[[newthought | Don&apos;t use Nominatim for this!]]
| I made the mistake of &lt;em&gt;not&lt;/em&gt; reading &lt;a href=&quot;https://nominatim.openstreetmap.org/&quot;&gt;the usage restrictions&lt;/a&gt; of the Nominatim geocoding service, and forgetting a debug switch, and then launched tens of requests at the same time, repeatedly, hundreds of times, and then had my IP address rate limited. Currently I can&apos;t even &lt;em&gt;visit&lt;/em&gt; nominatim.openstreetmap.org, let alone use the geocoder.&lt;/p&gt;
&lt;p&gt;The restriction is that you must use a single thread. That is, you must not do what I just showed you using Nominatim as your geocoding service, or you will end-up thrashing their limited resources. You also should really cache the results as they come in.&lt;/p&gt;
&lt;p&gt;However, OpenMapQuest uses Nominatim but does not have usage restrictions. You can launch some nice parallel processes with this geocoder... just be respectful.&lt;/p&gt;
&lt;h2&gt;Results&lt;/h2&gt;
&lt;p&gt;I achieved a speed-up of around 20x over the full set. The small number of dirty addresses that earlier caused the geocoder to hang still did so, but real work was going on around them; they were no longer blocking.&lt;/p&gt;
&lt;p&gt;Looking at the logs, here&apos;s what the difference in processing looks like for a sample of my addresses. When you see &lt;code&gt;fail&lt;/code&gt;, that is when my recursion kicks in that applies an algorithm to clean the address string before trying to geocode again.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&apos;Gluepot Road, Oropi, Tauranga, North Island&apos; ← geocoder starting up
&apos;Gluepot Road, Oropi, Tauranga, New Zealand&apos; ← fail
&apos;Gluepot Road, Tauranga, New Zealand&apos; -37.8475939 176.1500778 ← success
&apos;Maungaraki, Lower Hutt, North Island&apos; ← geocoder starting up
&apos;Maungaraki, Lower Hutt, New Zealand&apos; -41.2058337 174.8800422 ← success
&apos;Rimutaka Ranges, Wairarapa, North Island&apos; ← geocoder starting up
&apos;Rimutaka Ranges, Wairarapa, New Zealand&apos; ← fail
&apos;Rimutaka, Wairarapa, New Zealand&apos; -41.3573081 175.0005109 ← success
&apos;Mourea, Rotorua, North Island&apos; ← geocoder starting up
&apos;Mourea, Rotorua, New Zealand&apos; -38.0442035 176.3261444 ← success
&apos;Tauranga, North Island&apos; ← geocoder starting up
&apos;Tauranga, New Zealand&apos; -37.6867319 176.1673614 ← success
&apos;Waihopai Valley, Marlborough, South Island&apos; ← geocoder starting up
&apos;Waihopai Valley, Marlborough, New Zealand&apos; -41.5149705 173.7897351 ← success
&apos;At sea off the coast of the Bay of Plenty, North Island&apos; ← geocoder starting up
&apos;At sea off the coast of the Bay of Plenty, New Zealand&apos; ← fail
&apos;At Bay Plenty, New Zealand&apos; ← fail
&apos;sea off the coast of the Bay of Plenty, New Zealand&apos; ← fail
&apos;Bay of Plenty, New Zealand&apos; -37.9503755 176.938287362 ← success
&apos;Taupo, North Island&apos; ← geocoder starting up
&apos;Taupo, New Zealand&apos; -38.6883048 176.0755486 ← success
Done in 16s
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&apos;Gluepot Road, Oropi, Tauranga, North Island&apos; ← geocoder starting up
&apos;Maungaraki, Lower Hutt, North Island&apos; ← geocoder starting up
&apos;Rimutaka Ranges, Wairarapa, North Island&apos; ← geocoder starting up
&apos;Mourea, Rotorua, North Island&apos; ← geocoder starting up
&apos;Waihopai Valley, Marlborough, South Island&apos; ← geocoder starting up
&apos;Tauranga, North Island&apos; ← geocoder starting up
&apos;At sea off the coast of the Bay of Plenty, North Island&apos; ← geocoder starting up
&apos;Taupo, North Island&apos; ← geocoder starting up
&apos;Tauranga, New Zealand&apos; -37.6867319 176.1673614 ← success
&apos;Mourea, Rotorua, New Zealand&apos; -38.0442035 176.3261444 ← success
&apos;Waihopai Valley, Marlborough, New Zealand&apos; -41.5149705 173.7897351 ← success
&apos;Taupo, New Zealand&apos; -38.6883048 176.0755486 ← success
&apos;Gluepot Road, Oropi, Tauranga, New Zealand&apos; ← fail
&apos;Rimutaka Ranges, Wairarapa, New Zealand&apos; ← fail
&apos;Maungaraki, Lower Hutt, New Zealand&apos; -41.2058337 174.8800422 ← success
&apos;At sea off the coast of the Bay of Plenty, New Zealand&apos; ← fail
&apos;Gluepot Road, Tauranga, New Zealand&apos; -37.8475939 176.1500778 ← success
&apos;Rimutaka, Wairarapa, New Zealand&apos; -41.3573081 175.0005109 ← success
&apos;At Bay Plenty, New Zealand&apos; ← fail
&apos;sea off the coast of the Bay of Plenty, New Zealand&apos; ← fail
&apos;Bay of Plenty, New Zealand&apos; -37.9503755 176.938287362 ← success
Done in 4s
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice the difference? In the latter case, there are multiple processes: 8 addresses get geocoded at once. They don&apos;t return in order because they&apos;re all happening at the same time and take different lengths of time to complete depending on their complexity. Failing addresses don&apos;t prevent others from getting underway, and the whole process is so much smoother.&lt;/p&gt;
&lt;p&gt;The blocking geocoder ran in 16 seconds, while the second took only 4 seconds. Extrapolate that over hundreds of addresses, and before you declare that that is still not worth the effort, look how little code I had to write. It pays off even for very small, one-off jobs.&lt;/p&gt;
&lt;p&gt;There is much more that can be done with Python&apos;s built-in multiprocessing, particularly using queues. There are a bunch of third-party modules that also implement the idea. I encourage you to explore, perhaps by looking at tutorials for how to write a daemon, and then make something that polls multiple related APIs at the same time, populating a common database in near real time.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Mediawatch on the role of data journalism]]></title><description><![CDATA[A very interesting interview with Harkanwal Singh, the New Zealand Herald Data Editor.]]></description><link>https://spatialparalysis.xyz/blog/mediawatch/</link><guid isPermaLink="false">https://spatialparalysis.xyz/blog/mediawatch/</guid><pubDate>Sat, 04 Jul 2015 01:00:00 GMT</pubDate><content:encoded>&lt;p&gt;A very interesting interview with Harkanwal Singh, the New Zealand Herald Data Editor.&lt;/p&gt;
&lt;iframe src=&quot;http://www.radionz.co.nz/audio/remote-player?id=201762824&quot; width=&quot;100%&quot; frameborder=&quot;0&quot; height=&quot;62px&quot;&gt;&lt;/iframe&gt;</content:encoded></item><item><title><![CDATA[Landsat 8 Mosaic]]></title><description><![CDATA[I noticed this Tweet today, and thought it was such a great example of good a well-designed interface, and actually useful tool. I felt I…]]></description><link>https://spatialparalysis.xyz/blog/landsat-8-mosaic/</link><guid isPermaLink="false">https://spatialparalysis.xyz/blog/landsat-8-mosaic/</guid><pubDate>Mon, 22 Jun 2015 22:23:49 GMT</pubDate><content:encoded>&lt;p&gt;I noticed this Tweet today, and thought it was such a great example of good a well-designed interface, and actually useful tool. I felt I needed to share it.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Announcing Landsat 8 Mosaic: fast and easy mosaic creation of landsat data! &amp;#10;&lt;a href=&quot;http://t.co/Gd3DZjkBJJ&quot;&gt;http://t.co/Gd3DZjkBJJ&lt;/a&gt; &lt;a href=&quot;http://t.co/htzUcqveQ5&quot;&gt;pic.twitter.com/htzUcqveQ5&lt;/a&gt;&lt;/p&gt;&amp;mdash; Vincent Sarago (@_VincentS_) &lt;a href=&quot;https://twitter.com/_VincentS_/status/612923026678530049&quot;&gt;June 22, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;p&gt;There is a also link to a blog post about the tool in the Tweet.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[The things you see on a journey]]></title><description><![CDATA["What you'll be making: identifying the land that you can feasibly see from the train in the central plateau of New Zealand. Some moons ago…]]></description><link>https://spatialparalysis.xyz/blog/things-you-see-on-a-journey/</link><guid isPermaLink="false">https://spatialparalysis.xyz/blog/things-you-see-on-a-journey/</guid><pubDate>Mon, 01 Jun 2015 11:07:10 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;./example.png&quot; alt=&quot;&amp;#x22;What you&amp;#x27;ll be making: identifying the land that you can feasibly see from the train in the central plateau of New Zealand.&quot; title=&quot;What you&amp;#x27;ll be making: identifying the land that you can feasibly see from the train in the central plateau of New Zealand.&quot;&gt;&lt;/p&gt;
&lt;p&gt;Some moons ago, I met Dr Pierre Roudier, who works at &lt;a href=&quot;http://www.landcareresearch.co.nz/home&quot;&gt;Landcare Research New Zealand&lt;/a&gt;, at a workshop on PostGIS being held at the National Institute for Water and Atmospheric Research (&lt;a href=&quot;https://www.niwa.co.nz/&quot;&gt;NIWA&lt;/a&gt;). I was just getting started on PostGIS at the time, having identified that I was probably going to need it for my masters thesis. The two-day session, led by Digital Mapping Solutions New Zealand (&lt;a href=&quot;http://www.mapsolutions.co.nz/&quot;&gt;DMS&lt;/a&gt;), was brilliant. It gave me just enough of an introduction to PostGIS to realise its capability, and a leg-up to explore the rest on my own. I ended up relying entirely on PostGIS for my masters thesis, and now I swear by PostGIS and PL/pgsql as the solution to most issues calling for a spatial database.&lt;/p&gt;
&lt;p&gt;What has this got to do with anything? A few things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;For the love of all things holy, attend events like these if you can. You meet interesting people, get pizza (I ate kangaroo), and get a kick up the bum to learn new things that, honestly, you wouldn&apos;t have bothered learning on your own. (In my case, the only reason I was able to attend was that I&apos;d won a small cash prize for talking about my thesis—so you if you&apos;re studying, try jump on small opportunities like that, too.)&lt;/li&gt;
&lt;li&gt;Pierre ran a tutorial at the end of the first day on GRASS GIS. It really piqued my interest in GRASS. At the time, I was struggling with a batch viewshed calculation for work using ArcGIS. It was falling over due to the size of the computation. I described the problem to Pierre, and he said that it sounded like something GRASS could do no problem. Problem was, I&apos;d never used GRASS. It looked hard and scary: it barely has a GUI. Pierre gave me a headstart on the computation, and I adapted his example to my need. It wasn&apos;t actually that bad, once I&apos;d seen a complete, straightforward example.&lt;/li&gt;
&lt;li&gt;I realised the value of a gentle introduction to a new technique, that actually fulfils some goal you have in mind.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This last point is now really important to me. If I&apos;m trying to learn something new, it has never truly helped me to open a book or the documentation and work through silly, disconnected examples one by one. I actually have to make something useful for myself. &lt;strong&gt;Solve your own, tangible problem.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Doing this gives you enough motivation to finish, to finish well, and to know when you have finished. It also means you run into a wide variety of problems that your textbooks examples never mention; like, how do you write an iterator in bash?&lt;/p&gt;
&lt;h2&gt;What are you going to learn?&lt;/h2&gt;
&lt;p&gt;This is a tutorial on using GRASS, Git, Leaflet, bash, JavaScript, CSS, HTML, and hosting map tiles on Amazon AWS. Yes, all of those. No, not to exhaustion. Rather, I&apos;ve written the tutorial that I would like to have found a few months ago. A tutorial that takes a tangible (albeit frivolous) problem to completion, and uses a realistic combination of tools to solve it. You&apos;ll see how these separate tools come together, and how you could then take pieces here and there and work on something completely different. That&apos;s an effective way to learn, if you invest into the idea of the project, and are willing to use this tutorial as a springboard for your own idea.&lt;/p&gt;
&lt;p&gt;The end result is this &lt;a href=&quot;/train-landscapes&quot;&gt;interactive map&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;[[sidenote | Now broken...]]
| The map tiles are now broken, as I was not willing to pay to host the tiles for long. Sorry.&lt;/p&gt;
&lt;h2&gt;What I can&apos;t cover&lt;/h2&gt;
&lt;p&gt;I will not cover &lt;a href=&quot;http://readwrite.com/2013/09/30/understanding-github-a-journey-for-beginners-part-1&quot;&gt;beginning with Git&lt;/a&gt;, or fundamental Git concepts. But you&apos;ll learn some commands and how to host an interactive map on the Internet for free with Github pages.&lt;/p&gt;
&lt;p&gt;I will not cover getting started with GRASS. Although this won&apos;t be a terrible introduction, I&apos;m not detailing introductory concepts or using the GUI.&lt;/p&gt;
&lt;p&gt;[[sidenote | If you need more help...]]
| Try
|
| - &lt;a href=&quot;https://grass.osgeo.org/documentation/first-time-users/%22&quot;&gt;[This &quot;first time users&quot; GRASS tutorial]&lt;/a&gt;
| - &lt;a href=&quot;https://grass.osgeo.org/grass70/manuals/helptext.html%22&quot;&gt;[The GRASS 7.0 manual]&lt;/a&gt;
| - &lt;a href=&quot;https://grasswiki.osgeo.org/wiki/Quick_wxGUI_tutorial%22&quot;&gt;[This quick GRASS GUI tutorial]&lt;/a&gt;
|
| and then come back.&lt;/p&gt;
&lt;p&gt;I had the benefit of a hands-on GRASS introduction at the DMS/NIWA workshop.&lt;/p&gt;
&lt;p&gt;I won&apos;t be discussion web hosting of maps in much depth. I&apos;m not yet much of a web developer, and I&apos;ve only tinkered with Amazon AWS to get this to work. I&apos;m not an authority.&lt;/p&gt;
&lt;h2&gt;What do you need?&lt;/h2&gt;
&lt;p&gt;If you want to code along, you&apos;ll need to install GRASS GIS (6.4 or 7.0). Git is optional; if you&apos;re not familiar with it, I&apos;d like to just show you how can use it in a little project like this.&lt;/p&gt;
&lt;p&gt;I use Ubuntu for my desktop operating system. I don&apos;t know how easy GRASS is to install on Windows or Mac, but I like to use the &lt;a href=&quot;https://launchpad.net/~ubuntugis/+archive/ubuntu/ubuntugis-unstable&quot;&gt;ubuntugis-unstable PPA&lt;/a&gt;. This has GRASS 6.4 bundled up. GRASS 7.0 is faster due to the addition of new functions, so use that if you&apos;re comfortable. If you&apos;re not using a flavour of Linux, look into getting a virtual machine set up---it&apos;s surprisingly easy and you&apos;ll not regret it.&lt;/p&gt;
&lt;p&gt;I&apos;m also going to have to assume a modicum of familiarity with GIS, and some programming concepts (variables, iteration, functions, etc.). Yet you also need a willingness to learn! I&apos;m still learning more about programming every day, even though I now get paid to do it, so if there&apos;s anything that I seem to have brushed over, don&apos;t feel too shy to ask me to explain it further.&lt;/p&gt;
&lt;h1&gt;The problem&lt;/h1&gt;
&lt;p&gt;I talked to Pierre about a train trip across the North Island of New Zealand, known as the &lt;em&gt;Overlander&lt;/em&gt;. He often takes the train to get to Wellington, and I&apos;ve taken the Overlander several times to get between Auckland and Wellington. It is a lot slower than flying (by around 11+ hours), but personally I find it more enjoyable. In addition to your ability to get some solid solo productive time, it is very scenic. Being Spatial Scientists™, Pierre and I discussed how one could go about quantifying the &lt;em&gt;scenic-ness&lt;/em&gt;... &lt;em&gt;scenicity&lt;/em&gt;... the &lt;em&gt;je ne sais quoi&lt;/em&gt; of the trip.&lt;/p&gt;
&lt;p&gt;To solve this problem, you need to think abstractly about it, and then apply that back to the real problem, phrased in reduced, but practical terms:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Given a line feature, and an elevation model, how can you determine the subset of the elevation model that is visible from the line?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Translated into the vernacular: if you&apos;re sitting on the train, what can you see out of the window?&lt;/p&gt;
&lt;p&gt;What could be taken into consideration in this case, from a spatial perspective? The most straightforward ideas include: what is the terrain like? (Hills block views of what is behind them.) How far can you see out the window? (&lt;a href=&quot;http://en.wikipedia.org/wiki/Horizon#Distance_to_the_horizon&quot;&gt;Distance to the horizon&lt;/a&gt;, coupled with personal eyesight, and atmospheric refraction.)&lt;/p&gt;
&lt;p&gt;The not-so-straightforward, or even unresolvable issues include: are you on the left or right side of the train? Is the train going north or south? What speed is the train travelling at? Can you actually see out of the window? Is it dark? Are you asleep? Are there trees in the way? Are there tunnels?&lt;/p&gt;
&lt;p&gt;Like all good spatial problems, the difficult issues outnumber the tractable ones. &lt;strong&gt;We&apos;re just going to be thinking about visibility as determined by the bare terrain, using a constant distance to the horizon, ignoring tunnels.&lt;/strong&gt; This (arguably) gives us some measurement of the &lt;em&gt;maximum extent&lt;/em&gt; of space that is visible, which could be reduced further.&lt;/p&gt;
&lt;p&gt;The two most influential decisions are the resolution of our terrain model, which determines blocking, and the distance to the horizon, which in an ideal world considers the curvature of the earth and an observer&apos;s elevation.&lt;/p&gt;
&lt;h3&gt;Setting up with Git&lt;/h3&gt;
&lt;p&gt;Launch your terminal, and navigate to somewhere where we can place a folder of interesting stuff (our project code and input data).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git clone&lt;/code&gt; my GitHub repository with the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/alpha-beta-soup/train-landscapes
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This creates a folder called &lt;code&gt;train-landscapes&lt;/code&gt; in your current directory, within which the project is &quot;cloned&quot;: duplicated for your local consumption.&lt;/p&gt;
&lt;p&gt;If you browse my Github repository in your web browser via the &lt;a href=&quot;https://github.com/alpha-beta-soup/train-landscapes&quot;&gt;link&lt;/a&gt; in the &lt;code&gt;git clone&lt;/code&gt; command, you&apos;ll see that I originally &quot;forked&quot; this project from Pierre. That is, he started it, and I carried it on with my own changes. Pierre wrote the initial version of the GRASS procedure, targeting GRASS version 7. I adjusted this script, to make it work a bit faster with a larger input and higher resolution raster terrain model. I also made a second version that would work with GRASS 6.4, which is what I was using at the time. That&apos;s what&apos;s great about Git and open source code generally: being able to take someone else&apos;s idea, and adapt it to fit your needs and circumstances.&lt;/p&gt;
&lt;p&gt;After cloning, you&apos;ll see that there are a few files and folders, if you enter the &lt;code&gt;train-landscapes&lt;/code&gt; directory. &lt;code&gt;.gitignore&lt;/code&gt; is a text file with the following contents:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;data/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This tells Git to not track files (or changes to files) in the directory &lt;code&gt;data/&lt;/code&gt; (which contains the source and output data, like the terrain DEM/hillshade model that I used as input).&lt;/p&gt;
&lt;p&gt;The hillshade and digital elevation model (DEM) I used for this project are several gigabytes in size; I haven&apos;t included them in the project to save you the bandwidth. Likewise, the tiles that actually constitute what you see on the map aren&apos;t on Github either (they&apos;re hosted by Amazon, more on that later). The &lt;code&gt;.gitignore&lt;/code&gt; file is a handy way to manage issues like this one on excluding large datasets from source control when they don&apos;t need it. For following along with this tutorial, you can download any DEM of New Zealand (projected to NZTM NZGD2000) that you have the rights to use. (You can of course pick a region anywhere else in the world.)&lt;/p&gt;
&lt;p&gt;We also have &lt;code&gt;README.md&lt;/code&gt;, which is the Markdown file that provides the documentation you can see on the front page of the GitHub repository for this project.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;index.html&lt;/code&gt; is where we have a simple webpage displaying a Leaflet map. We&apos;ll get to this later.&lt;/p&gt;
&lt;p&gt;The directory &lt;code&gt;data&lt;/code&gt; contains the input vector features I used for this project: the train and road features that we determine visibility from. However, you can&apos;t actually download this directory, as I&apos;ve added it to the &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The directory &lt;code&gt;source&lt;/code&gt; contains the real work: our project code. We can list its contents from the terminal with the &lt;code&gt;ls&lt;/code&gt; command:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;ls source/*

  generate_los.sh
  generate_los_70.sh
  make_map.js
  obtain_corners.py
  style.css
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;generate_los&lt;/code&gt; shell scripts (&lt;code&gt;.sh&lt;/code&gt;) are files that contain a series of commands that will be understood by GRASS GIS, versions 6.4 and 7. Let&apos;s consider them now.&lt;/p&gt;
&lt;h3&gt;GRASS and shell scripts&lt;/h3&gt;
&lt;p&gt;If you have installed GRASS, you can start it up at the command line by running the appropriate command for your version of GRASS: &lt;code&gt;grass64&lt;/code&gt; or &lt;code&gt;grass70&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;After a short moment, a two-window GUI will open up. GRASS uses some concepts and terminology that are pretty hard to get your head around becausr they are different to other GIS programs, particularly the idea of a &quot;mapset&quot;. You should be able to use the default, &quot;PERMANENT&quot; mapset for this tutorial, but I encourage you to look for some other GRASS tutorials that consider making your own mapsets. For now, you can just close or ignore the GUI windows as we will not be using them.&lt;/p&gt;
&lt;p&gt;Let&apos;s consider the GRASS 6.4 code (a shell script written in bash). Open &lt;code&gt;generate_los.sh&lt;/code&gt; in a text editor. To do this with Gedit from the command line:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;gedit source/generate_los.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Browse through the file for a bit.&lt;/p&gt;
&lt;p&gt;The very first line is a &quot;shebang&quot; that just tells the program loader what kind of interpreter to use. Here, we are using bash, as opposed to an alternative UNIX shell, like dash.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;#!/bin/bash
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After that, we define a function called &lt;code&gt;usage&lt;/code&gt;. Usage is called upon when checking inputs to the terminal when the code is executed. The function &lt;code&gt;usage&lt;/code&gt; prints out a small bit of documentation for our code, telling a user that one of two possible arguments can be used: &lt;code&gt;-train&lt;/code&gt; or &lt;code&gt;-road&lt;/code&gt;. Choosing train will make sure the script uses some parameters that apply to travelling by train, and similarly for travelling by road.&lt;/p&gt;
&lt;p&gt;[[sidenote | Disclaimer...]]
| I don&apos;t actually know if this is proper practice for writing what is essentially help documentation. I can&apos;t imagine it&apos;s too far from this.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;usage&lt;/code&gt; function and argument parsing:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;usage() {
   cat &amp;#x3C;&amp;#x3C; EOF
Usage: generate_los.sh [-train | -road]

-train    perform the viewshed analysis for the train journey
-road     perform the viewshed analysis for the road journey
EOF
   exit 1
}

if [ $# -ne 1 ]; then
   # Number of arguments
   # If there is more or less than one, do usage()
   usage;
fi

if [ &quot;$1&quot; != &quot;-train&quot; ] &amp;#x26;&amp;#x26; [ &quot;$1&quot; != &quot;-road&quot; ]; then
  usage;
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;if [ $# -ne 1 ]; then&lt;/code&gt; considers all of the arguments that a user enters alongside the command to execute the GRASS shell script. If the number of arguments is not equal to one (&lt;code&gt;-ne 1&lt;/code&gt;), then the condition is reached: run the &lt;code&gt;usage&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;usage&lt;/code&gt; tells our naïve user that they have to run either (and only one of) these commands at the terminal to get things going:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sh execute_los.sh -train
sh execute_los.sh -road
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Failure to do so simply prints an instruction to the terminal, and causes the script to stop with exit code 1 (&lt;code&gt;exit 1&lt;/code&gt;), a catch-all for general errors.&lt;/p&gt;
&lt;p&gt;If the number of provided arguments is equal to one, we then check if this argument is in the realms of expectation (argument &lt;code&gt;&quot;$1&quot;&lt;/code&gt; is &lt;code&gt;-train&lt;/code&gt; or &lt;code&gt;-road&lt;/code&gt;). If the first argument is not equal to &lt;code&gt;train&lt;/code&gt; (&lt;code&gt;&quot;$1&quot; != &quot;-train&quot;&lt;/code&gt;) or &lt;code&gt;-road&lt;/code&gt;, then &lt;code&gt;usage&lt;/code&gt; is triggered again. Otherwise we go on our merry way: setting up some variables according to &lt;code&gt;train&lt;/code&gt; or &lt;code&gt;road&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;if [ $1 = &quot;-road&quot; ]
then
    LINE_SHP=&apos;../data/road/roads.shp&apos; # Roads shapefile
    PTS_FILE=&quot;../data/road/road_points_coords.csv&quot;
    # ^ An intermediate output of this script; coordinates of LINE_SHP
    ELEV=1.2 # Metres above the ground that the observer stands
    # ^ just a guess (note, try include the vehicle, too)
    OUTFILE=&quot;dist_los_car&quot; # Name of final output raster
elif [ $1 = &quot;-train&quot; ]
then
    # We live in a post-shapefile world, baby!
    LINE_SHP=&apos;../data/train/nz-railway-centrelines-topo-150k.gpkg&apos; # Rail geopackage
    PTS_FILE=&quot;../data/train/rail_points_coords.csv&quot;
    # ^ An intermediate output of this script; coordinates of LINE_SHP
    ELEV=2.5 # Metres above the ground that the observer stands
    # ^ just a guess (note, try include the vehicle, too)
    OUTFILE=&quot;dist_los_rail&quot; # Name of final output raster
else
    usage; # shouldn&apos;t need this
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We define a number of variables that have global scope for the remainder of the script:&lt;/p&gt;
&lt;p&gt;[[newthought | &lt;code&gt;LINE_SHP&lt;/code&gt;]]
| A line &quot;shape&quot;, or vector feature. GRASS is happy accepting a wide variety of vector formats, and we don&apos;t even have to specify what they are. In my case, I downloaded both an Esri Shapefile (for the road following State Highway 1 between Auckland and Wellington) and a &lt;a href=&quot;https://github.com/opengeospatial/geopackage&quot;&gt;GeoPackage&lt;/a&gt; (for the main trunk railroad of the North Island).
|
| Before running this script, I used QGIS to remove all features from my original dataset that I wasn&apos;t interested in. I could have also performed this filtering in GRASS, which would have had the advantage of making it easier to change my region of interest another time.&lt;/p&gt;
&lt;p&gt;[[newthought | &lt;code&gt;PTS_FILE&lt;/code&gt;]]
| The &quot;points file&quot;: a dataset that will be created in the course of the script&apos;s execution, and represents points spaced along our original line features. These points represent all of the viewing opportunities we are going to calculate viewsheds for.&lt;/p&gt;
&lt;p&gt;[[newthought | &lt;code&gt;ELEV&lt;/code&gt;]]
| GRASS&apos; viewshed tools allow us to set observer heights. That is, if you&apos;re trying to determine what you can see from your house, ideally you&apos;d account for the fact that your eyes are not at ground level. Importantly, &lt;strong&gt;a train is higher up than a car&lt;/strong&gt;, and defining the value of this variable &lt;i&gt;conditionally&lt;/i&gt; allows us to be slightly more germane when coming up with the answer to our problem.&lt;/p&gt;
&lt;p&gt;[[newthought | &lt;code&gt;OUTFILE&lt;/code&gt;]]
| The name of the final output raster that we&apos;ll collect up at the end and open to see the result. As we will see, the final output is actually just a GeoTiff (image with a spatial projection). We need to have a different name depending on whether we are calculating train or road visibility, as we wouldn&apos;t want one to overwrite the other.&lt;/p&gt;
&lt;p&gt;Following the conditional variables, there are some variables that are considered constant regardless of our mode of transport:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;R_DEM=&apos;../data/hillshade/nidemreproj&apos; # Elevation DEM
R_RES=25 # The resolution of the DEM (metres)
DIST_PTS=25 # Ideally the resolution of the DEM
MAX_VIS_DIST=30000 # Maximum distance visible
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;[[newthought | &lt;code&gt;DIST_PTS&lt;/code&gt;]]
| This is a really important parameter. It will be used to determine how far our source viewing locations may be from one another. There is no point in this value being smaller than &lt;code&gt;R_RES&lt;/code&gt;, because two different points that lie within the same cell of our terrain model will have the same viewable cells.&lt;/p&gt;
&lt;p&gt;[[newthought | &lt;code&gt;MAX_VIS_DIST&lt;/code&gt;]]
| This is also very important. It defines the maximum distance from one of our viewing spots that can be considered visible to an observer. It is stated in the same units as the projection system uses; which in my case is metres.&lt;/p&gt;
&lt;p&gt;Together, these global variables determine the precision of our output, and therefore how much of a computational challenge this can be. Taking this to the extreme, you could look at a sub-metre terrain model, and consider a near-continuous movement of a passenger who can see for miles and miles... but you&apos;d need a supercomputer or a very long time to get your output. And when your output is ready, it would still be subject to many of our original limitations (lack of trees is probably the biggest one). Your output would actually be subject to &lt;a href=&quot;http://en.wikipedia.org/wiki/False_precision&quot;&gt;&lt;strong&gt;false precision&lt;/strong&gt;&lt;/a&gt;: a very important concept in GIScience.&lt;/p&gt;
&lt;p&gt;While testing, I used a &lt;code&gt;MAX_VIS_DIST&lt;/code&gt; of only 100 metres, and a &lt;code&gt;DIST_POINTS&lt;/code&gt; of thousands of kilometres. This did not give me the actual output I was after, but tested the logic of the code and calculated very quickly even on the real datasets. The parameter values above are the ones that I used when making the real output, which took several days to calculate. This is still a very expensive calculation!&lt;/p&gt;
&lt;h3&gt;Preparation for GRASS 6.4&lt;/h3&gt;
&lt;p&gt;Next up, we are preparing to actually use the command &lt;code&gt;r.los&lt;/code&gt; (&quot;raster&quot;.&quot;line of sight&quot;). Here GRASS 7.0 has a strong advantage over GRASS 6.4. &lt;a href=&quot;http://grass.osgeo.org/grass64/manuals/r.los.html&quot;&gt;The documentation for &lt;code&gt;r.los&lt;/code&gt;&lt;/a&gt; states the following:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The time to complete the calculation increases dramatically with the region size. Try to keep the columns and rows under 1000.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The equivalent GRASS 7.0 command, not available in GRASS 6.4 is &lt;code&gt;r.viewshed&lt;/code&gt;, and it does not suffer so.&lt;/p&gt;
&lt;p&gt;In order to keep the number of rows and columns in our calculation under 1000, we actually need to adjust the variable &lt;code&gt;MAX_VIS_DIST&lt;/code&gt; while considering &lt;code&gt;R_RES&lt;/code&gt;, as the two are actually tightly linked. The following commands create a new intermediate variable, &lt;code&gt;POS_VIS_DIST&lt;/code&gt; (possible visibility distance), which determines the maximum distance we can possibly define as &quot;visible&quot; without exceeding the limit of 1000 rows or 1000 columns in our visibility calculation. If &lt;code&gt;POS_VIS_DIST&lt;/code&gt; ends up exceeding &lt;code&gt;MAX_VIS_DIST&lt;/code&gt;, then we opt for &lt;code&gt;POS_VIS_DIST&lt;/code&gt; by setting &lt;code&gt;MAX_VIS_DIST&lt;/code&gt; equal to &lt;code&gt;POS_VIS_DIST&lt;/code&gt;; otherwise we keep on with our original value of &lt;code&gt;MAX_VIS_DIST&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# r.los takes a long time, and the manual says to keep
# the number of rows and columns &quot;under 1000&quot;. Here we
# adjust MAX_VIS_DIST by considering the resolution of
# the raster (R_RES), so that there is a maximum of
# 1000 rows and columns

# The maximum possible vis dist to use and still have
# 1000 rows and cols
POS_VIS_DIST=$(echo &quot;$R_RES * 1000 / 2&quot; | bc -l)

if [ 1 -eq `echo &quot;$POS_VIS_DIST &amp;#x3C; $MAX_VIS_DIST&quot; | bc` ]
then
  # If the maximum distance r.los can sustain exceeds the
  # user-selected value, override it
  echo &quot;The MAX_VIS_DIST parameter has been changed \n
  from $MAX_VIS_DIST to $POS_VIS_DIST for performance \n
  reasons.&quot;
  MAX_VIS_DIST=$POS_VIS_DIST
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To understand this, we should consider what each line is actually doing.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;POS_VIS_DIST=$(echo &quot;$R_RES * 1000 / 2&quot; | bc -l)&lt;/code&gt; instantiates a variable that is equal to the resolution of the raster, multiplied by 500. This represents how many cells in any direction an observer can &quot;look&quot; without the number of rows or columns exceeding 1000. &lt;code&gt;bc&lt;/code&gt; is a command to access &quot;an arbitrary precision calculator language&quot; (it calculates numbers). The pipe (&lt;code&gt;|&lt;/code&gt;) is a way to connect the output of the left command to the input of the right command.&lt;/p&gt;
&lt;p&gt;In the shell you could write:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;POS_VIS_DIST=$(echo &quot;25 * 1000 /2&quot; | bc -l)
echo $POS_VIS_DIST
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And it would spit out the value of your calculation: 12500&lt;/p&gt;
&lt;p&gt;The next piece of logic is to compare this number to our &lt;code&gt;MAX_VIS_DIST&lt;/code&gt; to see if it is larger:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if [ 1 -eq `echo &quot;$POS_VIS_DIST &amp;#x3C; $MAX_VIS_DIST&quot; | bc` ]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Consider the following commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;v1=$(echo &quot;10 &amp;#x3C; 20&quot; | bc -l)
v2=$(echo &quot;20 &amp;#x3C; 10&quot; | bc -l)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Can you see that we&apos;re doing inequality checks? The value of &lt;code&gt;v1&lt;/code&gt; is 1, true (10 is less than 20); the value of &lt;code&gt;v2&lt;/code&gt; is 0, false (20 is not less than 10). &lt;code&gt;if [ 1 -eq result ]&lt;/code&gt; then asks &quot;if 1 is equal to result&quot;, or more fluidly, &quot;if result is true&quot;. If it is, then you can see above that we reset &lt;code&gt;MAX_VIS_DIST&lt;/code&gt; as it violates our 1000 rows and columns constraint.&lt;/p&gt;
&lt;h3&gt;Distance to the horizon&lt;/h3&gt;
&lt;p&gt;Now at this point it is a good idea to point out that I have actually picked arbitrary values for &lt;code&gt;MAX_VIS_DIST&lt;/code&gt; in this example. There are more robust methods to determine the distance to the visible horizon that depend on the elevation of your position, and the curvature of the earth. The value can actually vary quite markedly. The GRASS documentation offers a nice approximation, but &lt;code&gt;r.los&lt;/code&gt; itself does not take into account the curvature of the earth:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The curvature of the Earth is not taken into account for these calculations. However, for interest&apos;s sake, a handy calculation for distance to the true horizon is approximated by $d = \sqrt{13h}$ where $h$ is the height of the observer in meters (above sea level) and $d$ is the distance to the horizon in km. This may be useful for setting the &lt;code&gt;max_dist&lt;/code&gt; value.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You could implement this in GRASS with a bit of &lt;code&gt;bc&lt;/code&gt; and considering the elevation value of each cell beneath each observer point, but I&apos;ll leave that as an exercise for the reader (God I hate that). Consider this a reminder that any proposed solution to a geographic problem can almost always be improved.&lt;/p&gt;
&lt;p&gt;A partial solution is to switch to GRASS 7.0: &lt;a href=&quot;http://grass.osgeo.org/grass70/manuals/r.viewshed.html&quot;&gt;&lt;code&gt;r.viewshed&lt;/code&gt;&lt;/a&gt; allows a &lt;code&gt;-c&lt;/code&gt; flag that considers the curvature of the earth better than you could—with reference to the current ellipsoid:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;By default the elevations are not adjusted for the curvature of the earth. The user can turn this on with flag &lt;code&gt;-c&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;However this &lt;strong&gt;still&lt;/strong&gt; doesn&apos;t resolve the problem of determining the actual distance to the horizon. In part, this is because that also depends on atmospheric conditions. For example, on an exceptionally clear day, when the atmospheric pressure is just right, you can actually make out Mt. Taranaki when standing on the Kāpiti Coast!&lt;/p&gt;
&lt;h3&gt;Further preparation for the line of sight calculation&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Load shapefile into GRASS
v.in.ogr dsn=$LINE_SHP output=line_feature --o --v

# Load elevation raster into GRASS and set it as the computational region
r.in.gdal --o input=$R_DEM output=dem --verbose

# Sample points along line
v.to.points -ivt in=line_feature out=line_feature_points dmax=$DIST_PTS --o --q

# Put point coordinates in text file
v.out.ascii -r in=line_feature_points fs=, --quiet | awk -F &quot;\&quot;*,\&quot;*&quot; &apos;{print $1&quot;,&quot;$2}&apos; &gt; $PTS_FILE

NPTS=`cat $PTS_FILE | wc -l`
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Try and see if you can work out what this section of code does. If you have GRASS running in your terminal, you can find out what any given GRASS command does with the following pattern: &lt;code&gt;r.command --help&lt;/code&gt;, which is the same pattern for most commands at a UNIX terminal. You can also consult the online help.&lt;/p&gt;
&lt;p&gt;To summarise the help documents for the GRASS commands used here:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;v.in.ogr&lt;/code&gt;: Convert OGR vector layers to GRASS vector map.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;r.in.gdal&lt;/code&gt;: Import GDAL supported raster file into a binary raster map layer.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;v.to.points&lt;/code&gt;: Create points along input lines in new vector with 2 layers.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;v.out.ascii&lt;/code&gt;: Converts a GRASS binary vector map to a GRASS ASCII vector map.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In conjunction with the &lt;code&gt;--help&lt;/code&gt; option and my comments, try and work out what exactly these comments are doing. They represent a stage of data preparation for the next processing step. Remember that the syntax &lt;code&gt;$VARIABLE&lt;/code&gt; is a way to access the value of the variable called &lt;code&gt;VARIABLE&lt;/code&gt;, we defined several of these near the beginning of the script. If you have any questions, leave a comment.&lt;/p&gt;
&lt;h2&gt;Computing viewsheds iteratively&lt;/h2&gt;
&lt;p&gt;The general logic of the viewshed calculation is to take a series of points sampled along a line feature, find all places on the terrain model that a person standing on each point can see, and then mosaic each of these together into a final visibility surface. There are ways to make this smarter, such as using the fact that once a cell has been identified as visible from any point, to never bother querying whether it is visible again. I don&apos;t explore these, although I might if I ever need to re-use this code.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;echo -n &quot;\nComputing viewsheds\n&quot;

COUNTER=0
while read -r line
  do

  PCT_FLOAT=$(echo &quot;100*$((COUNTER+1))/$NPTS&quot; | bc -l)
  PCT=`printf &quot;%0.1f\n&quot; $PCT_FLOAT`

  echo -ne &quot;Processing $NPTS viewshed instances: \t $PCT % ($COUNTER/$NPTS) \r&quot;

  # Set the region to a smaller subset around the current observer point
  #   to speed processing
  x=$(echo $line | cut -f1 -d,)
  y=$(echo $line | cut -f2 -d,)
  W=$(echo &quot;$x-$MAX_VIS_DIST&quot; | bc -l)
  E=$(echo &quot;$x+$MAX_VIS_DIST&quot; | bc -l)
  N=$(echo &quot;$y+$MAX_VIS_DIST&quot; | bc -l)
  S=$(echo &quot;$y-$MAX_VIS_DIST&quot; | bc -l)
  g.region n=$N s=$S e=$E w=$W

  # Does not overwrite, so SIGINT (Ctrl+C) can be used to interrupt a
  #  long-running process, to be resumed later
  #  (keep parameters constant between runs)
  r.los input=dem output=tmp_los_${COUNTER} coordinate=$line obs_elev=$ELEV max_dist=$MAX_VIS_DIST --v
  COUNTER=$((COUNTER+1))

done &amp;#x3C; $PTS_FILE
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We begin by creating a variable, &lt;code&gt;COUNTER&lt;/code&gt;, to store our progress through an iteration. Then we start looping. That&apos;s actually a bit hard to comprehend, so I&apos;ll explain it closely:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;while read -r line
  do
  # do something
done &amp;#x3C; $PTS_FILE
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that before this point, &lt;code&gt;line&lt;/code&gt; didn&apos;t exist. &lt;code&gt;line&lt;/code&gt; is actually being defined on the last line of the loop syntax: &lt;code&gt;done &amp;#x3C; $PTS_FILE&lt;/code&gt; pipes the text file &lt;code&gt;$PTS_FILE&lt;/code&gt;, representing a sequence of points along a line, into the for loop; each line of the file is then put into a variable called &lt;code&gt;$line&lt;/code&gt; that we access during the execution of each loop.&lt;/p&gt;
&lt;p&gt;The first thing that gets done in the body of the loop is to return some information to the terminal, reporting on the progress of the loop. See if you now understand enough about &lt;code&gt;bc&lt;/code&gt; to see how &lt;code&gt;PCT_FLOAT&lt;/code&gt; is the progress of the loop expressed as a percentage value of floating point precision. &lt;code&gt;PCT&lt;/code&gt; stores the result rounded to one decimal place.&lt;/p&gt;
&lt;h3&gt;GRASS regions&lt;/h3&gt;
&lt;p&gt;Next up, we use a bit of black magic to speed up the processing. GRASS uses the concept of &quot;regions&quot; when running calculations. Every command will consider the current region, and nothing will be done outside of that region. So if you&apos;re calculating a viewshed (a very expensive procedure), and you know the maximum distance that you consider viewable from any point, you can tell GRASS that its region can be as small as that area. Annotated code:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Set the region to a smaller subset around the current observer point to speed processing
# Note that this assumes the source line feature is projected in metres
x=$(echo $line | cut -f1 -d,) # Get the x coordinate value from line, the current observer point
y=$(echo $line | cut -f2 -d,) # The corresponding y value
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Try &lt;code&gt;cut --help&lt;/code&gt; coupled with the clue that &lt;code&gt;$line&lt;/code&gt; is comma-delimited, if you don&apos;t understand this.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;W=$(echo &quot;$x-$MAX_VIS_DIST&quot; | bc -l) # x minus the maximum visible distance: the western reach of the region
E=$(echo &quot;$x+$MAX_VIS_DIST&quot; | bc -l) # x + MAX_VIS_DIST: eastern reach
N=$(echo &quot;$y+$MAX_VIS_DIST&quot; | bc -l) # y + MAX_VIS_DIST: northern reach
S=$(echo &quot;$y-$MAX_VIS_DIST&quot; | bc -l) # y - MAX_VIS_DIST: southern reach
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, we use this command to actually set the region in each iteration: &lt;code&gt;g.region n=$N s=$S e=$E w=$W&lt;/code&gt;. I found that resetting the region each loop was remarkably faster than leaving the region equal to the union of all inputs.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./grass70_rviewshed.gif&quot; alt=&quot;rviewshed is fast in Grass 7.0&quot;&gt;&lt;/p&gt;
&lt;p&gt;The final section of the loop performs the following:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;r.los input=dem output=tmp_los_${COUNTER} coordinate=$line obs_elev=$ELEV max_dist=$MAX_VIS_DIST --v
COUNTER=$((COUNTER+1))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;r.los&lt;/code&gt; is the command that we&apos;re really here for. It takes an input DEM, outputs a raster named &lt;code&gt;tmp_los_&lt;/code&gt; plus whatever the counter is up to, a point value (our &lt;code&gt;$line&lt;/code&gt; variable), and the observer elevation... and it goes away and tells us what that observer can see. Well, not really &lt;em&gt;what&lt;/em&gt; they can see, more &lt;em&gt;where&lt;/em&gt; they can see. The &quot;what&quot; can come later with some more Spatial Science™. For now, we close the loop and give it its input to set it in motion: &lt;code&gt;done &amp;#x3C; $PTS_FILE&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;One Viewshed To Rule Them All&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Set computational region to full extent
g.region -pm rast=dem --verbose

# Combine results in a single map
#   (aggregation method doesn&apos;t matter as we use
#   this as a boolean mask)
echo &quot;\nCombining component viewsheds\n&quot;
# Loops because otherwise can easily exceed default hard limit of number of
#   rasters that can be open at once (1024)
for i in `seq 0 99`;
do
  # Combine a subset of all the viewsheds
  # * is a wildcard for zero or more characters
  if [ $i -le 9 ] # If i &amp;#x3C;= 9
  then # append a 0 to the start of $i
    PATT=tmp_los_*0$i
    OUT=total_los_0$i
  else # don&apos;t modify the pattern of $i
    PATT=tmp_los_*$i
    OUT=total_los_$i
  fi
  r.series in=`g.mlist --q type=rast pattern=$PATT sep=,` out=$OUT method=sum --o --q
done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now that we have created each of the viewsheds for each of the points we sampled along the road or train line, we want to combine these individual raster layers into a single raster layer.&lt;/p&gt;
&lt;p&gt;There is considerable scope for interesting complexity here. For instance, you could combine the results additively, thereby building a surface where each cell has a value from 0 (never seen) to a potentially very large number (seen from many of the points along the route). If you assume that the train travels at a constant speed, this surface would tell you how long you spend looking at any given 25x25 metre grid cell. You could then use this to determine what type of forest you spend more time looking at: native or exotic.&lt;/p&gt;
&lt;p&gt;I&apos;m going for an easy option: not worrying about how the layers are combined. I want a simple Boolean surface: can a cell be seen at any point in the trip, or can it never be seen? There&apos;s no room for ambiguity, and the result is not as useful as the rest of the code allows it to be. But, I don&apos;t have a &quot;real&quot; application for this to matter. If you want to fork the repository again on Github and explore this for yourself, go right ahead!&lt;/p&gt;
&lt;p&gt;First, we use &lt;code&gt;g.region&lt;/code&gt; to reset the region to the full extent of our input raster layer. Recall that without this command, the region would be stuck at whatever it was in the last iteration of the preceding loop!&lt;/p&gt;
&lt;p&gt;Then (after some comments and printing information to stdout) we enter a loop that seems a little unnecessary. If we&apos;re combining a bunch of raster layers together all at once, why do we need a loop? The answer is because GRASS 6.4 does not like it if you try and open more than 1024 rasters at any one time. As we would have made thousands of new rasters by this point, we cannot actually combine them all at once; rather we have to do it gingerly, in stages.&lt;/p&gt;
&lt;p&gt;Therefore the pseudo-code is to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Start a loop from 0 to 99&lt;/li&gt;
&lt;li&gt;Get the value of the iterator in the style of 00, 01, 02, ..., 98, 99 (i.e. a leading zero for numbers less than 10).&lt;/li&gt;
&lt;li&gt;Create a pattern variable (&lt;code&gt;PATT&lt;/code&gt;) to store the pattern that our input point-specific viewshed rasters follow if their filename ends with 01, or 02, or whatever the iterator is at. (This will allow us to process roughly 1% of the input rasters in each step.)&lt;/li&gt;
&lt;li&gt;Perform the actual combination for a subset of the layers matching &lt;code&gt;PATT&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;r.series&lt;/code&gt; is the key command of the above codeblock. It takes as its &lt;code&gt;in&lt;/code&gt; parameter a list of layers that is constructed by a second command, &lt;code&gt;g.mlist&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.g.mlist&lt;/code&gt; is a &lt;strong&gt;very&lt;/strong&gt; handy GRASS command. Take a look at its description in its help:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lists available GRASS data base files of the user-specified data type optionally using the search pattern.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So when we want to combine only a fraction of our intermediate viewshed rasters at one time, we tell &lt;code&gt;g.mlist&lt;/code&gt; to go away and find all layers that match a particular pattern (e.g. all rasters called &lt;code&gt;&quot;name_\*00&quot;&lt;/code&gt;, where &lt;code&gt;*&lt;/code&gt; is a wildcard—that is, all of our intermediate layers ending in &quot;00&quot;). &lt;code&gt;r.series&lt;/code&gt; then takes this list of layers and combines them with the &lt;code&gt;method&lt;/code&gt; we have specified. (I used &lt;code&gt;sum&lt;/code&gt;, although as I said I actually ignore this.)&lt;/p&gt;
&lt;p&gt;What we&apos;re then left with is a series of 99 raster layers, each representing a small part of what will become our finished product.&lt;/p&gt;
&lt;p&gt;[[sidenote | I realise now...]]
| ... that it would be smarter to combine the intermediate layer with the pattern-match layers as part of the above loop... but at the price of one additional &lt;code&gt;r.series&lt;/code&gt; it ain&apos;t the end of the world.&lt;/p&gt;
&lt;p&gt;So, combine these up into our finished product with another pattern matching exercise:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;r.series in=`g.mlist --q type=rast pattern=total_los_* sep=,` out=total_los method=sum --o --q
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You could display the result now if you wanted the map to represent the number of times each cell has been determined as being &quot;viewable&quot;. I actually like the idea of a binary (viewable/not viewable) surface, where shading can be used to indicate distance from the line feature. So that&apos;s what I&apos;ll do. However it may be a little misleading, as distance from the line feature used in the exercise is not technically synonymous with the minimum distance from which it can be seen!&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Create distance to line_feature map
echo &quot;\nDetermining distance from features\n&quot;
v.to.rast in=line_feature out=line_feature use=val val=1 --o --q
r.grow.distance -m input=line_feature distance=dist_from_line_feature --o --q
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This takes our line feature input and turns it into a raster; it then &quot;grows&quot; (raster buffers) this line... how far? To the same size as the entire GRASS region. There is no need to tell GRASS that; and it stores the output surface as a dataset specified by the rather misleading title of &lt;code&gt;distance&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Use distance to line_feature instead of sum of times seen in the result map
echo &quot;\nSubstituting number of times seen for distance to cell from line\n&quot;
r.mapcalc &quot;$OUTFILE = if(total_los, dist_from_line_feature, null())&quot; --o --v
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we use a bit of raster calculation (otherwise known as image manipulation) to make a new layer. To put the if statement into human terms: &quot;if there is a  non-null value of &lt;code&gt;total_los&lt;/code&gt; (i.e. a cell has been identified as visible), substitute its value with the value of the equivalent cell from the layer &lt;code&gt;dist_from_line_feature&lt;/code&gt; (a raster surface where each cell knows its minimum distance from the line feature), otherwise make its value null.&lt;/p&gt;
&lt;p&gt;The rest should be self-explanatory:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Write output (as geotiff)
r.out.gdal input=$OUTFILE output=../data/output/$OUTFILE.tif format=GTiff --o --v

# Clean up, removing the component visibility rasters, only after outputs have been written
echo &quot;\nDeleting temporary files\n&quot;
g.mremove -f &quot;tmp_los_*&quot; --q
g.mremove -f &quot;total_los_*&quot; --q

echo &quot;\ngenerate_los.sh complete\n&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The final output is simply a GeoTiff. Try opening it in QGIS if you have been playing along at home. If you&apos;re just reading, then in the &lt;a href=&quot;http://www.nearimprov.com/train-landscapes&quot;&gt;interactive map&lt;/a&gt;, the output GeoTiff is the special coloured layer you see on top of the basemap.&lt;/p&gt;
&lt;p&gt;So how do we get to this next stage?&lt;/p&gt;
&lt;h1&gt;Making Mapnik tiles with QTiles&lt;/h1&gt;
&lt;p&gt;There are a variety of ways to make map tiles.&lt;/p&gt;
&lt;p&gt;[[sidenote | Don&apos;t know what tiles are?]]
| That&apos;s OK, everyone had to find out at some point. I really liked &lt;a href=&quot;http://lyzidiamond.com/leaflet/#0&quot;&gt;this introduction&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/lyzidiamond&quot;&gt;Lyzi Diamond&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The simplest method for constructing map tiles, in my opinion, is to use a QGIS plugin called &lt;a href=&quot;https://github.com/nextgis/QTiles&quot;&gt;QTiles&lt;/a&gt;. You can control all your styling and extents with QGIS layers, and then just tell the plugin to go away and make your map tiles.&lt;/p&gt;
&lt;p&gt;To find out how to install a QGIS plugin, look &lt;a href=&quot;http://www.qgistutorials.com/en/docs/using_plugins.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The process for our purposes is rather simple.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The GRASS script spits out a GeoTiff.&lt;/li&gt;
&lt;li&gt;You add that to a QGIS project via the add raster layer button.&lt;/li&gt;
&lt;li&gt;The GRASS script also had access to a vector line feature (as well as creating a CSV point dataset from that). You can add one or both of these via the add vector layer button.&lt;/li&gt;
&lt;li&gt;To add context, add a pre-existing baselayer, or make your own. For example, you could create a colour relief map (hypsometric tint). &lt;a href=&quot;https://www.mapbox.com/tilemill/docs/guides/terrain-data/&quot;&gt;Mapbox has a good tutorial using more command line GIS&lt;/a&gt;, this time GDAL. I just took the easy route (again), and went for a Web Mapping Service (&lt;a href=&quot;https://data.linz.govt.nz/p/web-services/&quot;&gt;WMS&lt;/a&gt;) from the good folk at Landcare Research. Look for the add data button in the sidebar with the tooltip &quot;Add WMS/WMST Layer&quot;. When it opens, create a new connection using the URL to the Landcare Research WMS: &lt;code&gt;http://maps.scinfo.org.nz/basemaps/wms?&lt;/code&gt;. There are a variety of layers you can add (see image); the one I used is called the &quot;Landcover Terrain Map&quot;.&lt;/li&gt;
&lt;li&gt;Once you&apos;ve added this basemap, styled and ordered your layers and are happy with the appearance of your map, install QTiles and fire it up via the menu Plugins &gt; QTiles &gt; QTiles. See the second image below for example parameters. Just be cautious before going ahead with your settings: you are generating exponentially more tiles (i.e. PNG images) for each additional level of zoom (1 is the most zoomed out, 18 is the most zoomed in). I only generated tiles between zoom levels 7 and 13, because I knew I was going to restrict the user to these zoom levels in the end. Allow the tool to run, and you&apos;re ready to make a web map.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;./LR-example.png&quot; alt=&quot;Screenshot from QGIS 2.8, of the Landcare Research WMS.&quot; title=&quot;Screenshot from QGIS 2.8, of the Landcare Research WMS.&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./qtiles.png&quot; alt=&quot;Screenshot from QGIS 2.8, QTiles plugin.&quot; title=&quot;Screenshot from QGIS 2.8, QTiles plugin.&quot;&gt;&lt;/p&gt;
&lt;h1&gt;Making a web-ready map with Leaflet&lt;/h1&gt;
&lt;p&gt;There are lots of good tutorials on making webmaps, and I encourage you to explore them. I don&apos;t consider myself very good at making them (yet). This is a very simple example, using two tile datasets and allowing the user to switch between them.&lt;/p&gt;
&lt;p&gt;First, let&apos;s look at the HTML: the webpage that will contain our map. (The map itself is made in a JavaScript script.) The HTML is divided into the &lt;code&gt;head&lt;/code&gt; and the &lt;code&gt;body&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The head:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;#x3C;head&gt;
  &amp;#x3C;meta charset=&quot;utf-8&quot;&gt;
  &amp;#x3C;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;

  &amp;#x3C;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;

  &amp;#x3C;link rel=&quot;stylesheet&quot; href=&quot;http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css&quot; /&gt;
  &amp;#x3C;link rel=&quot;stylesheet&quot; href=&quot;./source/style.css&quot; /&gt;

  &amp;#x3C;meta http-equiv=&quot;Content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;
&amp;#x3C;/head&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is all pretty standard, if you&apos;ve ever hit &quot;View Page Source&quot; on a webpage. Can you see where we tell the page to read the Leaflet CSS (&lt;code&gt;leaflet.css&lt;/code&gt;)? And a custom bit of CSS (&lt;code&gt;style.css&lt;/code&gt;)?&lt;/p&gt;
&lt;p&gt;Now for the body:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;#x3C;body&gt;
    &amp;#x3C;!-- header div --&gt;
    &amp;#x3C;div id=&quot;title-text&quot;&gt;
      &amp;#x3C;h2&gt;
        Travelling overland between Auckland and Wellington: what can you see?
      &amp;#x3C;/h2&gt;
    &amp;#x3C;/div&gt;
    &amp;#x3C;!-- map div --&gt;
    &amp;#x3C;div id=&quot;map&quot;&gt;&amp;#x3C;/div&gt;
    &amp;#x3C;script src=&quot;http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js&quot;&gt;&amp;#x3C;/script&gt;
    &amp;#x3C;script src=&quot;./source/make_map.js&quot; type=&quot;text/javascript&quot;&gt;&amp;#x3C;/script&gt;
&amp;#x3C;/body&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We have two &lt;code&gt;div&lt;/code&gt; elements in the body, and two scripts. The first &lt;code&gt;div&lt;/code&gt; contains the header text you see at the top of the map. The second &lt;code&gt;div&lt;/code&gt;, with the ID of &lt;code&gt;&quot;map&quot;&lt;/code&gt;, contains our map, although there is very little indication yet that it actually does anything. The clue lies in the two pieces of JavaScript that get loaded next. The first is the standard Leaflet JavaScript that brings along the functionality of every Leaflet slippy map you&apos;ve ever seen. The second is a custom bit of code where we specify our own special map. This bit of code is in the Github respository, and is called &lt;code&gt;make_map.js&lt;/code&gt;. Let&apos;s take a look at that next.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var carViewshed = &apos;https://s3-ap-southeast-2.amazonaws.com/train-landscapes/car/{z}/{x}/{y}.png&apos;,
    trainViewshed = &apos;https://s3-ap-southeast-2.amazonaws.com/train-landscapes/rail/Mapnik/{z}/{x}/{y}.png&apos;,
    southWest = [-41.722,171.748],
    northEast = [-36.441,179.124],
    bounds = [southWest, northEast],
    attribution = &apos;Richard Law | \
    Pierre Roudier | \
    Basemap © &amp;#x3C;a href=&quot;http://maps.scinfo.org.nz/&quot;&gt;Landcare Research&amp;#x3C;/a&gt; 2014. Contains data sourced from LINZ. Crown Copyright Reserved. &amp;#x3C;a href=&quot;http://creativecommons.org/licenses/by/3.0/nz/&quot;&gt;CC BY 3.0 NZ&amp;#x3C;/a&gt; | \
    &amp;#x3C;a href=&quot;https://koordinates.com/layer/40-nz-road-centrelines-topo-150k/&quot;&gt;LINZ&amp;#x3C;/a&gt; &amp;#x3C;a href=&quot;http://creativecommons.org/licenses/by/3.0/nz/&quot;&gt;CC BY 3.0 NZ&amp;#x3C;/a&gt; | \
    &amp;#x3C;a href=&quot;http://grass.osgeo.org/&quot;&gt;GRASS GIS&amp;#x3C;/a&gt;&apos;,
    global_min_zoom = 7,
    global_max_zoom = 13;

var map = new L.Map(&apos;map&apos;);
map.setView([-38.6875, 176.0694], 7); //centre and zoom of map, initially
map.setMaxBounds(bounds);
map.options.minZoom = global_min_zoom;
map.options.maxZoom = global_max_zoom;

var car = L.tileLayer(carViewshed, {
  attribution: attribution,
  bounds: bounds,
  minZoom: global_min_zoom,
  maxZoom: global_max_zoom,
  tms: true,
  isBaseLayer: true,
}).addTo(map); //default layer, so add to map

var train = L.tileLayer(trainViewshed, {
  attribution: attribution,
  bounds: bounds,
  minZoom: global_min_zoom,
  maxZoom: global_max_zoom,
  tms: true,
  isBaseLayer: true,
}); //non-default layer, so don&apos;t add to map

var viewshedBasemaps = {
    &quot;Car/bus view&quot;: car,
    &quot;Overlander view&quot;: train
};

// Add the layer control to the map
L.control.layers(viewshedBasemaps).addTo(map);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first unbroken section of code above creates a bunch of variables. While the &lt;code&gt;var&lt;/code&gt; keyword is only used once, it could be used on each line if the commas at the end were omitted. &lt;code&gt;carViewshed&lt;/code&gt; and &lt;code&gt;trainViewshed&lt;/code&gt; are the relative paths to the hosted folders that contain the tiles we made earlier with QTiles. (I&apos;ll explain the Amazon business soon.) &lt;code&gt;southWest&lt;/code&gt; and &lt;code&gt;northEast&lt;/code&gt; are global parameters that I use to constrain the user&apos;s ability to move: I only want them to be able to scroll around the North Island... mostly because that&apos;s the only place I&apos;ve actually created any map. The variables &lt;code&gt;attribution&lt;/code&gt;, if you&apos;re paying attention, is the bit of text you see at the bottom of the map. Leaflet is good about using that, and so should you be.&lt;/p&gt;
&lt;p&gt;Notice that &lt;code&gt;global_max_zoom&lt;/code&gt; and &lt;code&gt;global_min_zoom&lt;/code&gt; correspond to the numbers I used in the tile generation step. I didn&apos;t make tiles beyond the range 7-13, so I don&apos;t let the user zoom beyond that range (otherwise they&apos;d see nothing).&lt;/p&gt;
&lt;p&gt;I then make a very important variable, &lt;code&gt;map&lt;/code&gt;, and set a few of its options:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var map = new L.Map(&apos;map&apos;);
map.setView([-38.6875, 176.0694], 7); //centre and zoom of map, initially
map.setMaxBounds(bounds);
map.options.minZoom = global_min_zoom;
map.options.maxZoom = global_max_zoom;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Later, we will call on this &lt;code&gt;map&lt;/code&gt; to actually display (you guessed it) a map.&lt;/p&gt;
&lt;p&gt;But first, I need to tell it what it&apos;s allowed to display.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var car = L.tileLayer(carViewshed, {
  attribution: attribution,
  bounds: bounds,
  minZoom: global_min_zoom,
  maxZoom: global_max_zoom,
  tms: true,
  isBaseLayer: true,
}).addTo(map); //default layer, so add to map

var train = L.tileLayer(trainViewshed, {
  attribution: attribution,
  bounds: bounds,
  minZoom: global_min_zoom,
  maxZoom: global_max_zoom,
  tms: true,
  isBaseLayer: true,
}); //non-default layer, so don&apos;t add to map
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I made two tile datasets, for the view from the car and from the train. The syntax for accessing them is naturally quite similar. There are more settings I didn&apos;t play with, and I even commented out two that didn&apos;t work very well after some experimentation.&lt;/p&gt;
&lt;p&gt;Without this next block of code, the map would function, but you would never be able to get to the &lt;code&gt;train&lt;/code&gt; tiles. So we add a controller to allow a user to switch between our two sets of map tiles:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var viewshedBasemaps = {
    &quot;Car/bus view&quot;: car,
    &quot;Overlander view&quot;: train
};

// Add the layer control to the map
L.control.layers(viewshedBasemaps).addTo(map);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;L&lt;/code&gt; refers to Leaflet, and I nutted out this bit of code by reading their excellent documentation. Note that &lt;code&gt;car&lt;/code&gt; and &lt;code&gt;train&lt;/code&gt; here are the &lt;code&gt;L.tileLayer&lt;/code&gt; variables we just defined. We tell Leaflet that we have two tile layers that we want to add to its set of &lt;code&gt;control.layers&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The final bit of work is to add some CSS. Stepping through the below code, we have the style for:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The webpage as a whole.&lt;/li&gt;
&lt;li&gt;The title text you see at the top of the webpage.&lt;/li&gt;
&lt;li&gt;The &quot;map&quot; &lt;code&gt;div&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The container of the leaflet map, which I have made transparent so that it is white like the rest of the page background.&lt;/li&gt;
&lt;li&gt;A style for the layer control so it pops more than the default. I wanted to emphasise the layer selector, as it is really the entire point of making contrasting viewsheds. This bit of CSS is a little complex; the best way to work it out is to fiddle with it.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;html, body {
    height: 100%;
}

#title-text{
  height: 8%;
  width: 100%;
  font-family: Helvetica;
  text-align: center;
}

#map{
   height: 89%;
   width: 100%;
   }

/* background of leaflet container: transparent \*/
.leaflet-container {
    background-color:rgba(255,0,0,0.0);
}

/* custom style for the layer control to make it a bit more obvious \*/
.leaflet-control-layers-toggle:after{
    content:&quot;Toggle transport mode&quot;;
    color:#000 ;
}
.leaflet-control-layers-toggle{
    width:auto;
    background-position:10px 50% ;
    padding:6px;
    padding-left:40px;
    padding-right:10px;
    text-decoration:none;
    line-height:36px;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;Getting the map online&lt;/h1&gt;
&lt;p&gt;So, you have used a complex geographic routine to make a cool viewshed for the North Island of New Zealand. You have made a working web map and added some custom flair. How do you show it off? There are lots of ways to host webpages, but since we&apos;re using Github, Github is actually a very good option for projects like these.&lt;/p&gt;
&lt;p&gt;In any Github project, if you make a branch called &lt;code&gt;gh-pages&lt;/code&gt;, some magic happens. &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github is the authority on the matter&lt;/a&gt;. Once you have your username.github.io repository ready, any &lt;em&gt;other&lt;/em&gt; repository you make can have a hosted website simply by making a &lt;code&gt;gh-pages&lt;/code&gt; branch.&lt;/p&gt;
&lt;p&gt;If this branch has an HTML file called &lt;code&gt;index.html&lt;/code&gt;, you can then find your special Github-hosted webpage via the URL: &lt;code&gt;https://{username}.github.io/{repository}&lt;/code&gt;. If this page happens to contain a map... then you have a map available on the Internet for the world to see, for free. You just have to be comfortable with the code (and often data) behind it being open to anyone.&lt;/p&gt;
&lt;p&gt;You can go one step further and also get a custom domain name, if you want to be able to link to something like &lt;a href=&quot;https://www.nearimprov.com/train-landscapes&quot;&gt;https://www.nearimprov.com/train-landscapes&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Amazon Web Services (AWS)&lt;/h2&gt;
&lt;p&gt;There&apos;s just one little problem left. The two sets of tiles, even though they have a constrained range of zoom levels and geographic extent, come to about three gigabytes of images. Github doesn&apos;t like that (I tried). So you need an alternative. Some kind of system where you can put lots of images in a directory structure on the Internet, and access them with a persistent URL. Amazon Web Services (AWS) is the cloud solution for you!&lt;/p&gt;
&lt;p&gt;If you sign up for an AWS account and navigate to your console, you should be able to see where you can create a &quot;bucket&quot;. Once you&apos;ve made your bucket, you can then create folders just like any other directory. Then, inside each folder, you can store your tiles.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./aws1.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./aws2.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;There are two catches:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;AWS is not free. Beyond a certain number of downloads you will be charged; I intend to monitor mine and remove the files before this happens.&lt;/li&gt;
&lt;li&gt;You need to programmatically upload your tiles, so you need to go back to that shell you love so well.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You need to install and configure &lt;code&gt;s3cmd&lt;/code&gt;. On Ubuntu it&apos;s in the official repositories, so it&apos;s as easy as the command &lt;code&gt;sudo apt-get install s3cmd&lt;/code&gt;. I have no idea how easy or difficult this is on other operating systems (I told you to use Linux!)&lt;/p&gt;
&lt;p&gt;If you&apos;ve sorted your account through your web browser, you need to request your access keys from your management console. You&apos;ll get given two of them, sent to you in a download that you keep to yourself. When you have these in front of you run &lt;code&gt;s3cmd --configure&lt;/code&gt; at the command line and provide the keys when requested. I just used the default answers to all the other questions.&lt;/p&gt;
&lt;p&gt;Now if you have set up your bucket and two folders &quot;car&quot; and &quot;rail&quot;, you can sync your local tiles generated with QTiles to Amazon CloudFront. This is also a relatively easy command, just be aware how much bandwidth you&apos;re using.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;s3cmd sync /path/to/car/tiles/ s3://bucket-name/car
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Repeat the above with your other tile dataset. Refer back to the JavaScript to see how I the referred to the URLs where you can see these images. You can see an example tile &lt;a href=&quot;https://s3-ap-southeast-2.amazonaws.com/train-landscapes/car/10/1007/381.png&quot;&gt;here&lt;/a&gt;, while it lasts.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./aws3.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./aws4.png&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Local tiles&lt;/h3&gt;
&lt;p&gt;In order to put tiles on Amazon&apos;s servers, you also need to have generated tiles locally. You can use these with Leaflet to preview your map offline. Simple substitute the URLs I used for carViewshed and trainViewshed with local paths, e.g.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var carViewshed = &apos;/data/tiles/rail/Mapnik/{z}/{x}/{y}.png&apos;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then you can use Python from your command line to serve up a webpage (Python 2.x):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;python -m SimpleHTTPServer
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Check out &lt;a href=&quot;http://localhost:8000/&quot;&gt;http://localhost:8000/&lt;/a&gt; once this server is running. (Press ctrl-c to get back in control of your command line.)&lt;/p&gt;
&lt;p&gt;[[newthought | Final comments]]
| I&apos;ve been frustrated many times in the past by the need to patch together a series of tutorials from different authors to actually get my own project off the ground, from data to a finished product. I hope this has been helpful for you to realise something from your own imagination.&lt;/p&gt;
&lt;p&gt;If there&apos;s any element that you feel needs better explanation, please leave a comment and I&apos;ll help you out.&lt;/p&gt;
&lt;p&gt;Similarly, if there&apos;s anything that you feel is a glaring mistake in my code, point it out, I&apos;d love to improve. I&apos;m sure I&apos;m fallible: Pierre&apos;s bash script was the first piece of programmatic bash that I&apos;d ever read; my changes were my first experience with shell scripts. I&apos;ve since found them very useful.&lt;/p&gt;
&lt;p&gt;Have fun!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[What is a headway?]]></title><description><![CDATA[A headway, as used in transit planning and modelling, is typically defined as the time between consecutive services. If you catch a bus that…]]></description><link>https://spatialparalysis.xyz/blog/headway/</link><guid isPermaLink="false">https://spatialparalysis.xyz/blog/headway/</guid><pubDate>Mon, 16 Jun 2014 20:38:41 GMT</pubDate><content:encoded>&lt;p&gt;A headway, as used in transit planning and modelling, is typically defined as the time between consecutive services. If you catch a bus that &quot;comes every half hour&quot;, then the service you catch has a headway of 30 minutes.&lt;/p&gt;
&lt;p&gt;This concept is deceptively simple, and this blog post will explain why. There are  several examples of transit analyses that I have seen that use an incorrect definition  of the headway.&lt;/p&gt;
&lt;p&gt;Defining the headway accurately is very important when modelling travel using public transport because it is used to determine how long we expect passengers will wait. Taking the example of the bus that comes every thirty minutes: if passengers all turn up to the stop without considering the schedule (that is, at random), we would expect the average passenger to be waiting there for a period of time equal to half the headway: 15 minutes.&lt;/p&gt;
&lt;p&gt;The Transit Capacity and Quality of Service Manual (&lt;a href=&quot;http://onlinepubs.trb.org/onlinepubs/tcrp/tcrp100/part%203.pdf&quot; title=&quot;TCQSM 2nd Edition, PDF&quot;&gt;TCQSM&lt;/a&gt;) has a pretty handy table on different headway classes and what they mean for waiting passengers. I&apos;ve taken this from the second edition of the TCQSM (rather than the 3rd), because I don&apos;t have access to the 3rd edition. I don&apos;t know if it has changed (a heads-up if it has would be great).&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;Level of Service (LOS)&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;Avg. Headway (min)&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;Vehicles/h&lt;/th&gt;
&lt;th&gt;Comments&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;A&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&amp;#x3C;10&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&gt;6&lt;/td&gt;
&lt;td&gt;Passengers do not need schedules&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;B&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;10-14&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;5-6&lt;/td&gt;
&lt;td&gt;Frequent service, passengers consult schedules&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;C&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;15-20&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;3-4&lt;/td&gt;
&lt;td&gt;Maximum desirable time to wait if bus/train missed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;D&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;21-30&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;2&lt;/td&gt;
&lt;td&gt;Service unattractive to choice riders&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;E&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;31-60&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1&lt;/td&gt;
&lt;td&gt;Service available during the hour&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;F&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&gt;60&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&amp;#x3C;1&lt;/td&gt;
&lt;td&gt;Service unattractive to all riders&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Stops with LOS A mean that passengers can just up and board their service with barely any waiting. Stops with LOS F require that passengers take time to plan their arrival at the stop and probably change their schedules before or after their trip: living their life around the schedule.&lt;/p&gt;
&lt;p&gt;The &quot;average headway&quot; in the table is the inverse of average frequency.&lt;/p&gt;
&lt;p&gt;So far, so good. Headways are the time between vehicles, and are useful as indications of how frequent a public transport service is, and therefore how long passengers wait. Average waiting time is complicated by the fact that not all passengers arrive to their stops at random, but I will not bother you with this for the moment, as this post is concerned with defining the headway, not waiting time, even if they are related.&lt;/p&gt;
&lt;h2&gt;Problem 1: Grouped arrivals&lt;/h2&gt;
&lt;p&gt;If I told you that a particular bus route had a frequency of 3 vehicles per hour, what would be headway on that route? Well, there&apos;s 60 minutes to an hour, and 3 services in that period. So we have 60/3=20 minute headway.&lt;/p&gt;
&lt;p&gt;However what if the schedule (or, you know, reality) had all three of these services arriving at the same time, perhaps because it is a bus interchange where three routes coincide before heading their separate ways, or because buses can get caught behind a late service (bunching). In this case, despite having a frequency of 3 vehicles per hour (LOS C), your headway could arguably be defined in two ways.&lt;/p&gt;
&lt;p&gt;The first is to assume that three services all arriving at once just count as one arrival. Your headway is then 60 minutes, and LOS E.&lt;/p&gt;
&lt;p&gt;The second is to acknowledge that O.K., the schedule says that they arrive at the same time, but it can&apos;t be &lt;em&gt;exactly&lt;/em&gt; the same time. Let&apos;s say for argument&apos;s sake, last Tuesday they arrived at 7:00 am, 7:01 am, and 7:02 am, and then again at 8 am. Let&apos;s call this Arrival Pattern A. Your headway as we have so far defined it is one minute for the first bus, one minute for the second, and 58 minutes for the third. Your average headway in this period is (1+1+58)/3=20 minutes, LOS C. So we&apos;re back at 20 minutes! But hold on, none these buses has a 20 minute headway when considered as an individual arrival.&lt;/p&gt;
&lt;p&gt;This is tricky. What does the TCQSM recommend (p. 3-29)?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Some judgment must be applied to bus stops located near timed transfer centers. There is a considerable difference in service from a passenger’s perspective between a bus arriving every 10 minutes and three buses arriving in a row from a nearby transfer center every 30 minutes, even though both scenarios result in six buses per hour serving the stop. In general, buses on separate routes serving the same destination that arrive at a stop within 3 minutes of each other should be counted as one bus for the purposes of determining service frequency LOS.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As it so happens, the TCQSM therefore suggests using the first approach, where buses that arrive within three minutes of each other are considered as one bus. So the 7:00, 7:01 and 7:02 buses would collapse down to some time point in the range 7:00-7:02. I&apos;m not sure what moment exactly should be used within this range. It may sound picky to be wondering if the representative arrival is 7:00 or 7:02, but when writing code to calculate these headways for you, you have to make rather precise decisions. I&apos;d guess it&apos;d be the average of these values, so 7:01 am.&lt;/p&gt;
&lt;p&gt;However, if the buses arrived at 7:00, 7:04, 7:08 and 8:00, we&apos;d be back to an average headway of 20 minutes, and square one. We&apos;ll call this Arrival Pattern B.&lt;/p&gt;
&lt;h3&gt;Median headway&lt;/h3&gt;
&lt;p&gt;This issue is why, when aggregating headways (rather than determining the headways of particular trips) over an interval of time, the median headway is sometimes used instead of the average headway. With a median headway, the potential to calculate a headway that is never exhibited in reality is reduced.&lt;/p&gt;
&lt;p&gt;For the two examples given in this section, Arrival Pattern A has a median headway of 1 minute. Arrival Pattern B has a median headway of 4 minutes.&lt;/p&gt;
&lt;p&gt;That&apos;s not quite right. If you were to use this as your headway for the purposes of determining the average waiting time of a randomly-arriving passenger, they&apos;d be waiting for 0.5 minutes (AP A) or 2 minutes (Arrival Pattern B).&lt;/p&gt;
&lt;h3&gt;Is it a problem?&lt;/h3&gt;
&lt;p&gt;I got to this point in my thinking and after a bit of time spent smashing my head into my desk, I asked myself whether it was really a problem if the average headway in Arrival Patterns A and B can be 60 and 20 minutes, respectively. This seems like a very big difference in headway (and hence waiting time) for such a small difference in vehicle arrivals. However, if passengers are arriving uniformly at random over the hour 7:00-8:00, then the average passenger &lt;em&gt;does&lt;/em&gt; indeed wait for -20 minutes in Arrival Pattern B. In Arrival Pattern A, three minutes, while arbitrary, does seem like a reasonable amount of time to consider services to be functionally arriving at the same time, given acceptable levels of variation in arrival time.&lt;/p&gt;
&lt;p&gt;That&apos;s fine and dandy for little examples like AP A and B above. But what if you have a major stop where buses typically arrive every minute for the entire hour? What is the headway? We&apos;ll call this Arrival Pattern C. In this case, the frequency-derived measurement of headway (60 arrivals in 60 minutes, so 1 minute headways) is spot-on.&lt;/p&gt;
&lt;p&gt;But the TCQSM just told us that arrivals less than 3 minutes apart should be considered equivalent to the arrival of only one vehicle. So the 7:00 and 7:01 arrivals are equivalent to each other. And the 7:01 and the 7:02. And the 7:02 and the 7:03. In fact, taking the TCQSM&apos;s advice to the letter (as code written to solve this problem would naïvely), the whole pattern of arrivals would be reduced down to one single arrival and a headway of 60 minutes for the 7:00-8:00 period!&lt;/p&gt;
&lt;h3&gt;What do you do?&lt;/h3&gt;
&lt;p&gt;Thinking about these problems, the most defensible solution I have come up with is to take the TCQSM&apos;s grouping advice, but modify it slightly so we don&apos;t avoid that last incomprehensible travesty. I would &lt;em&gt;bin&lt;/em&gt; all arrivals into groups of four minutes. So for Arrival Pattern C (arrivals every minute for an hour), we&apos;d see single arrival events at 7:00, 7:04, 7:08, 7:12, and so on. 60 arrivals would be reduced to 15, each with four minute headways. The average and the median headways in this case would then both be four minutes, with an average waiting time of two minutes.&lt;/p&gt;
&lt;p&gt;For AP B (7:00, 7:04, 7:08, and 8:00), no modification of the arrivals is required, and the average headway is 20 minutes.&lt;/p&gt;
&lt;p&gt;For AP A (7:00, 7:01, 7:02, and 8:00), we would modify the arrival pattern to be 7:00 and 8:00, as the three arrivals near the start of the hour are grouped into the same bin. If there was a fourth service at 7:03, the pattern would be the same, as well as the average headway (60 minutes). When we get an additional service at 7:04, our (grouped) arrival pattern becomes 7:00, 7:04, 8:00, and &lt;strong&gt;our average headway becomes 30 minutes&lt;/strong&gt; rather than 60. The median also changes from 60 to 30.&lt;/p&gt;
&lt;p&gt;This last case may not seem ideal, but let&apos;s recap the possible alternatives.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A literal interpretation of the TCQSM has us grouping all of the first five arrivals into
one, leading to only one headway of &lt;strong&gt;60 minutes&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Without grouping, we&apos;d have headways of 1, 1, 1, 1, and 56 minutes, for an average
of &lt;strong&gt;12 minutes&lt;/strong&gt;, and a median of 1 minute. Notice that the average headway is the same
as that determined from the frequency per hour (5 arrivals in 60 minutes).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Deciding which method to follow is tricky. I don&apos;t have a clear favourite; but if forced to pick,
I like the method that uses the bins. It acknowledges the TQCSM&apos;s recommendation that
arrivals close in time be considered functionally equivalent, and results in a headway
that falls between the other two estimates derived from alternative interpretations.&lt;/p&gt;
&lt;p&gt;From the perspective of someone who has to calculate these values programmatically, it
adds a bit of overhead, particularly over the simple arrivals per hour calculation. However that
calculation does not account for the scheduled arrivals, and I would not recommend it, ever.&lt;/p&gt;
&lt;h2&gt;Problem 2: The destination matters&lt;/h2&gt;
&lt;p&gt;I&apos;ve been a little dishonest in my definition of what a headway is. Well, I&apos;ve said a half-truth. The headway &lt;em&gt;is&lt;/em&gt; the time between vehicle arrivals at a stop. However, all arrivals are not equivalent. What matters is &lt;strong&gt;where they are going&lt;/strong&gt;. Let&apos;s say we have a network with stops A-E serviced by three different routes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./network-headway-diagram.png&quot; alt=&quot;Network headway diagram&quot;&gt;&lt;/p&gt;
&lt;p&gt;If you&apos;re seeking to travel directly from A to D, you don&apos;t at all care that there is a blue line between A and E. So even if a blue line service arrived at A every minute of every day, it would do you no good to board it (we&apos;ll assume you can&apos;t walk between any of the stops). That is, if travelling A-D, your headway is defined only as the headway of the green route.&lt;/p&gt;
&lt;!-- [[sidenote | For the colourblind...]]
| ... red is solid, blue is dashed, and green is dotted. --&gt;
&lt;p&gt;Now if you&apos;re instead travelling A-C, you can choose between the red and the green routes. Unless these services arrive at A at the same time, your headway (and hence waiting time) is less than it would be if you were travelling A-D, even though you are waiting at the same stop. This path A-B-C is a public transport &lt;em&gt;corridor&lt;/em&gt; of overlapping routes.&lt;/p&gt;
&lt;p&gt;Travelling A-E, you again benefit from the corridor effect, as your line is shared between the blue and the red services. Note, however, that although these overlapping routes work together to reduce your headway, you may not necessarily choose to board the first red or blue service that arrives. For instance, if blue is an express route that travels A-E while red is a slower route that stops at A-B-C-E, you may be aware that skipping that red bus that just turned up at A in favour of waiting just a little bit longer for the next blue bus is better, because the blue bus will get you to E in better time.&lt;/p&gt;
&lt;p&gt;Given this, what&apos;s the headway? If the headway is used as a proxy for waiting time, how can it account for the presence of express routes that may give people an incentive to wait a little bit longer for a faster route? Given that you don&apos;t &lt;em&gt;know&lt;/em&gt; with certainty that the blue bus is going to turn up quickly enough for your gamble to pay off, what is your expected waiting time?&lt;/p&gt;
&lt;p&gt;Further, what about the possibility of taking a green bus to C and then waiting at C for a red bus to take you all the way to E? Might sound weird given transfers are annoying, but it&apos;s certainly an advantage to have this option if C is more comfortable or well-lit as a place to wait than is A.&lt;/p&gt;
&lt;p&gt;These are very tricky questions with very tricky answers. The key thing to keep in mind, however, is the mantra: &lt;strong&gt;the destination matters&lt;/strong&gt;. To this end, the TCQSM does acknowledge that headways are defined with respect to a particular destination. By no means has this been clearly stated, however. To quote their fuller definition (p. 3-29):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Service frequency LOS is determined by destination from a given transit stop, as several routes may serve a given stop, but not all may serve a particular destination.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Take home point: a stop served by more than one route with multiple possible destinations doesn&apos;t have a single headway; it has a headway for each possible direct destination from each stop.&lt;/p&gt;
&lt;h3&gt;How do you calculate headways when the destination matters?&lt;/h3&gt;
&lt;p&gt;An issue here, from the perspective of someone who wants to calculate headways from a published schedule (e.g. from your local GTFS) or from observation of real-time service arrivals, is that as soon as we define headways not as one number for each stop, but as one number for each possible board-egress stop pair, the dimensionality of the problem grows.&lt;/p&gt;
&lt;p&gt;Given this blog is ostensibly about transit visualisation, I&apos;ll make a diagram for this. This is the exact same sample network as we had before, but now shown in terms of the direct stop edges that exist. If you&apos;re to find the headway of travel A-C, you simply need to look at the two edges that progress uninterrupted from A to C, and ignore all others. This is convenient.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./network-headway-diagram-logical.png&quot; alt=&quot;Logical network headway diagram&quot;&gt;&lt;/p&gt;
&lt;p&gt;The problem with this is that the number of edges we have in the network has grown. Where before we had 7 edges all holding information in our database (route, time, mode, etc.), we now have 11. This increase of three doesn&apos;t sound big, but the only reason it is small is because I have drawn a very simple network. Despite being simple, this is still coming up against the limits of what I can reasonably convey in an diagram, what with its overlapping lines.&lt;/p&gt;
&lt;p&gt;If instead of 5 stops I had drawn 60 stops, the number of edges now represented would be approximately half of the number of stops squared (see below equation, $s$ is the number of stops in the network, per route). For instance, in a 60-stop route, the first stop now has 59 edges leaving from it. The second would have 58, the third 57, and so on. Before we changed to this representation, we had &lt;strong&gt;59&lt;/strong&gt; edges. Now there&apos;s &lt;strong&gt;1770&lt;/strong&gt;. Across an entire transport network of thousands of stops and overlapping routes, where before we had thousands of edges, we now have thousands of millions and you&apos;re looking at moving from a database less than one GB in size to one in the tens of GBs or more, depending on how exactly you choose to structure and aggregate your data.&lt;/p&gt;
&lt;p&gt;$$
\text{number of edges} = \frac{s^{2}-s}{2}
$$&lt;/p&gt;
&lt;p&gt;This problem is tractable (although takes a bit of crafty SQL) for a schedule or small database of real-time observations. If you want to calculate the average travel time, or headway or some other parameter for each of the millions of edges in this reconfigured network representing several years, you&apos;ve got your work cut out for you. Unfortunately, that&apos;s exactly where I find myself.&lt;/p&gt;
&lt;h2&gt;Problem 3: What is the headway of the last service?&lt;/h2&gt;
&lt;p&gt;Imagine you have a commuter service that is scheduled to arrive at your stop at 7:00 and then 7:30 in the morning. What is the headway? Well, for the 7:00 service, it&apos;s half an hour. That&apos;s fair. But the 7:30 service? Assuming there&apos;s a 7:00 service tomorrow, your headway is 23 hours and 30 minutes, right?&lt;/p&gt;
&lt;p&gt;Plug that in to your script for calculating headways and you now have an average headway of twelve hours. Enjoying your 6 hour wait, average passenger?&lt;/p&gt;
&lt;p&gt;If using headways to get an average waiting time, one would presumably have a ceiling on the waiting time. Especially when the headways are such that you&apos;d be mad or critically uninformed not to check the schedule.&lt;/p&gt;
&lt;p&gt;Why have I never seen this problem mentioned? I don&apos;t see it in the TCQSM. I don&apos;t see it in any academic paper that has used &quot;headway&quot; as though it is something you can touch with your hands.&lt;/p&gt;
&lt;p&gt;Given I&apos;m facing this issue, what do I do? I can&apos;t be the only who has thought about it.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;If I had a nickel for every time I&apos;ve read a paper where someone has constructed a computer model of a public transport network and simply said:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Waiting time is calculated as half of the headway.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I&apos;d have very many nickels. The headway &lt;strong&gt;of what&lt;/strong&gt;? Have you considered overlapping routes? Did you calculate the headway as a mean or a median? Over what time interval? What did you do if one of the arrivals is the last one for the day?&lt;/p&gt;
&lt;p&gt;Calculating a headway is deceptively simple. If you get into the business of calculating them for whatever purpose, I implore you to clearly state exactly what you did to calculate them. Talk about corner cases. Talk about how you wrote your program to calculate them efficiently as pairs of stops.&lt;/p&gt;
&lt;p&gt;Because I&apos;ll have your head if you tell me that you used &quot;the headway&quot; and leave it at that.&lt;/p&gt;
&lt;h3&gt;Care to weigh in?&lt;/h3&gt;
&lt;p&gt;Have you dealt with calculating headways from schedules or real-time observations of transit arrivals? What issues did you come across? How did you deal with them?&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Commuting and dropping the kids off at school]]></title><description><![CDATA[I have recently been fortunate enough to gain access to the real-time information (RTI) for buses and trains in the Wellington region. This…]]></description><link>https://spatialparalysis.xyz/blog/the-school-run/</link><guid isPermaLink="false">https://spatialparalysis.xyz/blog/the-school-run/</guid><pubDate>Fri, 13 Jun 2014 05:44:17 GMT</pubDate><content:encoded>&lt;p&gt;I have recently been fortunate enough to gain access to the real-time information (RTI) for buses and trains in the Wellington region. This is the information that gets displayed in the box at your bus or train stop giving an estimate of how many minutes until your bus arrives. This information isn&apos;t publicly available as a download or as an API, although you can try your luck looking at &lt;a href=&quot;http://m.metlink.org.nz/stop/5006&quot; title=&quot;Change the number at the end of the URL for a different stop&quot;&gt;the mobile version of the Metlink website&lt;/a&gt;. Building statistics from that is a different thing entirely. I tried to write a program to scrape the information, but you have to look at each stop individually and &quot;Due&quot;, &quot;2 mins&quot;, &quot;3 mins&quot;, etc. isn&apos;t actually very useful beyond catching your service.&lt;/p&gt;
&lt;p&gt;Here is something I whipped up today. It demonstrates not only the travel time variation along a single bus route, but also how the mean travel time changes according to different conditions. In particular, I added information to the dates stored with the data to be able to distinguish trips made on &quot;ordinary&quot; weekdays where people are going to work and school, school holiday weekdays, and weekends.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./airport91_ttcomparison.png&quot; alt=&quot;Travel time data from the Greater Wellington Regional Council (GWRC), for the Airport Flyer (route 91).&quot; title=&quot;Travel time data from the Greater Wellington Regional Council, for the &amp;#x22;Airport Flyer&amp;#x22;.&quot;&gt;&lt;/p&gt;
&lt;p&gt;This data covers all of April 2014. This year, both primary and secondary school holidays began on April 17, and lasted until May 5, so the data is split roughly evenly between weekdays where little Johhny is being ferried to school, and days when he is not. Most of us know from experience that traffic congestion is worse in the school term than in the school holidays. But how much? Well, if we take &lt;a href=&quot;http://www.metlink.org.nz/timetables/bus/091/inbound&quot; title=&quot;Click to see the route&quot;&gt;the Airport Flyer bus route&lt;/a&gt; as a unit of analysis, school-related congestion adds about 14 minutes of travel time across the length of the route. This mostly accrues between Jackson St and Murphy St. For those of you playing at home, that&apos;s the longest stretch between stops at approximately 15 kilometres, and takes in the busiest section of State Highway 2 and the urban motorway. However, from experience as a rider on this route, a lot of this additional travel time comes from Petone (Jackson St/Hutt Rd, attempting to get onto SH2). Also from experience as a resident in Petone, &lt;strong&gt;school congestion is a total time killer&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;[[newthought | What can cause variation in travel time apart from school-related congestion?]]
| Influences include: passengers getting on and off; road maintenance; bus driver behaviour; non-school related road congestion; the weather.&lt;/p&gt;
&lt;p&gt;Now, it is possible to separate out these different effects, although I leave that as an exercise for the reader. I picked only a single month to ensure I&apos;d be comparing apples with apples to the greatest extent possible.&lt;/p&gt;
&lt;p&gt;[[sidenote | Admittedly...]]
| Admittedly, April &lt;strong&gt;did&lt;/strong&gt; see a bit of roadworks between Petone and Wellington that would have affected this route. However, this work was being performed just as intensely during the school term and the weekend as for the rest of April—so there is no reason to attribute the difference to that.&lt;/p&gt;
&lt;p&gt;School children don&apos;t typically board the Airport bus, not only because it goes to the Airport, but because it carries a surcharge. Some amount of variation is perhaps due to buses on this route getting stuck behind the buses on other routes which school children are boarding in the school term, and are not boarding in the holidays.&lt;/p&gt;
&lt;p&gt;It&apos;s been noted that New Zealand has seen a significant increase in the proportion of children and teenagers who are driven (or drive themselves) to school. Often the impact on obesity is noted, as well as the opportunity cost of missed early morning exercise which could help boost attention spans.&lt;/p&gt;
&lt;p&gt;However, I have not seen it mentioned how this effects our transport system beyond a general acceptance that congestion is worse. Although I have only shown you one chart, I have played around with displaying the same information for a variety of routes. The typical result for buses is that the mean travel time is greater during the school term than outside of it. In terms of the variation around this mean, every example I have plotted has shown a much greater standard deviation of travel time.&lt;/p&gt;
&lt;h2&gt;Buses take longer and are less dependable&lt;/h2&gt;
&lt;p&gt;What does that mean?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It means buses are generally getting &lt;strong&gt;stuck in school traffic&lt;/strong&gt;, causing people to be &lt;strong&gt;later than they otherwise need to be&lt;/strong&gt;, or making people feel they need to leave home earlier than otherwise (to avoid missing the bus).&lt;/li&gt;
&lt;li&gt;It means &lt;strong&gt;buses are more late more often&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;It means public transport users have &lt;strong&gt;less certainty about their arrival time&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;It means the &lt;strong&gt;schedule becomes less useful as a tool to reduce the amount of time you spend waiting&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Notably, the effect is much more limited for rail services, which do not succumb to any of that school-gate SUV madness.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Global Isochrone Travel Time from London (1881)]]></title><description><![CDATA[Here's an interesting historical map that turned up on /r/MapPorn today. Made by Francis Galton for the Proceedings of the Royal Geographic…]]></description><link>https://spatialparalysis.xyz/blog/global-travel-isochrone-1881/</link><guid isPermaLink="false">https://spatialparalysis.xyz/blog/global-travel-isochrone-1881/</guid><pubDate>Fri, 13 Jun 2014 10:33:38 GMT</pubDate><content:encoded>&lt;p&gt;Here&apos;s an interesting historical map that turned up on &lt;a href=&quot;http://www.reddit.com/r/MapPorn/comments/27yfn0/isochronic_passage_chart_for_travelers_global_map/&quot; title=&quot;Link to Reddit thread&quot;&gt;/r/MapPorn&lt;/a&gt; today. Made by Francis Galton for the Proceedings of the Royal Geographic Society in 1881, I find it particularly interesting because it represents the state of international travel only a decade or so after my Scottish and Irish ancestors travelled to New Zealand.&lt;/p&gt;
&lt;p&gt;I know the most about the travelling arrangements of my Scottish ancestors. They travelled with a stop over in Cape Town, South Africa. The &lt;a href=&quot;http://www.ngaiopress.com/blundlst.htm&quot;&gt;Blundell&lt;/a&gt; is the ship my ancestors who share my surname were on, and it arrived in Dunedin apparently 40+ days since it left Scotland. Robert Law, who was three years old (!) when he made the journey, eventually married Jean Harrison, who was also on the Blundell (as a one-year-old!). It is precisely that historical fact that provides a direct link to this content you are reading right now. Never complain about a baby crying on a forty-minute flight.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./global-isochrone-travel-time-from-london-1881.jpg&quot; alt=&quot;Isochronic passage chart for travellers.&quot; title=&quot;Isochronic passage chart for travellers.&quot;&gt;&lt;/p&gt;
&lt;p&gt;The work of cartographers past is often so impressive on their own merits (although I suspect the chaff has been cut with time) yet when you also consider the technology that they &lt;em&gt;didn&apos;t&lt;/em&gt; have to make their maps... the mind boggles and you realise that all of use currently practising the skill have it so easy. Really, if work of this calibre could be made then, there are no excuses for bad maps now.&lt;/p&gt;
&lt;p&gt;One particular technique I&apos;d like to draw attention to is the shape of the coastlines. They&apos;re &lt;em&gt;really wobbly&lt;/em&gt;. I suspect this is probably because nice little shapefiles didn&apos;t exist for downloading—but the effect that this has is to express that coastlines are complex features even if that complexity isn&apos;t well known. Rather than generalise coastlines to rather round shapes (which would be fine at this scale, really), they have been deliberately densified.&lt;/p&gt;
&lt;p&gt;Finally:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It is supposed that local preparations have been made and that other circumstances are favourable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I love this. These kind of assumptions have been made for over a hundred years in transportation analysis and cartography. Always read the fine print.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[One Day in Montréal]]></title><description><![CDATA[This video of Montréal's transit system fell across my path today, made by Colin Stewart and Ahmed El-Geneidy at McGill University's School…]]></description><link>https://spatialparalysis.xyz/blog/montreal-transit-video-critique/</link><guid isPermaLink="false">https://spatialparalysis.xyz/blog/montreal-transit-video-critique/</guid><pubDate>Thu, 12 Jun 2014 05:58:10 GMT</pubDate><content:encoded>&lt;p&gt;This video of Montréal&apos;s transit system fell across my path today, made by Colin Stewart and Ahmed El-Geneidy at McGill University&apos;s School of Urban Planning. I&apos;ve been reading a bit of professor El-Geneidy&apos;s work recently for my own research, and I&apos;ve recently been entertaining the idea of visiting Montréal for an extended period of time once I print a thesis onto a reconstituted tree. Providence?&lt;/p&gt;
&lt;p&gt;&lt;code&gt;youtube:http://www.youtube.com/embed/1ztMm5xmk3M&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The video shows 24 hours of transit for the Société de transport de Montréal (STM), from 4:30 in the morning. It drills down to the level of individual scheduled trips. It distinguishes between the green, orange, yellow and blue metro lines as well as buses operating every ten minutes
(the purple points) and &quot;regular&quot; buses (white).&lt;/p&gt;
&lt;p&gt;It is presented on quite a high-resolution basemap, with plenty of attendant information.&lt;/p&gt;
&lt;p&gt;While it is an interesting look at the network operation, there are a handful of problems I have with this video that anyone reading may like to think about if they are to make their own animation.&lt;/p&gt;
&lt;p&gt;Note: if you&apos;re content with just looking at the cool flashing lights (and it is cool!) don&apos;t bother reading on. I&apos;m going to focus on the negatives and leave the positives as self-evident. Oh, I&apos;m such an optimistic young fellow.&lt;/p&gt;
&lt;h2&gt;Critique&lt;/h2&gt;
&lt;p&gt;Firstly, the information given in the video margins is a little overbearing, and isn&apos;t even what I would consider to be the most important information. We are not told what day of the week is represented (weekday schedules are typically different from Saturday and Sunday schedules), or where the data is from. Even in the video description, we have no link to further information. It almost seems as though it is a recruitment device for transit buffs to hit McGill&apos;s website. Which worked for me, let it be known, but I&apos;d still like some more information on how this was constructed--especially if it is made with open data.&lt;/p&gt;
&lt;p&gt;The margin of the video could be improved if the unnecessary information was removed entirely (and left to text descriptions or the embedding web page) or allowed to fade out after the first 20 or so seconds. Ideally, only time would remain after this introductory period.&lt;/p&gt;
&lt;p&gt;The base map, although nice in isolation, is too distracting. The blue &apos;pops&apos; when it is the least important piece of information on the map. The St. Lawrence River can be used here to give context to the map, but even in this capacity the basemap works against intuition by orienting the map away from north. As a foreigner, I am only vaguely aware of the shape of Montréal, but I still would have recognised it immediately if north was up as per convention. In short, the colours and orientation of the basemap ensure the basemap fails at its primary goal of providing immediate contextual recognition.&lt;/p&gt;
&lt;p&gt;Both colour and size are used to distinguish the types of modes represented, which is appropriate. For the metro lines, the yellow and orange are hard to distinguish on moving objects that (seem?) to share a line, although the use of a track is good. I don&apos;t know if the capacity of a vehicle on the metro is several orders of magnitude greater than a bus, but it probably is, and the relative size of the metro to the buses is appropriate. However I think the metro points are probably a little too big, as they bleed into each other and obscure the bus routes.&lt;/p&gt;
&lt;p&gt;I think the two types of bus should have points of the same size (unless one has a greater per-vehicle capacity), and allow small traces for the vehicles to distinguish the higher frequency in one, which should emerge naturally if they are indeed high-frequency.&lt;/p&gt;
&lt;p&gt;It is also worth asking whether the format is appropriate. Is a video a useful format for presenting this information? The people in the comments seem happy enough, with only one or two pointing out that this shows an idealised system where nothing comes early or late... or arrives with no seats left. Could an interactive data visualisation show the same information with additional value? I think so; particularly in that I&apos;d like to zoom into particular neighbourhoods. I do appreciate, however, that the authors of the video probably did this in their free time, and a video has higher bang for your buck.&lt;/p&gt;
&lt;p&gt;The other in-your-face issue with video as a format is that you&apos;re stuck with the frame rate the authors found most interesting... or bearable given the number of times they must have seen this in preparing it. I&apos;d love to slow it down during the busiest moments, but alas.&lt;/p&gt;
&lt;p&gt;The music! Rarely do you see cartography paired with music, but here it is. Jury&apos;s still out on whether it&apos;s anything more than just a little irritating though.&lt;/p&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;Overall, this is an effective and interesting visualisation, but one that needs a tidy-up around the edges--literally and figuratively.&lt;/p&gt;</content:encoded></item></channel></rss>